{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\webAPI work\\\\web\\\\dog-website\\\\src\\\\comments.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState, useEffect } from \"react\";\nimport axios from './axios';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Comments() {\n  _s();\n\n  const [success, setSuccess] = useState(false);\n  const userRef = useRef();\n  const errRef = useRef();\n  const [errMsg, setErrMsg] = useState(\"\");\n  const [data, getData] = useState([]);\n  const [name, setName] = useState(\"\");\n  const [commentmsg, setCommentmsg] = useState(\"\");\n  const URL = 'http://localhost:3000/comments';\n  const refresh = useRefreshToken();\n  useEffect(() => {\n    userRef.current.focus();\n  }, []);\n  useEffect(() => {\n    setErrMsg(\"\");\n  }, [name, commentmsg]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      const response = await axios.post(URL, JSON.stringify({\n        name,\n        commentmsg\n      }), {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        withCredentials: true\n      });\n      setName(\"\");\n      setCommentmsg(\"\");\n      setSuccess(true);\n    } catch (err) {\n      if (!(err !== null && err !== void 0 && err.response)) {\n        setErrMsg(\"No Server Response\");\n      }\n\n      errRef.current.focus();\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const fetchData = () => {\n    fetch(URL).then(res => res.json()).then(response => {\n      console.log(response);\n      getData(response);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: success ? /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Comment Created!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"commentform\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          ref: errRef,\n          className: errMsg ? \"errmsg\" : \"offscreen\",\n          \"aria-live\": \"assertive\",\n          children: errMsg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"addcommenttext\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Add a comment!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"commentbox1\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"name\",\n              children: \"Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"name\",\n              ref: userRef,\n              autoComplete: \"off\",\n              onChange: e => setName(e.target.value),\n              value: name,\n              required: true,\n              \"aria-describedby\": \"uidnote\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"commentbox2\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"commentMsg\",\n              children: \"Comment:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"commentmsg\",\n              onChange: e => setCommentmsg(e.target.value),\n              value: commentmsg,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"addcommentbut\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => refresh(),\n              children: \"Create comment!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"line\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 2\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"commentthingy\",\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Comment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 9\n          }, this), data.map((item, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: item._id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.commentmsg\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.location\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 13\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 11\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 1\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(Comments, \"vVTDCtaGhrh3mR8Sei8YWJBwtq4=\", true);\n\n_c = Comments;\nexport default Comments;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["React","useRef","useState","useEffect","axios","Comments","success","setSuccess","userRef","errRef","errMsg","setErrMsg","data","getData","name","setName","commentmsg","setCommentmsg","URL","refresh","useRefreshToken","current","focus","handleSubmit","e","preventDefault","response","post","JSON","stringify","headers","withCredentials","err","fetchData","fetch","then","res","json","console","log","target","value","map","item","i","_id","location"],"sources":["C:/Users/Administrator/Desktop/webAPI work/web/dog-website/src/comments.js"],"sourcesContent":["import React, {useRef,useState, useEffect } from \"react\";\nimport axios from './axios';\nimport './App.css';\n\nfunction Comments() {\n\n  const [success, setSuccess] = useState(false);\n  const userRef = useRef();\n  const errRef = useRef();\n  const [errMsg, setErrMsg] = useState(\"\");\n  const [data, getData] = useState([]);\n  const [name, setName] = useState(\"\");\n  const [commentmsg, setCommentmsg] = useState(\"\");\n  const URL = 'http://localhost:3000/comments';\n  const refresh = useRefreshToken();\n  useEffect(() => {\n    userRef.current.focus();\n  }, []);\n\n  useEffect(() => {\n    setErrMsg(\"\");\n  }, [name, commentmsg]);\n\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n   \n\n    try {\n      const response = await axios.post(\n        URL,\n        JSON.stringify({ name, commentmsg}),\n        {\n          headers: { \"Content-Type\": \"application/json\" },\n          withCredentials: true\n        }\n      );\n\n      setName(\"\");\n      setCommentmsg(\"\");\n     \n      setSuccess(true);\n\n    } catch (err) {\n      if (!err?.response) {\n        setErrMsg(\"No Server Response\");\n      }\n      errRef.current.focus();\n    }\n  };\n\n  useEffect(() => {\n      fetchData()\n  }, [])\n\n\n  const fetchData = () => {\n      fetch(URL)\n          .then((res) =>\n              res.json())\n\n          .then((response) => {\n              console.log(response);\n              getData(response);\n          })\n\n  }\n\n  return (\n<>\n{success ? (\n        <section>\n          <br></br>\n          <h1>Comment Created!</h1>\n        </section>\n      ) : (\n        <section>\n <div className=\"commentform\">\n            <p\n              ref={errRef}\n              className={errMsg ? \"errmsg\" : \"offscreen\"}\n              aria-live=\"assertive\"\n            >\n              {errMsg}\n            </p>\n            <div className=\"addcommenttext\">\n              <h1>Add a comment!</h1>\n            </div>\n\n          \n\n            <form onSubmit={handleSubmit}>\n              <div className=\"commentbox1\">\n                <label htmlFor=\"name\">Name:</label>\n                <input\n                  type=\"text\"\n                  id=\"name\"\n                  ref={userRef}\n                  autoComplete=\"off\"\n                  onChange={(e) => setName(e.target.value)}\n                  value={name}\n                  required\n                  aria-describedby=\"uidnote\"\n                />\n              </div>\n              <div className=\"commentbox2\">\n                <label htmlFor=\"commentMsg\">Comment:</label>\n                <input\n                  type=\"text\"\n                  id=\"commentmsg\"\n                  onChange={(e) => setCommentmsg(e.target.value)}\n                  value={commentmsg}\n                  required\n                />\n              </div>\n           \n\n              <div className=\"addcommentbut\">\n                <button onClick={() => refresh()}>Create comment!</button>\n              </div>\n            </form>\n            <p>\n              <span className=\"line\"></span>\n            </p>\n          </div>\n\n         \n\n<div className=\"commentthingy\">\n<tbody>\n        <tr>\n          <th>ID</th>\n          <th>Name</th>\n          <th>Comment</th>\n         \n        </tr>\n        {data.map((item, i) => (\n          <tr key={i}>\n            <td>{item._id}</td>\n            <td>{item.name}</td>\n            <td>{item.commentmsg}</td>\n            <td>{item.location}</td>\n         \n          </tr>\n        ))}\n      </tbody>\n\n      </div>\n         \n        </section>\n        \n      )}\n    </>\n  );\n}\n\nexport default Comments;\n\t"],"mappings":"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"},"metadata":{},"sourceType":"module"}