{"ast":null,"code":"/**\n * A class representation of a BSON Int32 type.\n *\n * @class\n * @param {number} value the number we want to represent as an int32.\n * @return {Int32}\n */\nvar Int32 = function (value) {\n  if (!(this instanceof Int32)) return new Int32(value);\n  this._bsontype = 'Int32';\n  this.value = value;\n};\n/**\n * Access the number value.\n *\n * @method\n * @return {number} returns the wrapped int32 number.\n */\n\n\nInt32.prototype.valueOf = function () {\n  return this.value;\n};\n/**\n * @ignore\n */\n\n\nInt32.prototype.toJSON = function () {\n  return this.value;\n};\n\nmodule.exports = Int32;\nmodule.exports.Int32 = Int32;","map":{"version":3,"names":["Int32","value","_bsontype","prototype","valueOf","toJSON","module","exports"],"sources":["C:/Users/Administrator/Desktop/webAPI work/web/dog-website/node_modules/koa-mongo/node_modules/bson/lib/bson/int_32.js"],"sourcesContent":["/**\n * A class representation of a BSON Int32 type.\n *\n * @class\n * @param {number} value the number we want to represent as an int32.\n * @return {Int32}\n */\nvar Int32 = function(value) {\n  if (!(this instanceof Int32)) return new Int32(value);\n\n  this._bsontype = 'Int32';\n  this.value = value;\n};\n\n/**\n * Access the number value.\n *\n * @method\n * @return {number} returns the wrapped int32 number.\n */\nInt32.prototype.valueOf = function() {\n  return this.value;\n};\n\n/**\n * @ignore\n */\nInt32.prototype.toJSON = function() {\n  return this.value;\n};\n\nmodule.exports = Int32;\nmodule.exports.Int32 = Int32;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIA,KAAK,GAAG,UAASC,KAAT,EAAgB;EAC1B,IAAI,EAAE,gBAAgBD,KAAlB,CAAJ,EAA8B,OAAO,IAAIA,KAAJ,CAAUC,KAAV,CAAP;EAE9B,KAAKC,SAAL,GAAiB,OAAjB;EACA,KAAKD,KAAL,GAAaA,KAAb;AACD,CALD;AAOA;AACA;AACA;AACA;AACA;AACA;;;AACAD,KAAK,CAACG,SAAN,CAAgBC,OAAhB,GAA0B,YAAW;EACnC,OAAO,KAAKH,KAAZ;AACD,CAFD;AAIA;AACA;AACA;;;AACAD,KAAK,CAACG,SAAN,CAAgBE,MAAhB,GAAyB,YAAW;EAClC,OAAO,KAAKJ,KAAZ;AACD,CAFD;;AAIAK,MAAM,CAACC,OAAP,GAAiBP,KAAjB;AACAM,MAAM,CAACC,OAAP,CAAeP,KAAf,GAAuBA,KAAvB"},"metadata":{},"sourceType":"script"}