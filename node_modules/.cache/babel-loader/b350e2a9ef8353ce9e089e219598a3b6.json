{"ast":null,"code":"'use strict';\n\nconst MongoError = require('../core').MongoError;\n\nconst OperationBase = require('./operation').OperationBase;\n\nconst insertDocuments = require('./common_functions').insertDocuments;\n\nclass InsertOneOperation extends OperationBase {\n  constructor(collection, doc, options) {\n    super(options);\n    this.collection = collection;\n    this.doc = doc;\n  }\n\n  execute(callback) {\n    const coll = this.collection;\n    const doc = this.doc;\n    const options = this.options;\n\n    if (Array.isArray(doc)) {\n      return callback(MongoError.create({\n        message: 'doc parameter must be an object',\n        driver: true\n      }));\n    }\n\n    insertDocuments(coll, [doc], options, (err, r) => {\n      if (callback == null) return;\n      if (err && callback) return callback(err); // Workaround for pre 2.6 servers\n\n      if (r == null) return callback(null, {\n        result: {\n          ok: 1\n        }\n      }); // Add values to top level to ensure crud spec compatibility\n\n      r.insertedCount = r.result.n;\n      r.insertedId = doc._id;\n      if (callback) callback(null, r);\n    });\n  }\n\n}\n\nmodule.exports = InsertOneOperation;","map":{"version":3,"names":["MongoError","require","OperationBase","insertDocuments","InsertOneOperation","constructor","collection","doc","options","execute","callback","coll","Array","isArray","create","message","driver","err","r","result","ok","insertedCount","n","insertedId","_id","module","exports"],"sources":["C:/Users/Administrator/Desktop/webAPI work/web/dog-website/node_modules/koa-mongo/node_modules/mongodb/lib/operations/insert_one.js"],"sourcesContent":["'use strict';\n\nconst MongoError = require('../core').MongoError;\nconst OperationBase = require('./operation').OperationBase;\nconst insertDocuments = require('./common_functions').insertDocuments;\n\nclass InsertOneOperation extends OperationBase {\n  constructor(collection, doc, options) {\n    super(options);\n\n    this.collection = collection;\n    this.doc = doc;\n  }\n\n  execute(callback) {\n    const coll = this.collection;\n    const doc = this.doc;\n    const options = this.options;\n\n    if (Array.isArray(doc)) {\n      return callback(\n        MongoError.create({ message: 'doc parameter must be an object', driver: true })\n      );\n    }\n\n    insertDocuments(coll, [doc], options, (err, r) => {\n      if (callback == null) return;\n      if (err && callback) return callback(err);\n      // Workaround for pre 2.6 servers\n      if (r == null) return callback(null, { result: { ok: 1 } });\n      // Add values to top level to ensure crud spec compatibility\n      r.insertedCount = r.result.n;\n      r.insertedId = doc._id;\n      if (callback) callback(null, r);\n    });\n  }\n}\n\nmodule.exports = InsertOneOperation;\n"],"mappings":"AAAA;;AAEA,MAAMA,UAAU,GAAGC,OAAO,CAAC,SAAD,CAAP,CAAmBD,UAAtC;;AACA,MAAME,aAAa,GAAGD,OAAO,CAAC,aAAD,CAAP,CAAuBC,aAA7C;;AACA,MAAMC,eAAe,GAAGF,OAAO,CAAC,oBAAD,CAAP,CAA8BE,eAAtD;;AAEA,MAAMC,kBAAN,SAAiCF,aAAjC,CAA+C;EAC7CG,WAAW,CAACC,UAAD,EAAaC,GAAb,EAAkBC,OAAlB,EAA2B;IACpC,MAAMA,OAAN;IAEA,KAAKF,UAAL,GAAkBA,UAAlB;IACA,KAAKC,GAAL,GAAWA,GAAX;EACD;;EAEDE,OAAO,CAACC,QAAD,EAAW;IAChB,MAAMC,IAAI,GAAG,KAAKL,UAAlB;IACA,MAAMC,GAAG,GAAG,KAAKA,GAAjB;IACA,MAAMC,OAAO,GAAG,KAAKA,OAArB;;IAEA,IAAII,KAAK,CAACC,OAAN,CAAcN,GAAd,CAAJ,EAAwB;MACtB,OAAOG,QAAQ,CACbV,UAAU,CAACc,MAAX,CAAkB;QAAEC,OAAO,EAAE,iCAAX;QAA8CC,MAAM,EAAE;MAAtD,CAAlB,CADa,CAAf;IAGD;;IAEDb,eAAe,CAACQ,IAAD,EAAO,CAACJ,GAAD,CAAP,EAAcC,OAAd,EAAuB,CAACS,GAAD,EAAMC,CAAN,KAAY;MAChD,IAAIR,QAAQ,IAAI,IAAhB,EAAsB;MACtB,IAAIO,GAAG,IAAIP,QAAX,EAAqB,OAAOA,QAAQ,CAACO,GAAD,CAAf,CAF2B,CAGhD;;MACA,IAAIC,CAAC,IAAI,IAAT,EAAe,OAAOR,QAAQ,CAAC,IAAD,EAAO;QAAES,MAAM,EAAE;UAAEC,EAAE,EAAE;QAAN;MAAV,CAAP,CAAf,CAJiC,CAKhD;;MACAF,CAAC,CAACG,aAAF,GAAkBH,CAAC,CAACC,MAAF,CAASG,CAA3B;MACAJ,CAAC,CAACK,UAAF,GAAehB,GAAG,CAACiB,GAAnB;MACA,IAAId,QAAJ,EAAcA,QAAQ,CAAC,IAAD,EAAOQ,CAAP,CAAR;IACf,CATc,CAAf;EAUD;;AA7B4C;;AAgC/CO,MAAM,CAACC,OAAP,GAAiBtB,kBAAjB"},"metadata":{},"sourceType":"script"}