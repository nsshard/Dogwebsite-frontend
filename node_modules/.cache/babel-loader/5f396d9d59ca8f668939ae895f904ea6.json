{"ast":null,"code":"/**\n * RESTful resource routing middleware for koa.\n *\n * @author Alex Mingoia <talk@alexmingoia.com>\n * @link https://github.com/alexmingoia/koa-router\n */\nconst debug = require('debug')('koa-router');\n\nconst compose = require('koa-compose');\n\nconst HttpError = require('http-errors');\n\nconst methods = require('methods');\n\nconst Layer = require('./layer');\n\nconst {\n  pathToRegexp\n} = require('path-to-regexp');\n/**\n * @module koa-router\n */\n\n\nmodule.exports = Router;\n/**\n * Create a new router.\n *\n * @example\n *\n * Basic usage:\n *\n * ```javascript\n * const Koa = require('koa');\n * const Router = require('@koa/router');\n *\n * const app = new Koa();\n * const router = new Router();\n *\n * router.get('/', (ctx, next) => {\n *   // ctx.router available\n * });\n *\n * app\n *   .use(router.routes())\n *   .use(router.allowedMethods());\n * ```\n *\n * @alias module:koa-router\n * @param {Object=} opts\n * @param {String=} opts.prefix prefix router paths\n * @constructor\n */\n\nfunction Router(opts) {\n  if (!(this instanceof Router)) return new Router(opts);\n  this.opts = opts || {};\n  this.methods = this.opts.methods || ['HEAD', 'OPTIONS', 'GET', 'PUT', 'PATCH', 'POST', 'DELETE'];\n  this.params = {};\n  this.stack = [];\n}\n\n;\n/**\n * Create `router.verb()` methods, where *verb* is one of the HTTP verbs such\n * as `router.get()` or `router.post()`.\n *\n * Match URL patterns to callback functions or controller actions using `router.verb()`,\n * where **verb** is one of the HTTP verbs such as `router.get()` or `router.post()`.\n *\n * Additionaly, `router.all()` can be used to match against all methods.\n *\n * ```javascript\n * router\n *   .get('/', (ctx, next) => {\n *     ctx.body = 'Hello World!';\n *   })\n *   .post('/users', (ctx, next) => {\n *     // ...\n *   })\n *   .put('/users/:id', (ctx, next) => {\n *     // ...\n *   })\n *   .del('/users/:id', (ctx, next) => {\n *     // ...\n *   })\n *   .all('/users/:id', (ctx, next) => {\n *     // ...\n *   });\n * ```\n *\n * When a route is matched, its path is available at `ctx._matchedRoute` and if named,\n * the name is available at `ctx._matchedRouteName`\n *\n * Route paths will be translated to regular expressions using\n * [path-to-regexp](https://github.com/pillarjs/path-to-regexp).\n *\n * Query strings will not be considered when matching requests.\n *\n * #### Named routes\n *\n * Routes can optionally have names. This allows generation of URLs and easy\n * renaming of URLs during development.\n *\n * ```javascript\n * router.get('user', '/users/:id', (ctx, next) => {\n *  // ...\n * });\n *\n * router.url('user', 3);\n * // => \"/users/3\"\n * ```\n *\n * #### Multiple middleware\n *\n * Multiple middleware may be given:\n *\n * ```javascript\n * router.get(\n *   '/users/:id',\n *   (ctx, next) => {\n *     return User.findOne(ctx.params.id).then(function(user) {\n *       ctx.user = user;\n *       next();\n *     });\n *   },\n *   ctx => {\n *     console.log(ctx.user);\n *     // => { id: 17, name: \"Alex\" }\n *   }\n * );\n * ```\n *\n * ### Nested routers\n *\n * Nesting routers is supported:\n *\n * ```javascript\n * const forums = new Router();\n * const posts = new Router();\n *\n * posts.get('/', (ctx, next) => {...});\n * posts.get('/:pid', (ctx, next) => {...});\n * forums.use('/forums/:fid/posts', posts.routes(), posts.allowedMethods());\n *\n * // responds to \"/forums/123/posts\" and \"/forums/123/posts/123\"\n * app.use(forums.routes());\n * ```\n *\n * #### Router prefixes\n *\n * Route paths can be prefixed at the router level:\n *\n * ```javascript\n * const router = new Router({\n *   prefix: '/users'\n * });\n *\n * router.get('/', ...); // responds to \"/users\"\n * router.get('/:id', ...); // responds to \"/users/:id\"\n * ```\n *\n * #### URL parameters\n *\n * Named route parameters are captured and added to `ctx.params`.\n *\n * ```javascript\n * router.get('/:category/:title', (ctx, next) => {\n *   console.log(ctx.params);\n *   // => { category: 'programming', title: 'how-to-node' }\n * });\n * ```\n *\n * The [path-to-regexp](https://github.com/pillarjs/path-to-regexp) module is\n * used to convert paths to regular expressions.\n *\n * @name get|put|post|patch|delete|del\n * @memberof module:koa-router.prototype\n * @param {String} path\n * @param {Function=} middleware route middleware(s)\n * @param {Function} callback route callback\n * @returns {Router}\n */\n\nfor (let i = 0; i < methods.length; i++) {\n  function setMethodVerb(method) {\n    Router.prototype[method] = function (name, path, middleware) {\n      if (typeof path === \"string\" || path instanceof RegExp) {\n        middleware = Array.prototype.slice.call(arguments, 2);\n      } else {\n        middleware = Array.prototype.slice.call(arguments, 1);\n        path = name;\n        name = null;\n      }\n\n      this.register(path, [method], middleware, {\n        name: name\n      });\n      return this;\n    };\n  }\n\n  setMethodVerb(methods[i]);\n} // Alias for `router.delete()` because delete is a reserved word\n\n\nRouter.prototype.del = Router.prototype['delete'];\n/**\n * Use given middleware.\n *\n * Middleware run in the order they are defined by `.use()`. They are invoked\n * sequentially, requests start at the first middleware and work their way\n * \"down\" the middleware stack.\n *\n * @example\n *\n * ```javascript\n * // session middleware will run before authorize\n * router\n *   .use(session())\n *   .use(authorize());\n *\n * // use middleware only with given path\n * router.use('/users', userAuth());\n *\n * // or with an array of paths\n * router.use(['/users', '/admin'], userAuth());\n *\n * app.use(router.routes());\n * ```\n *\n * @param {String=} path\n * @param {Function} middleware\n * @param {Function=} ...\n * @returns {Router}\n */\n\nRouter.prototype.use = function () {\n  const router = this;\n  const middleware = Array.prototype.slice.call(arguments);\n  let path; // support array of paths\n\n  if (Array.isArray(middleware[0]) && typeof middleware[0][0] === 'string') {\n    let arrPaths = middleware[0];\n\n    for (let i = 0; i < arrPaths.length; i++) {\n      const p = arrPaths[i];\n      router.use.apply(router, [p].concat(middleware.slice(1)));\n    }\n\n    return this;\n  }\n\n  const hasPath = typeof middleware[0] === 'string';\n  if (hasPath) path = middleware.shift();\n\n  for (let i = 0; i < middleware.length; i++) {\n    const m = middleware[i];\n\n    if (m.router) {\n      const cloneRouter = Object.assign(Object.create(Router.prototype), m.router, {\n        stack: m.router.stack.slice(0)\n      });\n\n      for (let j = 0; j < cloneRouter.stack.length; j++) {\n        const nestedLayer = cloneRouter.stack[j];\n        const cloneLayer = Object.assign(Object.create(Layer.prototype), nestedLayer);\n        if (path) cloneLayer.setPrefix(path);\n        if (router.opts.prefix) cloneLayer.setPrefix(router.opts.prefix);\n        router.stack.push(cloneLayer);\n        cloneRouter.stack[j] = cloneLayer;\n      }\n\n      if (router.params) {\n        function setRouterParams(paramArr) {\n          const routerParams = paramArr;\n\n          for (let j = 0; j < routerParams.length; j++) {\n            const key = routerParams[j];\n            cloneRouter.param(key, router.params[key]);\n          }\n        }\n\n        setRouterParams(Object.keys(router.params));\n      }\n    } else {\n      const keys = [];\n      pathToRegexp(router.opts.prefix || '', keys);\n      const routerPrefixHasParam = router.opts.prefix && keys.length;\n      router.register(path || '([^\\/]*)', [], m, {\n        end: false,\n        ignoreCaptures: !hasPath && !routerPrefixHasParam\n      });\n    }\n  }\n\n  return this;\n};\n/**\n * Set the path prefix for a Router instance that was already initialized.\n *\n * @example\n *\n * ```javascript\n * router.prefix('/things/:thing_id')\n * ```\n *\n * @param {String} prefix\n * @returns {Router}\n */\n\n\nRouter.prototype.prefix = function (prefix) {\n  prefix = prefix.replace(/\\/$/, '');\n  this.opts.prefix = prefix;\n\n  for (let i = 0; i < this.stack.length; i++) {\n    const route = this.stack[i];\n    route.setPrefix(prefix);\n  }\n\n  return this;\n};\n/**\n * Returns router middleware which dispatches a route matching the request.\n *\n * @returns {Function}\n */\n\n\nRouter.prototype.routes = Router.prototype.middleware = function () {\n  const router = this;\n\n  let dispatch = function dispatch(ctx, next) {\n    debug('%s %s', ctx.method, ctx.path);\n    const path = router.opts.routerPath || ctx.routerPath || ctx.path;\n    const matched = router.match(path, ctx.method);\n    let layerChain;\n\n    if (ctx.matched) {\n      ctx.matched.push.apply(ctx.matched, matched.path);\n    } else {\n      ctx.matched = matched.path;\n    }\n\n    ctx.router = router;\n    if (!matched.route) return next();\n    const matchedLayers = matched.pathAndMethod;\n    const mostSpecificLayer = matchedLayers[matchedLayers.length - 1];\n    ctx._matchedRoute = mostSpecificLayer.path;\n\n    if (mostSpecificLayer.name) {\n      ctx._matchedRouteName = mostSpecificLayer.name;\n    }\n\n    layerChain = matchedLayers.reduce(function (memo, layer) {\n      memo.push(function (ctx, next) {\n        ctx.captures = layer.captures(path, ctx.captures);\n        ctx.params = ctx.request.params = layer.params(path, ctx.captures, ctx.params);\n        ctx.routerPath = layer.path;\n        ctx.routerName = layer.name;\n        ctx._matchedRoute = layer.path;\n\n        if (layer.name) {\n          ctx._matchedRouteName = layer.name;\n        }\n\n        return next();\n      });\n      return memo.concat(layer.stack);\n    }, []);\n    return compose(layerChain)(ctx, next);\n  };\n\n  dispatch.router = this;\n  return dispatch;\n};\n/**\n * Returns separate middleware for responding to `OPTIONS` requests with\n * an `Allow` header containing the allowed methods, as well as responding\n * with `405 Method Not Allowed` and `501 Not Implemented` as appropriate.\n *\n * @example\n *\n * ```javascript\n * const Koa = require('koa');\n * const Router = require('@koa/router');\n *\n * const app = new Koa();\n * const router = new Router();\n *\n * app.use(router.routes());\n * app.use(router.allowedMethods());\n * ```\n *\n * **Example with [Boom](https://github.com/hapijs/boom)**\n *\n * ```javascript\n * const Koa = require('koa');\n * const Router = require('@koa/router');\n * const Boom = require('boom');\n *\n * const app = new Koa();\n * const router = new Router();\n *\n * app.use(router.routes());\n * app.use(router.allowedMethods({\n *   throw: true,\n *   notImplemented: () => new Boom.notImplemented(),\n *   methodNotAllowed: () => new Boom.methodNotAllowed()\n * }));\n * ```\n *\n * @param {Object=} options\n * @param {Boolean=} options.throw throw error instead of setting status and header\n * @param {Function=} options.notImplemented throw the returned value in place of the default NotImplemented error\n * @param {Function=} options.methodNotAllowed throw the returned value in place of the default MethodNotAllowed error\n * @returns {Function}\n */\n\n\nRouter.prototype.allowedMethods = function (options) {\n  options = options || {};\n  const implemented = this.methods;\n  return function allowedMethods(ctx, next) {\n    return next().then(function () {\n      const allowed = {};\n\n      if (!ctx.status || ctx.status === 404) {\n        for (let i = 0; i < ctx.matched.length; i++) {\n          const route = ctx.matched[i];\n\n          for (let j = 0; j < route.methods.length; j++) {\n            const method = route.methods[j];\n            allowed[method] = method;\n          }\n        }\n\n        const allowedArr = Object.keys(allowed);\n\n        if (!~implemented.indexOf(ctx.method)) {\n          if (options.throw) {\n            let notImplementedThrowable = typeof options.notImplemented === 'function' ? options.notImplemented() // set whatever the user returns from their function\n            : new HttpError.NotImplemented();\n            throw notImplementedThrowable;\n          } else {\n            ctx.status = 501;\n            ctx.set('Allow', allowedArr.join(', '));\n          }\n        } else if (allowedArr.length) {\n          if (ctx.method === 'OPTIONS') {\n            ctx.status = 200;\n            ctx.body = '';\n            ctx.set('Allow', allowedArr.join(', '));\n          } else if (!allowed[ctx.method]) {\n            if (options.throw) {\n              let notAllowedThrowable = typeof options.methodNotAllowed === 'function' ? options.methodNotAllowed() // set whatever the user returns from their function\n              : new HttpError.MethodNotAllowed();\n              throw notAllowedThrowable;\n            } else {\n              ctx.status = 405;\n              ctx.set('Allow', allowedArr.join(', '));\n            }\n          }\n        }\n      }\n    });\n  };\n};\n/**\n * Register route with all methods.\n *\n * @param {String} name Optional.\n * @param {String} path\n * @param {Function=} middleware You may also pass multiple middleware.\n * @param {Function} callback\n * @returns {Router}\n * @private\n */\n\n\nRouter.prototype.all = function (name, path, middleware) {\n  if (typeof path === 'string') {\n    middleware = Array.prototype.slice.call(arguments, 2);\n  } else {\n    middleware = Array.prototype.slice.call(arguments, 1);\n    path = name;\n    name = null;\n  }\n\n  this.register(path, methods, middleware, {\n    name\n  });\n  return this;\n};\n/**\n * Redirect `source` to `destination` URL with optional 30x status `code`.\n *\n * Both `source` and `destination` can be route names.\n *\n * ```javascript\n * router.redirect('/login', 'sign-in');\n * ```\n *\n * This is equivalent to:\n *\n * ```javascript\n * router.all('/login', ctx => {\n *   ctx.redirect('/sign-in');\n *   ctx.status = 301;\n * });\n * ```\n *\n * @param {String} source URL or route name.\n * @param {String} destination URL or route name.\n * @param {Number=} code HTTP status code (default: 301).\n * @returns {Router}\n */\n\n\nRouter.prototype.redirect = function (source, destination, code) {\n  // lookup source route by name\n  if (source[0] !== '/') source = this.url(source); // lookup destination route by name\n\n  if (destination[0] !== '/' && !destination.includes('://')) destination = this.url(destination);\n  return this.all(source, ctx => {\n    ctx.redirect(destination);\n    ctx.status = code || 301;\n  });\n};\n/**\n * Create and register a route.\n *\n * @param {String} path Path string.\n * @param {Array.<String>} methods Array of HTTP verbs.\n * @param {Function} middleware Multiple middleware also accepted.\n * @returns {Layer}\n * @private\n */\n\n\nRouter.prototype.register = function (path, methods, middleware, opts) {\n  opts = opts || {};\n  const router = this;\n  const stack = this.stack; // support array of paths\n\n  if (Array.isArray(path)) {\n    for (let i = 0; i < path.length; i++) {\n      const curPath = path[i];\n      router.register.call(router, curPath, methods, middleware, opts);\n    }\n\n    return this;\n  } // create route\n\n\n  const route = new Layer(path, methods, middleware, {\n    end: opts.end === false ? opts.end : true,\n    name: opts.name,\n    sensitive: opts.sensitive || this.opts.sensitive || false,\n    strict: opts.strict || this.opts.strict || false,\n    prefix: opts.prefix || this.opts.prefix || \"\",\n    ignoreCaptures: opts.ignoreCaptures\n  });\n\n  if (this.opts.prefix) {\n    route.setPrefix(this.opts.prefix);\n  } // add parameter middleware\n\n\n  for (let i = 0; i < Object.keys(this.params).length; i++) {\n    const param = Object.keys(this.params)[i];\n    route.param(param, this.params[param]);\n  }\n\n  stack.push(route);\n  debug('defined route %s %s', route.methods, route.path);\n  return route;\n};\n/**\n * Lookup route with given `name`.\n *\n * @param {String} name\n * @returns {Layer|false}\n */\n\n\nRouter.prototype.route = function (name) {\n  const routes = this.stack;\n\n  for (let len = routes.length, i = 0; i < len; i++) {\n    if (routes[i].name && routes[i].name === name) return routes[i];\n  }\n\n  return false;\n};\n/**\n * Generate URL for route. Takes a route name and map of named `params`.\n *\n * @example\n *\n * ```javascript\n * router.get('user', '/users/:id', (ctx, next) => {\n *   // ...\n * });\n *\n * router.url('user', 3);\n * // => \"/users/3\"\n *\n * router.url('user', { id: 3 });\n * // => \"/users/3\"\n *\n * router.use((ctx, next) => {\n *   // redirect to named route\n *   ctx.redirect(ctx.router.url('sign-in'));\n * })\n *\n * router.url('user', { id: 3 }, { query: { limit: 1 } });\n * // => \"/users/3?limit=1\"\n *\n * router.url('user', { id: 3 }, { query: \"limit=1\" });\n * // => \"/users/3?limit=1\"\n * ```\n *\n * @param {String} name route name\n * @param {Object} params url parameters\n * @param {Object} [options] options parameter\n * @param {Object|String} [options.query] query options\n * @returns {String|Error}\n */\n\n\nRouter.prototype.url = function (name, params) {\n  const route = this.route(name);\n\n  if (route) {\n    const args = Array.prototype.slice.call(arguments, 1);\n    return route.url.apply(route, args);\n  }\n\n  return new Error(`No route found for name: ${name}`);\n};\n/**\n * Match given `path` and return corresponding routes.\n *\n * @param {String} path\n * @param {String} method\n * @returns {Object.<path, pathAndMethod>} returns layers that matched path and\n * path and method.\n * @private\n */\n\n\nRouter.prototype.match = function (path, method) {\n  const layers = this.stack;\n  let layer;\n  const matched = {\n    path: [],\n    pathAndMethod: [],\n    route: false\n  };\n\n  for (let len = layers.length, i = 0; i < len; i++) {\n    layer = layers[i];\n    debug('test %s %s', layer.path, layer.regexp);\n\n    if (layer.match(path)) {\n      matched.path.push(layer);\n\n      if (layer.methods.length === 0 || ~layer.methods.indexOf(method)) {\n        matched.pathAndMethod.push(layer);\n        if (layer.methods.length) matched.route = true;\n      }\n    }\n  }\n\n  return matched;\n};\n/**\n * Run middleware for named route parameters. Useful for auto-loading or\n * validation.\n *\n * @example\n *\n * ```javascript\n * router\n *   .param('user', (id, ctx, next) => {\n *     ctx.user = users[id];\n *     if (!ctx.user) return ctx.status = 404;\n *     return next();\n *   })\n *   .get('/users/:user', ctx => {\n *     ctx.body = ctx.user;\n *   })\n *   .get('/users/:user/friends', ctx => {\n *     return ctx.user.getFriends().then(function(friends) {\n *       ctx.body = friends;\n *     });\n *   })\n *   // /users/3 => {\"id\": 3, \"name\": \"Alex\"}\n *   // /users/3/friends => [{\"id\": 4, \"name\": \"TJ\"}]\n * ```\n *\n * @param {String} param\n * @param {Function} middleware\n * @returns {Router}\n */\n\n\nRouter.prototype.param = function (param, middleware) {\n  this.params[param] = middleware;\n\n  for (let i = 0; i < this.stack.length; i++) {\n    const route = this.stack[i];\n    route.param(param, middleware);\n  }\n\n  return this;\n};\n/**\n * Generate URL from url pattern and given `params`.\n *\n * @example\n *\n * ```javascript\n * const url = Router.url('/users/:id', {id: 1});\n * // => \"/users/1\"\n * ```\n *\n * @param {String} path url pattern\n * @param {Object} params url parameters\n * @returns {String}\n */\n\n\nRouter.url = function (path) {\n  const args = Array.prototype.slice.call(arguments, 1);\n  return Layer.prototype.url.apply({\n    path\n  }, args);\n};","map":{"version":3,"names":["debug","require","compose","HttpError","methods","Layer","pathToRegexp","module","exports","Router","opts","params","stack","i","length","setMethodVerb","method","prototype","name","path","middleware","RegExp","Array","slice","call","arguments","register","del","use","router","isArray","arrPaths","p","apply","concat","hasPath","shift","m","cloneRouter","Object","assign","create","j","nestedLayer","cloneLayer","setPrefix","prefix","push","setRouterParams","paramArr","routerParams","key","param","keys","routerPrefixHasParam","end","ignoreCaptures","replace","route","routes","dispatch","ctx","next","routerPath","matched","match","layerChain","matchedLayers","pathAndMethod","mostSpecificLayer","_matchedRoute","_matchedRouteName","reduce","memo","layer","captures","request","routerName","allowedMethods","options","implemented","then","allowed","status","allowedArr","indexOf","throw","notImplementedThrowable","notImplemented","NotImplemented","set","join","body","notAllowedThrowable","methodNotAllowed","MethodNotAllowed","all","redirect","source","destination","code","url","includes","curPath","sensitive","strict","len","args","Error","layers","regexp"],"sources":["C:/Users/Administrator/Desktop/webAPI work/web/dog-website/node_modules/koa-router/lib/router.js"],"sourcesContent":["/**\n * RESTful resource routing middleware for koa.\n *\n * @author Alex Mingoia <talk@alexmingoia.com>\n * @link https://github.com/alexmingoia/koa-router\n */\n\nconst debug = require('debug')('koa-router');\nconst compose = require('koa-compose');\nconst HttpError = require('http-errors');\nconst methods = require('methods');\nconst Layer = require('./layer');\nconst { pathToRegexp } = require('path-to-regexp');\n\n/**\n * @module koa-router\n */\n\nmodule.exports = Router;\n\n/**\n * Create a new router.\n *\n * @example\n *\n * Basic usage:\n *\n * ```javascript\n * const Koa = require('koa');\n * const Router = require('@koa/router');\n *\n * const app = new Koa();\n * const router = new Router();\n *\n * router.get('/', (ctx, next) => {\n *   // ctx.router available\n * });\n *\n * app\n *   .use(router.routes())\n *   .use(router.allowedMethods());\n * ```\n *\n * @alias module:koa-router\n * @param {Object=} opts\n * @param {String=} opts.prefix prefix router paths\n * @constructor\n */\n\nfunction Router(opts) {\n  if (!(this instanceof Router)) return new Router(opts);\n\n  this.opts = opts || {};\n  this.methods = this.opts.methods || [\n    'HEAD',\n    'OPTIONS',\n    'GET',\n    'PUT',\n    'PATCH',\n    'POST',\n    'DELETE'\n  ];\n\n  this.params = {};\n  this.stack = [];\n};\n\n/**\n * Create `router.verb()` methods, where *verb* is one of the HTTP verbs such\n * as `router.get()` or `router.post()`.\n *\n * Match URL patterns to callback functions or controller actions using `router.verb()`,\n * where **verb** is one of the HTTP verbs such as `router.get()` or `router.post()`.\n *\n * Additionaly, `router.all()` can be used to match against all methods.\n *\n * ```javascript\n * router\n *   .get('/', (ctx, next) => {\n *     ctx.body = 'Hello World!';\n *   })\n *   .post('/users', (ctx, next) => {\n *     // ...\n *   })\n *   .put('/users/:id', (ctx, next) => {\n *     // ...\n *   })\n *   .del('/users/:id', (ctx, next) => {\n *     // ...\n *   })\n *   .all('/users/:id', (ctx, next) => {\n *     // ...\n *   });\n * ```\n *\n * When a route is matched, its path is available at `ctx._matchedRoute` and if named,\n * the name is available at `ctx._matchedRouteName`\n *\n * Route paths will be translated to regular expressions using\n * [path-to-regexp](https://github.com/pillarjs/path-to-regexp).\n *\n * Query strings will not be considered when matching requests.\n *\n * #### Named routes\n *\n * Routes can optionally have names. This allows generation of URLs and easy\n * renaming of URLs during development.\n *\n * ```javascript\n * router.get('user', '/users/:id', (ctx, next) => {\n *  // ...\n * });\n *\n * router.url('user', 3);\n * // => \"/users/3\"\n * ```\n *\n * #### Multiple middleware\n *\n * Multiple middleware may be given:\n *\n * ```javascript\n * router.get(\n *   '/users/:id',\n *   (ctx, next) => {\n *     return User.findOne(ctx.params.id).then(function(user) {\n *       ctx.user = user;\n *       next();\n *     });\n *   },\n *   ctx => {\n *     console.log(ctx.user);\n *     // => { id: 17, name: \"Alex\" }\n *   }\n * );\n * ```\n *\n * ### Nested routers\n *\n * Nesting routers is supported:\n *\n * ```javascript\n * const forums = new Router();\n * const posts = new Router();\n *\n * posts.get('/', (ctx, next) => {...});\n * posts.get('/:pid', (ctx, next) => {...});\n * forums.use('/forums/:fid/posts', posts.routes(), posts.allowedMethods());\n *\n * // responds to \"/forums/123/posts\" and \"/forums/123/posts/123\"\n * app.use(forums.routes());\n * ```\n *\n * #### Router prefixes\n *\n * Route paths can be prefixed at the router level:\n *\n * ```javascript\n * const router = new Router({\n *   prefix: '/users'\n * });\n *\n * router.get('/', ...); // responds to \"/users\"\n * router.get('/:id', ...); // responds to \"/users/:id\"\n * ```\n *\n * #### URL parameters\n *\n * Named route parameters are captured and added to `ctx.params`.\n *\n * ```javascript\n * router.get('/:category/:title', (ctx, next) => {\n *   console.log(ctx.params);\n *   // => { category: 'programming', title: 'how-to-node' }\n * });\n * ```\n *\n * The [path-to-regexp](https://github.com/pillarjs/path-to-regexp) module is\n * used to convert paths to regular expressions.\n *\n * @name get|put|post|patch|delete|del\n * @memberof module:koa-router.prototype\n * @param {String} path\n * @param {Function=} middleware route middleware(s)\n * @param {Function} callback route callback\n * @returns {Router}\n */\n\nfor (let i = 0; i < methods.length; i++) {\n  function setMethodVerb(method) {\n    Router.prototype[method] = function(name, path, middleware) {\n      if (typeof path === \"string\" || path instanceof RegExp) {\n        middleware = Array.prototype.slice.call(arguments, 2);\n      } else {\n        middleware = Array.prototype.slice.call(arguments, 1);\n        path = name;\n        name = null;\n      }\n\n      this.register(path, [method], middleware, {\n        name: name\n      });\n\n      return this;\n    };\n  }\n  setMethodVerb(methods[i]);\n}\n\n// Alias for `router.delete()` because delete is a reserved word\nRouter.prototype.del = Router.prototype['delete'];\n\n/**\n * Use given middleware.\n *\n * Middleware run in the order they are defined by `.use()`. They are invoked\n * sequentially, requests start at the first middleware and work their way\n * \"down\" the middleware stack.\n *\n * @example\n *\n * ```javascript\n * // session middleware will run before authorize\n * router\n *   .use(session())\n *   .use(authorize());\n *\n * // use middleware only with given path\n * router.use('/users', userAuth());\n *\n * // or with an array of paths\n * router.use(['/users', '/admin'], userAuth());\n *\n * app.use(router.routes());\n * ```\n *\n * @param {String=} path\n * @param {Function} middleware\n * @param {Function=} ...\n * @returns {Router}\n */\n\nRouter.prototype.use = function () {\n  const router = this;\n  const middleware = Array.prototype.slice.call(arguments);\n  let path;\n\n  // support array of paths\n  if (Array.isArray(middleware[0]) && typeof middleware[0][0] === 'string') {\n    let arrPaths = middleware[0];\n    for (let i = 0; i < arrPaths.length; i++) {\n      const p = arrPaths[i];\n      router.use.apply(router, [p].concat(middleware.slice(1)));\n    }\n\n    return this;\n  }\n\n  const hasPath = typeof middleware[0] === 'string';\n  if (hasPath) path = middleware.shift();\n\n  for (let i = 0; i < middleware.length; i++) {\n    const m = middleware[i];\n    if (m.router) {\n      const cloneRouter = Object.assign(Object.create(Router.prototype), m.router, {\n        stack: m.router.stack.slice(0)\n      });\n\n      for (let j = 0; j < cloneRouter.stack.length; j++) {\n        const nestedLayer = cloneRouter.stack[j];\n        const cloneLayer = Object.assign(\n          Object.create(Layer.prototype),\n          nestedLayer\n        );\n\n        if (path) cloneLayer.setPrefix(path);\n        if (router.opts.prefix) cloneLayer.setPrefix(router.opts.prefix);\n        router.stack.push(cloneLayer);\n        cloneRouter.stack[j] = cloneLayer;\n      }\n\n      if (router.params) {\n        function setRouterParams(paramArr) {\n          const routerParams = paramArr;\n          for (let j = 0; j < routerParams.length; j++) {\n            const key = routerParams[j];\n            cloneRouter.param(key, router.params[key]);\n          }\n        }\n        setRouterParams(Object.keys(router.params));\n      }\n    } else {\n      const keys = [];\n      pathToRegexp(router.opts.prefix || '', keys);\n      const routerPrefixHasParam = router.opts.prefix && keys.length;\n      router.register(path || '([^\\/]*)', [], m, { end: false, ignoreCaptures: !hasPath && !routerPrefixHasParam });\n    }\n  }\n\n  return this;\n};\n\n/**\n * Set the path prefix for a Router instance that was already initialized.\n *\n * @example\n *\n * ```javascript\n * router.prefix('/things/:thing_id')\n * ```\n *\n * @param {String} prefix\n * @returns {Router}\n */\n\nRouter.prototype.prefix = function (prefix) {\n  prefix = prefix.replace(/\\/$/, '');\n\n  this.opts.prefix = prefix;\n\n  for (let i = 0; i < this.stack.length; i++) {\n    const route = this.stack[i];\n    route.setPrefix(prefix);\n  }\n\n  return this;\n};\n\n/**\n * Returns router middleware which dispatches a route matching the request.\n *\n * @returns {Function}\n */\n\nRouter.prototype.routes = Router.prototype.middleware = function () {\n  const router = this;\n\n  let dispatch = function dispatch(ctx, next) {\n    debug('%s %s', ctx.method, ctx.path);\n\n    const path = router.opts.routerPath || ctx.routerPath || ctx.path;\n    const matched = router.match(path, ctx.method);\n    let layerChain;\n\n    if (ctx.matched) {\n      ctx.matched.push.apply(ctx.matched, matched.path);\n    } else {\n      ctx.matched = matched.path;\n    }\n\n    ctx.router = router;\n\n    if (!matched.route) return next();\n\n    const matchedLayers = matched.pathAndMethod\n    const mostSpecificLayer = matchedLayers[matchedLayers.length - 1]\n    ctx._matchedRoute = mostSpecificLayer.path;\n    if (mostSpecificLayer.name) {\n      ctx._matchedRouteName = mostSpecificLayer.name;\n    }\n\n    layerChain = matchedLayers.reduce(function(memo, layer) {\n      memo.push(function(ctx, next) {\n        ctx.captures = layer.captures(path, ctx.captures);\n        ctx.params = ctx.request.params = layer.params(path, ctx.captures, ctx.params);\n        ctx.routerPath = layer.path;\n        ctx.routerName = layer.name;\n        ctx._matchedRoute = layer.path;\n        if (layer.name) {\n          ctx._matchedRouteName = layer.name;\n        }\n        return next();\n      });\n      return memo.concat(layer.stack);\n    }, []);\n\n    return compose(layerChain)(ctx, next);\n  };\n\n  dispatch.router = this;\n\n  return dispatch;\n};\n\n/**\n * Returns separate middleware for responding to `OPTIONS` requests with\n * an `Allow` header containing the allowed methods, as well as responding\n * with `405 Method Not Allowed` and `501 Not Implemented` as appropriate.\n *\n * @example\n *\n * ```javascript\n * const Koa = require('koa');\n * const Router = require('@koa/router');\n *\n * const app = new Koa();\n * const router = new Router();\n *\n * app.use(router.routes());\n * app.use(router.allowedMethods());\n * ```\n *\n * **Example with [Boom](https://github.com/hapijs/boom)**\n *\n * ```javascript\n * const Koa = require('koa');\n * const Router = require('@koa/router');\n * const Boom = require('boom');\n *\n * const app = new Koa();\n * const router = new Router();\n *\n * app.use(router.routes());\n * app.use(router.allowedMethods({\n *   throw: true,\n *   notImplemented: () => new Boom.notImplemented(),\n *   methodNotAllowed: () => new Boom.methodNotAllowed()\n * }));\n * ```\n *\n * @param {Object=} options\n * @param {Boolean=} options.throw throw error instead of setting status and header\n * @param {Function=} options.notImplemented throw the returned value in place of the default NotImplemented error\n * @param {Function=} options.methodNotAllowed throw the returned value in place of the default MethodNotAllowed error\n * @returns {Function}\n */\n\nRouter.prototype.allowedMethods = function (options) {\n  options = options || {};\n  const implemented = this.methods;\n\n  return function allowedMethods(ctx, next) {\n    return next().then(function() {\n      const allowed = {};\n\n      if (!ctx.status || ctx.status === 404) {\n        for (let i = 0; i < ctx.matched.length; i++) {\n          const route = ctx.matched[i];\n          for (let j = 0; j < route.methods.length; j++) {\n            const method = route.methods[j];\n            allowed[method] = method;\n          }\n        }\n\n        const allowedArr = Object.keys(allowed);\n\n        if (!~implemented.indexOf(ctx.method)) {\n          if (options.throw) {\n            let notImplementedThrowable = (typeof options.notImplemented === 'function')\n            ? options.notImplemented()  // set whatever the user returns from their function\n            : new HttpError.NotImplemented();\n\n            throw notImplementedThrowable;\n          } else {\n            ctx.status = 501;\n            ctx.set('Allow', allowedArr.join(', '));\n          }\n        } else if (allowedArr.length) {\n          if (ctx.method === 'OPTIONS') {\n            ctx.status = 200;\n            ctx.body = '';\n            ctx.set('Allow', allowedArr.join(', '));\n          } else if (!allowed[ctx.method]) {\n            if (options.throw) {\n              let notAllowedThrowable = (typeof options.methodNotAllowed === 'function')\n              ? options.methodNotAllowed() // set whatever the user returns from their function\n              : new HttpError.MethodNotAllowed();\n\n              throw notAllowedThrowable;\n            } else {\n              ctx.status = 405;\n              ctx.set('Allow', allowedArr.join(', '));\n            }\n          }\n        }\n      }\n    });\n  };\n};\n\n/**\n * Register route with all methods.\n *\n * @param {String} name Optional.\n * @param {String} path\n * @param {Function=} middleware You may also pass multiple middleware.\n * @param {Function} callback\n * @returns {Router}\n * @private\n */\n\nRouter.prototype.all = function (name, path, middleware) {\n  if (typeof path === 'string') {\n    middleware = Array.prototype.slice.call(arguments, 2);\n  } else {\n    middleware = Array.prototype.slice.call(arguments, 1);\n    path = name;\n    name = null;\n  }\n\n  this.register(path, methods, middleware, { name });\n\n  return this;\n};\n\n/**\n * Redirect `source` to `destination` URL with optional 30x status `code`.\n *\n * Both `source` and `destination` can be route names.\n *\n * ```javascript\n * router.redirect('/login', 'sign-in');\n * ```\n *\n * This is equivalent to:\n *\n * ```javascript\n * router.all('/login', ctx => {\n *   ctx.redirect('/sign-in');\n *   ctx.status = 301;\n * });\n * ```\n *\n * @param {String} source URL or route name.\n * @param {String} destination URL or route name.\n * @param {Number=} code HTTP status code (default: 301).\n * @returns {Router}\n */\n\nRouter.prototype.redirect = function (source, destination, code) {\n  // lookup source route by name\n  if (source[0] !== '/') source = this.url(source);\n\n  // lookup destination route by name\n  if (destination[0] !== '/' && !destination.includes('://')) destination = this.url(destination);\n\n  return this.all(source, ctx => {\n    ctx.redirect(destination);\n    ctx.status = code || 301;\n  });\n};\n\n/**\n * Create and register a route.\n *\n * @param {String} path Path string.\n * @param {Array.<String>} methods Array of HTTP verbs.\n * @param {Function} middleware Multiple middleware also accepted.\n * @returns {Layer}\n * @private\n */\n\nRouter.prototype.register = function (path, methods, middleware, opts) {\n  opts = opts || {};\n\n  const router = this;\n  const stack = this.stack;\n\n  // support array of paths\n  if (Array.isArray(path)) {\n    for (let i = 0; i < path.length; i++) {\n      const curPath = path[i];\n      router.register.call(router, curPath, methods, middleware, opts);\n    }\n\n    return this;\n  }\n\n  // create route\n  const route = new Layer(path, methods, middleware, {\n    end: opts.end === false ? opts.end : true,\n    name: opts.name,\n    sensitive: opts.sensitive || this.opts.sensitive || false,\n    strict: opts.strict || this.opts.strict || false,\n    prefix: opts.prefix || this.opts.prefix || \"\",\n    ignoreCaptures: opts.ignoreCaptures\n  });\n\n  if (this.opts.prefix) {\n    route.setPrefix(this.opts.prefix);\n  }\n\n  // add parameter middleware\n  for (let i = 0; i < Object.keys(this.params).length; i++) {\n    const param = Object.keys(this.params)[i];\n    route.param(param, this.params[param]);\n  }\n\n  stack.push(route);\n\n  debug('defined route %s %s', route.methods, route.path);\n\n  return route;\n};\n\n/**\n * Lookup route with given `name`.\n *\n * @param {String} name\n * @returns {Layer|false}\n */\n\nRouter.prototype.route = function (name) {\n  const routes = this.stack;\n\n  for (let len = routes.length, i=0; i<len; i++) {\n    if (routes[i].name && routes[i].name === name) return routes[i];\n  }\n\n  return false;\n};\n\n/**\n * Generate URL for route. Takes a route name and map of named `params`.\n *\n * @example\n *\n * ```javascript\n * router.get('user', '/users/:id', (ctx, next) => {\n *   // ...\n * });\n *\n * router.url('user', 3);\n * // => \"/users/3\"\n *\n * router.url('user', { id: 3 });\n * // => \"/users/3\"\n *\n * router.use((ctx, next) => {\n *   // redirect to named route\n *   ctx.redirect(ctx.router.url('sign-in'));\n * })\n *\n * router.url('user', { id: 3 }, { query: { limit: 1 } });\n * // => \"/users/3?limit=1\"\n *\n * router.url('user', { id: 3 }, { query: \"limit=1\" });\n * // => \"/users/3?limit=1\"\n * ```\n *\n * @param {String} name route name\n * @param {Object} params url parameters\n * @param {Object} [options] options parameter\n * @param {Object|String} [options.query] query options\n * @returns {String|Error}\n */\n\nRouter.prototype.url = function (name, params) {\n  const route = this.route(name);\n\n  if (route) {\n    const args = Array.prototype.slice.call(arguments, 1);\n    return route.url.apply(route, args);\n  }\n\n  return new Error(`No route found for name: ${name}`);\n};\n\n/**\n * Match given `path` and return corresponding routes.\n *\n * @param {String} path\n * @param {String} method\n * @returns {Object.<path, pathAndMethod>} returns layers that matched path and\n * path and method.\n * @private\n */\n\nRouter.prototype.match = function (path, method) {\n  const layers = this.stack;\n  let layer;\n  const matched = {\n    path: [],\n    pathAndMethod: [],\n    route: false\n  };\n\n  for (let len = layers.length, i = 0; i < len; i++) {\n    layer = layers[i];\n\n    debug('test %s %s', layer.path, layer.regexp);\n\n    if (layer.match(path)) {\n      matched.path.push(layer);\n\n      if (layer.methods.length === 0 || ~layer.methods.indexOf(method)) {\n        matched.pathAndMethod.push(layer);\n        if (layer.methods.length) matched.route = true;\n      }\n    }\n  }\n\n  return matched;\n};\n\n/**\n * Run middleware for named route parameters. Useful for auto-loading or\n * validation.\n *\n * @example\n *\n * ```javascript\n * router\n *   .param('user', (id, ctx, next) => {\n *     ctx.user = users[id];\n *     if (!ctx.user) return ctx.status = 404;\n *     return next();\n *   })\n *   .get('/users/:user', ctx => {\n *     ctx.body = ctx.user;\n *   })\n *   .get('/users/:user/friends', ctx => {\n *     return ctx.user.getFriends().then(function(friends) {\n *       ctx.body = friends;\n *     });\n *   })\n *   // /users/3 => {\"id\": 3, \"name\": \"Alex\"}\n *   // /users/3/friends => [{\"id\": 4, \"name\": \"TJ\"}]\n * ```\n *\n * @param {String} param\n * @param {Function} middleware\n * @returns {Router}\n */\n\nRouter.prototype.param = function(param, middleware) {\n  this.params[param] = middleware;\n  for (let i = 0; i < this.stack.length; i++) {\n    const route = this.stack[i];\n    route.param(param, middleware);\n  }\n\n  return this;\n};\n\n/**\n * Generate URL from url pattern and given `params`.\n *\n * @example\n *\n * ```javascript\n * const url = Router.url('/users/:id', {id: 1});\n * // => \"/users/1\"\n * ```\n *\n * @param {String} path url pattern\n * @param {Object} params url parameters\n * @returns {String}\n */\nRouter.url = function (path) {\n  const args = Array.prototype.slice.call(arguments, 1);\n  return Layer.prototype.url.apply({ path }, args);\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}