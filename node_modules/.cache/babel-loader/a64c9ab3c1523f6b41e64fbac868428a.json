{"ast":null,"code":"/*!\n * Connect - session - Cookie\n * Copyright(c) 2010 Sencha Inc.\n * Copyright(c) 2011 TJ Holowaychuk\n * MIT Licensed\n */\n'use strict';\n/**\n * Module dependencies.\n */\n\nvar cookie = require('cookie');\n\nvar deprecate = require('depd')('express-session');\n/**\n * Initialize a new `Cookie` with the given `options`.\n *\n * @param {IncomingMessage} req\n * @param {Object} options\n * @api private\n */\n\n\nvar Cookie = module.exports = function Cookie(options) {\n  this.path = '/';\n  this.maxAge = null;\n  this.httpOnly = true;\n\n  if (options) {\n    if (typeof options !== 'object') {\n      throw new TypeError('argument options must be a object');\n    }\n\n    for (var key in options) {\n      if (key !== 'data') {\n        this[key] = options[key];\n      }\n    }\n  }\n\n  if (this.originalMaxAge === undefined || this.originalMaxAge === null) {\n    this.originalMaxAge = this.maxAge;\n  }\n};\n/*!\n * Prototype.\n */\n\n\nCookie.prototype = {\n  /**\n   * Set expires `date`.\n   *\n   * @param {Date} date\n   * @api public\n   */\n  set expires(date) {\n    this._expires = date;\n    this.originalMaxAge = this.maxAge;\n  },\n\n  /**\n   * Get expires `date`.\n   *\n   * @return {Date}\n   * @api public\n   */\n  get expires() {\n    return this._expires;\n  },\n\n  /**\n   * Set expires via max-age in `ms`.\n   *\n   * @param {Number} ms\n   * @api public\n   */\n  set maxAge(ms) {\n    if (ms && typeof ms !== 'number' && !(ms instanceof Date)) {\n      throw new TypeError('maxAge must be a number or Date');\n    }\n\n    if (ms instanceof Date) {\n      deprecate('maxAge as Date; pass number of milliseconds instead');\n    }\n\n    this.expires = typeof ms === 'number' ? new Date(Date.now() + ms) : ms;\n  },\n\n  /**\n   * Get expires max-age in `ms`.\n   *\n   * @return {Number}\n   * @api public\n   */\n  get maxAge() {\n    return this.expires instanceof Date ? this.expires.valueOf() - Date.now() : this.expires;\n  },\n\n  /**\n   * Return cookie data object.\n   *\n   * @return {Object}\n   * @api private\n   */\n  get data() {\n    return {\n      originalMaxAge: this.originalMaxAge,\n      expires: this._expires,\n      secure: this.secure,\n      httpOnly: this.httpOnly,\n      domain: this.domain,\n      path: this.path,\n      sameSite: this.sameSite\n    };\n  },\n\n  /**\n   * Return a serialized cookie string.\n   *\n   * @return {String}\n   * @api public\n   */\n  serialize: function (name, val) {\n    return cookie.serialize(name, val, this.data);\n  },\n\n  /**\n   * Return JSON representation of this cookie.\n   *\n   * @return {Object}\n   * @api private\n   */\n  toJSON: function () {\n    return this.data;\n  }\n};","map":{"version":3,"names":["cookie","require","deprecate","Cookie","module","exports","options","path","maxAge","httpOnly","TypeError","key","originalMaxAge","undefined","prototype","expires","date","_expires","ms","Date","now","valueOf","data","secure","domain","sameSite","serialize","name","val","toJSON"],"sources":["C:/Users/Administrator/Desktop/webAPI work/web/dog-website/node_modules/express-session/session/cookie.js"],"sourcesContent":["/*!\n * Connect - session - Cookie\n * Copyright(c) 2010 Sencha Inc.\n * Copyright(c) 2011 TJ Holowaychuk\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n */\n\nvar cookie = require('cookie')\nvar deprecate = require('depd')('express-session')\n\n/**\n * Initialize a new `Cookie` with the given `options`.\n *\n * @param {IncomingMessage} req\n * @param {Object} options\n * @api private\n */\n\nvar Cookie = module.exports = function Cookie(options) {\n  this.path = '/';\n  this.maxAge = null;\n  this.httpOnly = true;\n\n  if (options) {\n    if (typeof options !== 'object') {\n      throw new TypeError('argument options must be a object')\n    }\n\n    for (var key in options) {\n      if (key !== 'data') {\n        this[key] = options[key]\n      }\n    }\n  }\n\n  if (this.originalMaxAge === undefined || this.originalMaxAge === null) {\n    this.originalMaxAge = this.maxAge\n  }\n};\n\n/*!\n * Prototype.\n */\n\nCookie.prototype = {\n\n  /**\n   * Set expires `date`.\n   *\n   * @param {Date} date\n   * @api public\n   */\n\n  set expires(date) {\n    this._expires = date;\n    this.originalMaxAge = this.maxAge;\n  },\n\n  /**\n   * Get expires `date`.\n   *\n   * @return {Date}\n   * @api public\n   */\n\n  get expires() {\n    return this._expires;\n  },\n\n  /**\n   * Set expires via max-age in `ms`.\n   *\n   * @param {Number} ms\n   * @api public\n   */\n\n  set maxAge(ms) {\n    if (ms && typeof ms !== 'number' && !(ms instanceof Date)) {\n      throw new TypeError('maxAge must be a number or Date')\n    }\n\n    if (ms instanceof Date) {\n      deprecate('maxAge as Date; pass number of milliseconds instead')\n    }\n\n    this.expires = typeof ms === 'number'\n      ? new Date(Date.now() + ms)\n      : ms;\n  },\n\n  /**\n   * Get expires max-age in `ms`.\n   *\n   * @return {Number}\n   * @api public\n   */\n\n  get maxAge() {\n    return this.expires instanceof Date\n      ? this.expires.valueOf() - Date.now()\n      : this.expires;\n  },\n\n  /**\n   * Return cookie data object.\n   *\n   * @return {Object}\n   * @api private\n   */\n\n  get data() {\n    return {\n      originalMaxAge: this.originalMaxAge\n      , expires: this._expires\n      , secure: this.secure\n      , httpOnly: this.httpOnly\n      , domain: this.domain\n      , path: this.path\n      , sameSite: this.sameSite\n    }\n  },\n\n  /**\n   * Return a serialized cookie string.\n   *\n   * @return {String}\n   * @api public\n   */\n\n  serialize: function(name, val){\n    return cookie.serialize(name, val, this.data);\n  },\n\n  /**\n   * Return JSON representation of this cookie.\n   *\n   * @return {Object}\n   * @api private\n   */\n\n  toJSON: function(){\n    return this.data;\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}