{"ast":null,"code":"/*!\n * uid-safe\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2015-2017 Douglas Christopher Wilson\n * MIT Licensed\n */\n'use strict';\n/**\n * Module dependencies.\n * @private\n */\n\nvar randomBytes = require('random-bytes');\n/**\n * Module variables.\n * @private\n */\n\n\nvar EQUAL_END_REGEXP = /=+$/;\nvar PLUS_GLOBAL_REGEXP = /\\+/g;\nvar SLASH_GLOBAL_REGEXP = /\\//g;\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = uid;\nmodule.exports.sync = uidSync;\n/**\n * Create a unique ID.\n *\n * @param {number} length\n * @param {function} [callback]\n * @return {Promise}\n * @public\n */\n\nfunction uid(length, callback) {\n  // validate callback is a function, if provided\n  if (callback !== undefined && typeof callback !== 'function') {\n    throw new TypeError('argument callback must be a function');\n  } // require the callback without promises\n\n\n  if (!callback && !global.Promise) {\n    throw new TypeError('argument callback is required');\n  }\n\n  if (callback) {\n    // classic callback style\n    return generateUid(length, callback);\n  }\n\n  return new Promise(function executor(resolve, reject) {\n    generateUid(length, function onUid(err, str) {\n      if (err) return reject(err);\n      resolve(str);\n    });\n  });\n}\n/**\n * Create a unique ID sync.\n *\n * @param {number} length\n * @return {string}\n * @public\n */\n\n\nfunction uidSync(length) {\n  return toString(randomBytes.sync(length));\n}\n/**\n * Generate a unique ID string.\n *\n * @param {number} length\n * @param {function} callback\n * @private\n */\n\n\nfunction generateUid(length, callback) {\n  randomBytes(length, function (err, buf) {\n    if (err) return callback(err);\n    callback(null, toString(buf));\n  });\n}\n/**\n * Change a Buffer into a string.\n *\n * @param {Buffer} buf\n * @return {string}\n * @private\n */\n\n\nfunction toString(buf) {\n  return buf.toString('base64').replace(EQUAL_END_REGEXP, '').replace(PLUS_GLOBAL_REGEXP, '-').replace(SLASH_GLOBAL_REGEXP, '_');\n}","map":{"version":3,"names":["randomBytes","require","EQUAL_END_REGEXP","PLUS_GLOBAL_REGEXP","SLASH_GLOBAL_REGEXP","module","exports","uid","sync","uidSync","length","callback","undefined","TypeError","global","Promise","generateUid","executor","resolve","reject","onUid","err","str","toString","buf","replace"],"sources":["C:/Users/Administrator/Desktop/webAPI work/web/dog-website/node_modules/uid-safe/index.js"],"sourcesContent":["/*!\n * uid-safe\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2015-2017 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar randomBytes = require('random-bytes')\n\n/**\n * Module variables.\n * @private\n */\n\nvar EQUAL_END_REGEXP = /=+$/\nvar PLUS_GLOBAL_REGEXP = /\\+/g\nvar SLASH_GLOBAL_REGEXP = /\\//g\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = uid\nmodule.exports.sync = uidSync\n\n/**\n * Create a unique ID.\n *\n * @param {number} length\n * @param {function} [callback]\n * @return {Promise}\n * @public\n */\n\nfunction uid (length, callback) {\n  // validate callback is a function, if provided\n  if (callback !== undefined && typeof callback !== 'function') {\n    throw new TypeError('argument callback must be a function')\n  }\n\n  // require the callback without promises\n  if (!callback && !global.Promise) {\n    throw new TypeError('argument callback is required')\n  }\n\n  if (callback) {\n    // classic callback style\n    return generateUid(length, callback)\n  }\n\n  return new Promise(function executor (resolve, reject) {\n    generateUid(length, function onUid (err, str) {\n      if (err) return reject(err)\n      resolve(str)\n    })\n  })\n}\n\n/**\n * Create a unique ID sync.\n *\n * @param {number} length\n * @return {string}\n * @public\n */\n\nfunction uidSync (length) {\n  return toString(randomBytes.sync(length))\n}\n\n/**\n * Generate a unique ID string.\n *\n * @param {number} length\n * @param {function} callback\n * @private\n */\n\nfunction generateUid (length, callback) {\n  randomBytes(length, function (err, buf) {\n    if (err) return callback(err)\n    callback(null, toString(buf))\n  })\n}\n\n/**\n * Change a Buffer into a string.\n *\n * @param {Buffer} buf\n * @return {string}\n * @private\n */\n\nfunction toString (buf) {\n  return buf.toString('base64')\n    .replace(EQUAL_END_REGEXP, '')\n    .replace(PLUS_GLOBAL_REGEXP, '-')\n    .replace(SLASH_GLOBAL_REGEXP, '_')\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;;AAEA,IAAIA,WAAW,GAAGC,OAAO,CAAC,cAAD,CAAzB;AAEA;AACA;AACA;AACA;;;AAEA,IAAIC,gBAAgB,GAAG,KAAvB;AACA,IAAIC,kBAAkB,GAAG,KAAzB;AACA,IAAIC,mBAAmB,GAAG,KAA1B;AAEA;AACA;AACA;AACA;;AAEAC,MAAM,CAACC,OAAP,GAAiBC,GAAjB;AACAF,MAAM,CAACC,OAAP,CAAeE,IAAf,GAAsBC,OAAtB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASF,GAAT,CAAcG,MAAd,EAAsBC,QAAtB,EAAgC;EAC9B;EACA,IAAIA,QAAQ,KAAKC,SAAb,IAA0B,OAAOD,QAAP,KAAoB,UAAlD,EAA8D;IAC5D,MAAM,IAAIE,SAAJ,CAAc,sCAAd,CAAN;EACD,CAJ6B,CAM9B;;;EACA,IAAI,CAACF,QAAD,IAAa,CAACG,MAAM,CAACC,OAAzB,EAAkC;IAChC,MAAM,IAAIF,SAAJ,CAAc,+BAAd,CAAN;EACD;;EAED,IAAIF,QAAJ,EAAc;IACZ;IACA,OAAOK,WAAW,CAACN,MAAD,EAASC,QAAT,CAAlB;EACD;;EAED,OAAO,IAAII,OAAJ,CAAY,SAASE,QAAT,CAAmBC,OAAnB,EAA4BC,MAA5B,EAAoC;IACrDH,WAAW,CAACN,MAAD,EAAS,SAASU,KAAT,CAAgBC,GAAhB,EAAqBC,GAArB,EAA0B;MAC5C,IAAID,GAAJ,EAAS,OAAOF,MAAM,CAACE,GAAD,CAAb;MACTH,OAAO,CAACI,GAAD,CAAP;IACD,CAHU,CAAX;EAID,CALM,CAAP;AAMD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,SAASb,OAAT,CAAkBC,MAAlB,EAA0B;EACxB,OAAOa,QAAQ,CAACvB,WAAW,CAACQ,IAAZ,CAAiBE,MAAjB,CAAD,CAAf;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,SAASM,WAAT,CAAsBN,MAAtB,EAA8BC,QAA9B,EAAwC;EACtCX,WAAW,CAACU,MAAD,EAAS,UAAUW,GAAV,EAAeG,GAAf,EAAoB;IACtC,IAAIH,GAAJ,EAAS,OAAOV,QAAQ,CAACU,GAAD,CAAf;IACTV,QAAQ,CAAC,IAAD,EAAOY,QAAQ,CAACC,GAAD,CAAf,CAAR;EACD,CAHU,CAAX;AAID;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,SAASD,QAAT,CAAmBC,GAAnB,EAAwB;EACtB,OAAOA,GAAG,CAACD,QAAJ,CAAa,QAAb,EACJE,OADI,CACIvB,gBADJ,EACsB,EADtB,EAEJuB,OAFI,CAEItB,kBAFJ,EAEwB,GAFxB,EAGJsB,OAHI,CAGIrB,mBAHJ,EAGyB,GAHzB,CAAP;AAID"},"metadata":{},"sourceType":"script"}