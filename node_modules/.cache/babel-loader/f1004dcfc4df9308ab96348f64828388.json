{"ast":null,"code":"'use strict';\n\nconst crypto = require('crypto');\n\nconst AuthProvider = require('./auth_provider').AuthProvider;\n\nclass MongoCR extends AuthProvider {\n  auth(authContext, callback) {\n    const connection = authContext.connection;\n    const credentials = authContext.credentials;\n    const username = credentials.username;\n    const password = credentials.password;\n    const source = credentials.source;\n    connection.command(`${source}.$cmd`, {\n      getnonce: 1\n    }, (err, result) => {\n      let nonce = null;\n      let key = null; // Get nonce\n\n      if (err == null) {\n        const r = result.result;\n        nonce = r.nonce; // Use node md5 generator\n\n        let md5 = crypto.createHash('md5'); // Generate keys used for authentication\n\n        md5.update(username + ':mongo:' + password, 'utf8');\n        const hash_password = md5.digest('hex'); // Final key\n\n        md5 = crypto.createHash('md5');\n        md5.update(nonce + username + hash_password, 'utf8');\n        key = md5.digest('hex');\n      }\n\n      const authenticateCommand = {\n        authenticate: 1,\n        user: username,\n        nonce,\n        key\n      };\n      connection.command(`${source}.$cmd`, authenticateCommand, callback);\n    });\n  }\n\n}\n\nmodule.exports = MongoCR;","map":{"version":3,"names":["crypto","require","AuthProvider","MongoCR","auth","authContext","callback","connection","credentials","username","password","source","command","getnonce","err","result","nonce","key","r","md5","createHash","update","hash_password","digest","authenticateCommand","authenticate","user","module","exports"],"sources":["C:/Users/Administrator/Desktop/webAPI work/web/dog-website/node_modules/koa-mongo/node_modules/mongodb/lib/core/auth/mongocr.js"],"sourcesContent":["'use strict';\n\nconst crypto = require('crypto');\nconst AuthProvider = require('./auth_provider').AuthProvider;\n\nclass MongoCR extends AuthProvider {\n  auth(authContext, callback) {\n    const connection = authContext.connection;\n    const credentials = authContext.credentials;\n    const username = credentials.username;\n    const password = credentials.password;\n    const source = credentials.source;\n\n    connection.command(`${source}.$cmd`, { getnonce: 1 }, (err, result) => {\n      let nonce = null;\n      let key = null;\n\n      // Get nonce\n      if (err == null) {\n        const r = result.result;\n        nonce = r.nonce;\n        // Use node md5 generator\n        let md5 = crypto.createHash('md5');\n        // Generate keys used for authentication\n        md5.update(username + ':mongo:' + password, 'utf8');\n        const hash_password = md5.digest('hex');\n        // Final key\n        md5 = crypto.createHash('md5');\n        md5.update(nonce + username + hash_password, 'utf8');\n        key = md5.digest('hex');\n      }\n\n      const authenticateCommand = {\n        authenticate: 1,\n        user: username,\n        nonce,\n        key\n      };\n\n      connection.command(`${source}.$cmd`, authenticateCommand, callback);\n    });\n  }\n}\n\nmodule.exports = MongoCR;\n"],"mappings":"AAAA;;AAEA,MAAMA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;AACA,MAAMC,YAAY,GAAGD,OAAO,CAAC,iBAAD,CAAP,CAA2BC,YAAhD;;AAEA,MAAMC,OAAN,SAAsBD,YAAtB,CAAmC;EACjCE,IAAI,CAACC,WAAD,EAAcC,QAAd,EAAwB;IAC1B,MAAMC,UAAU,GAAGF,WAAW,CAACE,UAA/B;IACA,MAAMC,WAAW,GAAGH,WAAW,CAACG,WAAhC;IACA,MAAMC,QAAQ,GAAGD,WAAW,CAACC,QAA7B;IACA,MAAMC,QAAQ,GAAGF,WAAW,CAACE,QAA7B;IACA,MAAMC,MAAM,GAAGH,WAAW,CAACG,MAA3B;IAEAJ,UAAU,CAACK,OAAX,CAAoB,GAAED,MAAO,OAA7B,EAAqC;MAAEE,QAAQ,EAAE;IAAZ,CAArC,EAAsD,CAACC,GAAD,EAAMC,MAAN,KAAiB;MACrE,IAAIC,KAAK,GAAG,IAAZ;MACA,IAAIC,GAAG,GAAG,IAAV,CAFqE,CAIrE;;MACA,IAAIH,GAAG,IAAI,IAAX,EAAiB;QACf,MAAMI,CAAC,GAAGH,MAAM,CAACA,MAAjB;QACAC,KAAK,GAAGE,CAAC,CAACF,KAAV,CAFe,CAGf;;QACA,IAAIG,GAAG,GAAGnB,MAAM,CAACoB,UAAP,CAAkB,KAAlB,CAAV,CAJe,CAKf;;QACAD,GAAG,CAACE,MAAJ,CAAWZ,QAAQ,GAAG,SAAX,GAAuBC,QAAlC,EAA4C,MAA5C;QACA,MAAMY,aAAa,GAAGH,GAAG,CAACI,MAAJ,CAAW,KAAX,CAAtB,CAPe,CAQf;;QACAJ,GAAG,GAAGnB,MAAM,CAACoB,UAAP,CAAkB,KAAlB,CAAN;QACAD,GAAG,CAACE,MAAJ,CAAWL,KAAK,GAAGP,QAAR,GAAmBa,aAA9B,EAA6C,MAA7C;QACAL,GAAG,GAAGE,GAAG,CAACI,MAAJ,CAAW,KAAX,CAAN;MACD;;MAED,MAAMC,mBAAmB,GAAG;QAC1BC,YAAY,EAAE,CADY;QAE1BC,IAAI,EAAEjB,QAFoB;QAG1BO,KAH0B;QAI1BC;MAJ0B,CAA5B;MAOAV,UAAU,CAACK,OAAX,CAAoB,GAAED,MAAO,OAA7B,EAAqCa,mBAArC,EAA0DlB,QAA1D;IACD,CA3BD;EA4BD;;AApCgC;;AAuCnCqB,MAAM,CAACC,OAAP,GAAiBzB,OAAjB"},"metadata":{},"sourceType":"script"}