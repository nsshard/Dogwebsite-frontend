{"ast":null,"code":"/**\n * Module dependencies.\n */\nconst debug = require('debug')('koa-mount');\n\nconst compose = require('koa-compose');\n\nconst assert = require('assert');\n/**\n * Expose `mount()`.\n */\n\n\nmodule.exports = mount;\n/**\n * Mount `app` with `prefix`, `app`\n * may be a Koa application or\n * middleware function.\n *\n * @param {String|Application|Function} prefix, app, or function\n * @param {Application|Function} [app or function]\n * @return {Function}\n * @api public\n */\n\nfunction mount(prefix, app) {\n  if (typeof prefix !== 'string') {\n    app = prefix;\n    prefix = '/';\n  }\n\n  assert.equal(prefix[0], '/', 'mount path must begin with \"/\"'); // compose\n\n  const downstream = app.middleware ? compose(app.middleware) : app; // don't need to do mounting here\n\n  if (prefix === '/') return downstream;\n  const trailingSlash = prefix.slice(-1) === '/';\n  const name = app.name || 'unnamed';\n  debug('mount %s %s', prefix, name);\n  return async function (ctx, upstream) {\n    const prev = ctx.path;\n    const newPath = match(prev);\n    debug('mount %s %s -> %s', prefix, name, newPath);\n    if (!newPath) return await upstream();\n    ctx.mountPath = prefix;\n    ctx.path = newPath;\n    debug('enter %s -> %s', prev, ctx.path);\n    await downstream(ctx, async () => {\n      ctx.path = prev;\n      await upstream();\n      ctx.path = newPath;\n    });\n    debug('leave %s -> %s', prev, ctx.path);\n    ctx.path = prev;\n  };\n  /**\n   * Check if `prefix` satisfies a `path`.\n   * Returns the new path.\n   *\n   * match('/images/', '/lkajsldkjf') => false\n   * match('/images', '/images') => /\n   * match('/images/', '/images') => false\n   * match('/images/', '/images/asdf') => /asdf\n   *\n   * @param {String} prefix\n   * @param {String} path\n   * @return {String|Boolean}\n   * @api private\n   */\n\n  function match(path) {\n    // does not match prefix at all\n    if (path.indexOf(prefix) !== 0) return false;\n    const newPath = path.replace(prefix, '') || '/';\n    if (trailingSlash) return newPath; // `/mount` does not match `/mountlkjalskjdf`\n\n    if (newPath[0] !== '/') return false;\n    return newPath;\n  }\n}","map":{"version":3,"names":["debug","require","compose","assert","module","exports","mount","prefix","app","equal","downstream","middleware","trailingSlash","slice","name","ctx","upstream","prev","path","newPath","match","mountPath","indexOf","replace"],"sources":["C:/Users/Administrator/Desktop/webAPI work/web/dog-website/node_modules/koa-mount/index.js"],"sourcesContent":["\n/**\n * Module dependencies.\n */\n\nconst debug = require('debug')('koa-mount')\nconst compose = require('koa-compose')\nconst assert = require('assert')\n\n/**\n * Expose `mount()`.\n */\n\nmodule.exports = mount\n\n/**\n * Mount `app` with `prefix`, `app`\n * may be a Koa application or\n * middleware function.\n *\n * @param {String|Application|Function} prefix, app, or function\n * @param {Application|Function} [app or function]\n * @return {Function}\n * @api public\n */\n\nfunction mount (prefix, app) {\n  if (typeof prefix !== 'string') {\n    app = prefix\n    prefix = '/'\n  }\n\n  assert.equal(prefix[0], '/', 'mount path must begin with \"/\"')\n\n  // compose\n  const downstream = app.middleware\n    ? compose(app.middleware)\n    : app\n\n  // don't need to do mounting here\n  if (prefix === '/') return downstream\n\n  const trailingSlash = prefix.slice(-1) === '/'\n\n  const name = app.name || 'unnamed'\n  debug('mount %s %s', prefix, name)\n\n  return async function (ctx, upstream) {\n    const prev = ctx.path\n    const newPath = match(prev)\n    debug('mount %s %s -> %s', prefix, name, newPath)\n    if (!newPath) return await upstream()\n\n    ctx.mountPath = prefix\n    ctx.path = newPath\n    debug('enter %s -> %s', prev, ctx.path)\n\n    await downstream(ctx, async () => {\n      ctx.path = prev\n      await upstream()\n      ctx.path = newPath\n    })\n\n    debug('leave %s -> %s', prev, ctx.path)\n    ctx.path = prev\n  }\n\n  /**\n   * Check if `prefix` satisfies a `path`.\n   * Returns the new path.\n   *\n   * match('/images/', '/lkajsldkjf') => false\n   * match('/images', '/images') => /\n   * match('/images/', '/images') => false\n   * match('/images/', '/images/asdf') => /asdf\n   *\n   * @param {String} prefix\n   * @param {String} path\n   * @return {String|Boolean}\n   * @api private\n   */\n\n  function match (path) {\n    // does not match prefix at all\n    if (path.indexOf(prefix) !== 0) return false\n\n    const newPath = path.replace(prefix, '') || '/'\n    if (trailingSlash) return newPath\n\n    // `/mount` does not match `/mountlkjalskjdf`\n    if (newPath[0] !== '/') return false\n    return newPath\n  }\n}\n"],"mappings":"AACA;AACA;AACA;AAEA,MAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAP,CAAiB,WAAjB,CAAd;;AACA,MAAMC,OAAO,GAAGD,OAAO,CAAC,aAAD,CAAvB;;AACA,MAAME,MAAM,GAAGF,OAAO,CAAC,QAAD,CAAtB;AAEA;AACA;AACA;;;AAEAG,MAAM,CAACC,OAAP,GAAiBC,KAAjB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,KAAT,CAAgBC,MAAhB,EAAwBC,GAAxB,EAA6B;EAC3B,IAAI,OAAOD,MAAP,KAAkB,QAAtB,EAAgC;IAC9BC,GAAG,GAAGD,MAAN;IACAA,MAAM,GAAG,GAAT;EACD;;EAEDJ,MAAM,CAACM,KAAP,CAAaF,MAAM,CAAC,CAAD,CAAnB,EAAwB,GAAxB,EAA6B,gCAA7B,EAN2B,CAQ3B;;EACA,MAAMG,UAAU,GAAGF,GAAG,CAACG,UAAJ,GACfT,OAAO,CAACM,GAAG,CAACG,UAAL,CADQ,GAEfH,GAFJ,CAT2B,CAa3B;;EACA,IAAID,MAAM,KAAK,GAAf,EAAoB,OAAOG,UAAP;EAEpB,MAAME,aAAa,GAAGL,MAAM,CAACM,KAAP,CAAa,CAAC,CAAd,MAAqB,GAA3C;EAEA,MAAMC,IAAI,GAAGN,GAAG,CAACM,IAAJ,IAAY,SAAzB;EACAd,KAAK,CAAC,aAAD,EAAgBO,MAAhB,EAAwBO,IAAxB,CAAL;EAEA,OAAO,gBAAgBC,GAAhB,EAAqBC,QAArB,EAA+B;IACpC,MAAMC,IAAI,GAAGF,GAAG,CAACG,IAAjB;IACA,MAAMC,OAAO,GAAGC,KAAK,CAACH,IAAD,CAArB;IACAjB,KAAK,CAAC,mBAAD,EAAsBO,MAAtB,EAA8BO,IAA9B,EAAoCK,OAApC,CAAL;IACA,IAAI,CAACA,OAAL,EAAc,OAAO,MAAMH,QAAQ,EAArB;IAEdD,GAAG,CAACM,SAAJ,GAAgBd,MAAhB;IACAQ,GAAG,CAACG,IAAJ,GAAWC,OAAX;IACAnB,KAAK,CAAC,gBAAD,EAAmBiB,IAAnB,EAAyBF,GAAG,CAACG,IAA7B,CAAL;IAEA,MAAMR,UAAU,CAACK,GAAD,EAAM,YAAY;MAChCA,GAAG,CAACG,IAAJ,GAAWD,IAAX;MACA,MAAMD,QAAQ,EAAd;MACAD,GAAG,CAACG,IAAJ,GAAWC,OAAX;IACD,CAJe,CAAhB;IAMAnB,KAAK,CAAC,gBAAD,EAAmBiB,IAAnB,EAAyBF,GAAG,CAACG,IAA7B,CAAL;IACAH,GAAG,CAACG,IAAJ,GAAWD,IAAX;EACD,CAlBD;EAoBA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEE,SAASG,KAAT,CAAgBF,IAAhB,EAAsB;IACpB;IACA,IAAIA,IAAI,CAACI,OAAL,CAAaf,MAAb,MAAyB,CAA7B,EAAgC,OAAO,KAAP;IAEhC,MAAMY,OAAO,GAAGD,IAAI,CAACK,OAAL,CAAahB,MAAb,EAAqB,EAArB,KAA4B,GAA5C;IACA,IAAIK,aAAJ,EAAmB,OAAOO,OAAP,CALC,CAOpB;;IACA,IAAIA,OAAO,CAAC,CAAD,CAAP,KAAe,GAAnB,EAAwB,OAAO,KAAP;IACxB,OAAOA,OAAP;EACD;AACF"},"metadata":{},"sourceType":"script"}