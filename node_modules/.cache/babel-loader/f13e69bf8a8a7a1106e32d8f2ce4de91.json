{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\webAPI work\\\\web\\\\dog-website\\\\src\\\\login.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { Component } from \"react\";\nimport { useState } from \"react\"; // get the SHA256 module and a salt\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar salt = '2irjv34vawirj2jwjvwjreka';\n\nvar SHA256 = require(\"crypto-js/sha256\");\n\nvar typedname = \"\";\nvar typedpassword = \"\"; //get input from the login form\n\nfunction accountistrue() {}\n\nfunction Updatevalues() {\n  _s();\n\n  const [USERNAME, setUSERNAME] = useState(\"\");\n  const [PASSWORD, setPASSWORD] = useState(\"\");\n  alert(typedname); //var saltedname = typedname+salt;\n  //var encryptedname = SHA256(saltedname);\n\n  function validateForm() {\n    return USERNAME.length > 0 && PASSWORD.length > 0;\n  }\n\n  function outputname(event) {\n    event.preventDefault();\n    alert(\"success\");\n  } //Check if account exists in database based on username\n  //var accountchecker = new XMLHttpRequest();\n  //accountchecker.onload = accountistrue;\n  //accountchecker.open(\"get\", \"http://localhost:3000/accounts\", true);\n  //accountchecker.send();\n\n\n  class login extends Component {\n    constructor() {\n      super(...arguments);\n      this.state = {\n        name: \"World\"\n      };\n    }\n\n    render() {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loginstuff\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loginform\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: outputname,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"blacktext1\",\n                children: \"Username\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 5\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form1\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"USERNAME\",\n                  name: \"USERNAME\",\n                  value: USERNAME,\n                  onChange: e => setUSERNAME(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 2\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 2\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 2\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"blacktext2\",\n                children: \"Password \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 1\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 2\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form2\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"PASSWORD\",\n                  name: \"PASSWORD\",\n                  value: PASSWORD,\n                  onChange: e => setPASSWORD(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 4\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 1\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 4\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"send\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"submit\",\n                  value: \"Submit\",\n                  onClick: outputname\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 1\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 1\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 1\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 1\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 1\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 1\n      }, this);\n    }\n\n  }\n}\n\n_s(Updatevalues, \"Zn3vtG+K0sPSndp7/uuUWw6xXOk=\");\n\n_c = Updatevalues;\nexport default login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Updatevalues\");","map":{"version":3,"names":["React","Component","useState","salt","SHA256","require","typedname","typedpassword","accountistrue","Updatevalues","USERNAME","setUSERNAME","PASSWORD","setPASSWORD","alert","validateForm","length","outputname","event","preventDefault","login","state","name","render","e","target","value"],"sources":["C:/Users/Administrator/Desktop/webAPI work/web/dog-website/src/login.js"],"sourcesContent":["\nimport './App.css';\nimport React, { Component } from \"react\";\nimport { useState } from \"react\";\n\n\n\n\n\n// get the SHA256 module and a salt\nvar salt = '2irjv34vawirj2jwjvwjreka';\nvar SHA256 = require(\"crypto-js/sha256\");\nvar typedname = \"\"; \nvar typedpassword = \"\"; \n\n\n//get input from the login form\n\n\nfunction accountistrue()\n{\n}\n\nfunction Updatevalues()\n{\n   const [USERNAME, setUSERNAME] = useState(\"\");\n  const [PASSWORD, setPASSWORD] = useState(\"\");\n\n\nalert(typedname);\n//var saltedname = typedname+salt;\n//var encryptedname = SHA256(saltedname);\n\t\n function validateForm() {\n    return USERNAME.length > 0 && PASSWORD.length > 0;\n  }\n\n  function outputname(event) {\n    event.preventDefault();\n\talert(\"success\");\n  }\n\n\n\n\n\n\n\n\n //Check if account exists in database based on username\n\n//var accountchecker = new XMLHttpRequest();\n//accountchecker.onload = accountistrue;\n//accountchecker.open(\"get\", \"http://localhost:3000/accounts\", true);\n//accountchecker.send();\n\nclass login extends Component {\n\t\n\t  state = {\n\n    name: \"World\"\n\t  };\n\t  \n\t  \n\t  \n\t  \n\t  \n  render() {\n\t  \n    return (\n<div>\n\n\n\n<div className=\"loginstuff\">\n<div className=\"loginform\">\n<form onSubmit={outputname}>\n  \n    <div className=\"blacktext1\">Username\n\t</div>\n\t<div className=\"form1\">\n\t<input type=\"USERNAME\" name=\"USERNAME\" value={USERNAME} onChange={(e) => setUSERNAME(e.target.value)}/>\n  </div>\n\t<br></br>\n<div className=\"blacktext2\">Password </div>\n\n\t<br></br>\n\n<div className=\"form2\">\n   <input type=\"PASSWORD\" name=\"PASSWORD\" value={PASSWORD} onChange={(e) => setPASSWORD(e.target.value)} />\n   </div>\n   <br></br>\n<div className=\"send\">\n<input type=\"submit\" value=\"Submit\" onClick={outputname}/>\n</div>\n\n  \n\n</form>\n</div>\n</div>\n</div>\n\n\n );\n  }\n}\n}\n\n\nexport default login;\n"],"mappings":";;;AACA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,OAAzB,C,CAMA;;;AACA,IAAIC,IAAI,GAAG,0BAAX;;AACA,IAAIC,MAAM,GAAGC,OAAO,CAAC,kBAAD,CAApB;;AACA,IAAIC,SAAS,GAAG,EAAhB;AACA,IAAIC,aAAa,GAAG,EAApB,C,CAGA;;AAGA,SAASC,aAAT,GACA,CACC;;AAED,SAASC,YAAT,GACA;EAAA;;EACG,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;EACD,MAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,EAAD,CAAxC;EAGFY,KAAK,CAACR,SAAD,CAAL,CALA,CAMA;EACA;;EAEC,SAASS,YAAT,GAAwB;IACrB,OAAOL,QAAQ,CAACM,MAAT,GAAkB,CAAlB,IAAuBJ,QAAQ,CAACI,MAAT,GAAkB,CAAhD;EACD;;EAED,SAASC,UAAT,CAAoBC,KAApB,EAA2B;IACzBA,KAAK,CAACC,cAAN;IACHL,KAAK,CAAC,SAAD,CAAL;EACE,CAhBH,CAyBC;EAED;EACA;EACA;EACA;;;EAEA,MAAMM,KAAN,SAAoBnB,SAApB,CAA8B;IAAA;MAAA;MAAA,KAE3BoB,KAF2B,GAEnB;QAEPC,IAAI,EAAE;MAFC,CAFmB;IAAA;;IAW5BC,MAAM,GAAG;MAEP,oBACJ;QAAA,uBAIA;UAAK,SAAS,EAAC,YAAf;UAAA,uBACA;YAAK,SAAS,EAAC,WAAf;YAAA,uBACA;cAAM,QAAQ,EAAEN,UAAhB;cAAA,wBAEI;gBAAK,SAAS,EAAC,YAAf;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAFJ,eAIC;gBAAK,SAAS,EAAC,OAAf;gBAAA,uBACA;kBAAO,IAAI,EAAC,UAAZ;kBAAuB,IAAI,EAAC,UAA5B;kBAAuC,KAAK,EAAEP,QAA9C;kBAAwD,QAAQ,EAAGc,CAAD,IAAOb,WAAW,CAACa,CAAC,CAACC,MAAF,CAASC,KAAV;gBAApF;kBAAA;kBAAA;kBAAA;gBAAA;cADA;gBAAA;gBAAA;gBAAA;cAAA,QAJD,eAOC;gBAAA;gBAAA;gBAAA;cAAA,QAPD,eAQA;gBAAK,SAAS,EAAC,YAAf;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QARA,eAUC;gBAAA;gBAAA;gBAAA;cAAA,QAVD,eAYA;gBAAK,SAAS,EAAC,OAAf;gBAAA,uBACG;kBAAO,IAAI,EAAC,UAAZ;kBAAuB,IAAI,EAAC,UAA5B;kBAAuC,KAAK,EAAEd,QAA9C;kBAAwD,QAAQ,EAAGY,CAAD,IAAOX,WAAW,CAACW,CAAC,CAACC,MAAF,CAASC,KAAV;gBAApF;kBAAA;kBAAA;kBAAA;gBAAA;cADH;gBAAA;gBAAA;gBAAA;cAAA,QAZA,eAeG;gBAAA;gBAAA;gBAAA;cAAA,QAfH,eAgBA;gBAAK,SAAS,EAAC,MAAf;gBAAA,uBACA;kBAAO,IAAI,EAAC,QAAZ;kBAAqB,KAAK,EAAC,QAA3B;kBAAoC,OAAO,EAAET;gBAA7C;kBAAA;kBAAA;kBAAA;gBAAA;cADA;gBAAA;gBAAA;gBAAA;cAAA,QAhBA;YAAA;cAAA;cAAA;cAAA;YAAA;UADA;YAAA;YAAA;YAAA;UAAA;QADA;UAAA;UAAA;UAAA;QAAA;MAJA;QAAA;QAAA;QAAA;MAAA,QADI;IAoCD;;EAjD2B;AAmD7B;;GApFQR,Y;;KAAAA,Y;AAuFT,eAAeW,KAAf"},"metadata":{},"sourceType":"module"}