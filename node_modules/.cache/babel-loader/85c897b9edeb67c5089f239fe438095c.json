{"ast":null,"code":"'use strict';\n\nconst AggregateOperation = require('./aggregate');\n\nclass CountDocumentsOperation extends AggregateOperation {\n  constructor(collection, query, options) {\n    const pipeline = [{\n      $match: query\n    }];\n\n    if (typeof options.skip === 'number') {\n      pipeline.push({\n        $skip: options.skip\n      });\n    }\n\n    if (typeof options.limit === 'number') {\n      pipeline.push({\n        $limit: options.limit\n      });\n    }\n\n    pipeline.push({\n      $group: {\n        _id: 1,\n        n: {\n          $sum: 1\n        }\n      }\n    });\n    super(collection, pipeline, options);\n  }\n\n  execute(server, callback) {\n    super.execute(server, (err, result) => {\n      if (err) {\n        callback(err, null);\n        return;\n      } // NOTE: We're avoiding creating a cursor here to reduce the callstack.\n\n\n      const response = result.result;\n\n      if (response.cursor == null || response.cursor.firstBatch == null) {\n        callback(null, 0);\n        return;\n      }\n\n      const docs = response.cursor.firstBatch;\n      callback(null, docs.length ? docs[0].n : 0);\n    });\n  }\n\n}\n\nmodule.exports = CountDocumentsOperation;","map":{"version":3,"names":["AggregateOperation","require","CountDocumentsOperation","constructor","collection","query","options","pipeline","$match","skip","push","$skip","limit","$limit","$group","_id","n","$sum","execute","server","callback","err","result","response","cursor","firstBatch","docs","length","module","exports"],"sources":["C:/Users/Administrator/Desktop/webAPI work/web/dog-website/node_modules/koa-mongo/node_modules/mongodb/lib/operations/count_documents.js"],"sourcesContent":["'use strict';\n\nconst AggregateOperation = require('./aggregate');\n\nclass CountDocumentsOperation extends AggregateOperation {\n  constructor(collection, query, options) {\n    const pipeline = [{ $match: query }];\n    if (typeof options.skip === 'number') {\n      pipeline.push({ $skip: options.skip });\n    }\n\n    if (typeof options.limit === 'number') {\n      pipeline.push({ $limit: options.limit });\n    }\n\n    pipeline.push({ $group: { _id: 1, n: { $sum: 1 } } });\n\n    super(collection, pipeline, options);\n  }\n\n  execute(server, callback) {\n    super.execute(server, (err, result) => {\n      if (err) {\n        callback(err, null);\n        return;\n      }\n\n      // NOTE: We're avoiding creating a cursor here to reduce the callstack.\n      const response = result.result;\n      if (response.cursor == null || response.cursor.firstBatch == null) {\n        callback(null, 0);\n        return;\n      }\n\n      const docs = response.cursor.firstBatch;\n      callback(null, docs.length ? docs[0].n : 0);\n    });\n  }\n}\n\nmodule.exports = CountDocumentsOperation;\n"],"mappings":"AAAA;;AAEA,MAAMA,kBAAkB,GAAGC,OAAO,CAAC,aAAD,CAAlC;;AAEA,MAAMC,uBAAN,SAAsCF,kBAAtC,CAAyD;EACvDG,WAAW,CAACC,UAAD,EAAaC,KAAb,EAAoBC,OAApB,EAA6B;IACtC,MAAMC,QAAQ,GAAG,CAAC;MAAEC,MAAM,EAAEH;IAAV,CAAD,CAAjB;;IACA,IAAI,OAAOC,OAAO,CAACG,IAAf,KAAwB,QAA5B,EAAsC;MACpCF,QAAQ,CAACG,IAAT,CAAc;QAAEC,KAAK,EAAEL,OAAO,CAACG;MAAjB,CAAd;IACD;;IAED,IAAI,OAAOH,OAAO,CAACM,KAAf,KAAyB,QAA7B,EAAuC;MACrCL,QAAQ,CAACG,IAAT,CAAc;QAAEG,MAAM,EAAEP,OAAO,CAACM;MAAlB,CAAd;IACD;;IAEDL,QAAQ,CAACG,IAAT,CAAc;MAAEI,MAAM,EAAE;QAAEC,GAAG,EAAE,CAAP;QAAUC,CAAC,EAAE;UAAEC,IAAI,EAAE;QAAR;MAAb;IAAV,CAAd;IAEA,MAAMb,UAAN,EAAkBG,QAAlB,EAA4BD,OAA5B;EACD;;EAEDY,OAAO,CAACC,MAAD,EAASC,QAAT,EAAmB;IACxB,MAAMF,OAAN,CAAcC,MAAd,EAAsB,CAACE,GAAD,EAAMC,MAAN,KAAiB;MACrC,IAAID,GAAJ,EAAS;QACPD,QAAQ,CAACC,GAAD,EAAM,IAAN,CAAR;QACA;MACD,CAJoC,CAMrC;;;MACA,MAAME,QAAQ,GAAGD,MAAM,CAACA,MAAxB;;MACA,IAAIC,QAAQ,CAACC,MAAT,IAAmB,IAAnB,IAA2BD,QAAQ,CAACC,MAAT,CAAgBC,UAAhB,IAA8B,IAA7D,EAAmE;QACjEL,QAAQ,CAAC,IAAD,EAAO,CAAP,CAAR;QACA;MACD;;MAED,MAAMM,IAAI,GAAGH,QAAQ,CAACC,MAAT,CAAgBC,UAA7B;MACAL,QAAQ,CAAC,IAAD,EAAOM,IAAI,CAACC,MAAL,GAAcD,IAAI,CAAC,CAAD,CAAJ,CAAQV,CAAtB,GAA0B,CAAjC,CAAR;IACD,CAfD;EAgBD;;AAjCsD;;AAoCzDY,MAAM,CAACC,OAAP,GAAiB3B,uBAAjB"},"metadata":{},"sourceType":"script"}