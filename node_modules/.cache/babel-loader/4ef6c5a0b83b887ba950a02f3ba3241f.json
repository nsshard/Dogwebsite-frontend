{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\webAPI work\\\\web\\\\dog-website\\\\src\\\\register.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState, useEffect } from \"react\";\nimport axios from './axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst REGISTER_URL = '/register';\n\nconst Register = () => {\n  _s();\n\n  const userRef = useRef();\n  const errRef = useRef();\n  const [user, setUser] = useState('');\n  const [validName, setValidName] = useState(false);\n  const [userFocus, setUserFocus] = useState(false);\n  const [pwd, setPwd] = useState('');\n  const [validPwd, setValidPwd] = useState(false);\n  const [pwdFocus, setPwdFocus] = useState(false);\n  const [errMsg, setErrMsg] = useState('');\n  const [success, setSuccess] = useState(false);\n  useEffect(() => {\n    userRef.current.focus();\n  }, []);\n  useEffect(() => {\n    setErrMsg('');\n  }, [user, pwd]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      const response = await axios.post(REGISTER_URL, JSON.stringify({\n        user,\n        pwd\n      }), {\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        withCredentials: true\n      });\n      setSuccess(true);\n      setUser('');\n      setPwd('');\n    } catch (err) {\n      var _err$response;\n\n      if (!(err !== null && err !== void 0 && err.response)) {\n        setErrMsg('No Server Response');\n      } else if (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status) === 409) {\n        setErrMsg('Username Taken');\n      } else {\n        setErrMsg('Registration Failed');\n      }\n\n      errRef.current.focus();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: success ? /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Success!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        ref: errRef,\n        className: errMsg ? \"errmsg\" : \"offscreen\",\n        \"aria-live\": \"assertive\",\n        children: errMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \"Username:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"username\",\n          ref: userRef,\n          autoComplete: \"off\",\n          onChange: e => setUser(e.target.value),\n          value: user,\n          required: true,\n          \"aria-invalid\": validName ? \"false\" : \"true\",\n          \"aria-describedby\": \"uidnote\",\n          onFocus: () => setUserFocus(true),\n          onBlur: () => setUserFocus(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          onChange: e => setPwd(e.target.value),\n          value: pwd,\n          required: true,\n          \"aria-describedby\": \"pwdnote\",\n          onFocus: () => setPwdFocus(true),\n          onBlur: () => setPwdFocus(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"confirm_pwd\",\n          children: \"Confirm Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: !validName || !validPwd ? true : false,\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Already registered?\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 44\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"line\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#\",\n            children: \"Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n};\n\n_s(Register, \"1WrUs21jwJr9Qiag2OqHKFLl4EM=\");\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["useRef","useState","useEffect","axios","REGISTER_URL","Register","userRef","errRef","user","setUser","validName","setValidName","userFocus","setUserFocus","pwd","setPwd","validPwd","setValidPwd","pwdFocus","setPwdFocus","errMsg","setErrMsg","success","setSuccess","current","focus","handleSubmit","e","preventDefault","response","post","JSON","stringify","headers","withCredentials","err","status","target","value"],"sources":["C:/Users/Administrator/Desktop/webAPI work/web/dog-website/src/register.js"],"sourcesContent":["import { useRef, useState, useEffect } from \"react\";\n\nimport axios from './axios';\nconst REGISTER_URL = '/register';\n\n\nconst Register = () => {\n    const userRef = useRef();\n    const errRef = useRef();\n\n    const [user, setUser] = useState('');\n    const [validName, setValidName] = useState(false);\n    const [userFocus, setUserFocus] = useState(false);\n\n    const [pwd, setPwd] = useState('');\n    const [validPwd, setValidPwd] = useState(false);\n    const [pwdFocus, setPwdFocus] = useState(false);\n\n    const [errMsg, setErrMsg] = useState('');\n    const [success, setSuccess] = useState(false);\n\n    useEffect(() => {\n        userRef.current.focus();\n    }, [])\n\n    \n\n    useEffect(() => {\n        setErrMsg('');\n    }, [user, pwd])\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n    \n      \n        try {\n            const response = await axios.post(REGISTER_URL,\n                JSON.stringify({ user, pwd }),\n                {\n                    headers: { 'Content-Type': 'application/json' },\n                    withCredentials: true\n                }\n            );\n            setSuccess(true);\n         \n            setUser('');\n            setPwd('');\n          \n        } catch (err) {\n            if (!err?.response) {\n                setErrMsg('No Server Response');\n            } else if (err.response?.status === 409) {\n                setErrMsg('Username Taken');\n            } else {\n                setErrMsg('Registration Failed')\n            }\n            errRef.current.focus();\n        }\n    }\n\n    return (\n        <>\n            {success ? (\n                <section>\n                    <h1>Success!</h1>\n                 \n                </section>\n            ) : (\n                <section>\n                    <p ref={errRef} className={errMsg ? \"errmsg\" : \"offscreen\"} aria-live=\"assertive\">{errMsg}</p>\n                    <h1>Register</h1>\n                    <form onSubmit={handleSubmit}>\n                        <label htmlFor=\"username\">\n                            Username:\n                         \n                        </label>\n                        <input\n                            type=\"text\"\n                            id=\"username\"\n                            ref={userRef}\n                            autoComplete=\"off\"\n                            onChange={(e) => setUser(e.target.value)}\n                            value={user}\n                            required\n                            aria-invalid={validName ? \"false\" : \"true\"}\n                            aria-describedby=\"uidnote\"\n                            onFocus={() => setUserFocus(true)}\n                            onBlur={() => setUserFocus(false)}\n                        />\n                    \n\n                        <label htmlFor=\"password\">\n                            Password:\n                           \n                        </label>\n                        <input\n                            type=\"password\"\n                            id=\"password\"\n                            onChange={(e) => setPwd(e.target.value)}\n                            value={pwd}\n                            required\n                    \n                            aria-describedby=\"pwdnote\"\n                            onFocus={() => setPwdFocus(true)}\n                            onBlur={() => setPwdFocus(false)}\n                        />\n                  \n\n\n                        <label htmlFor=\"confirm_pwd\">\n                            Confirm Password:\n                       \n                        </label>\n                       \n                       \n\n                        <button disabled={!validName || !validPwd ? true : false}>Sign Up</button>\n                    </form>\n                    <p>\n                        Already registered?<br />\n                        <span className=\"line\">\n                            {/*put router link here*/}\n                            <a href=\"#\">Sign In</a>\n                        </span>\n                    </p>\n                </section>\n            )}\n        </>\n    )\n}\n\nexport default Register"],"mappings":"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"},"metadata":{},"sourceType":"module"}