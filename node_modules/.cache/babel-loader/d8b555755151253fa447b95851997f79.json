{"ast":null,"code":"'use strict';\n\nconst CommandOperationV2 = require('./command_v2');\n\nconst MongoError = require('../core').MongoError;\n\nconst maxWireVersion = require('../core/utils').maxWireVersion;\n\nconst ReadPreference = require('../core').ReadPreference;\n\nconst Aspect = require('./operation').Aspect;\n\nconst defineAspects = require('./operation').defineAspects;\n\nconst DB_AGGREGATE_COLLECTION = 1;\nconst MIN_WIRE_VERSION_$OUT_READ_CONCERN_SUPPORT = 8;\n\nclass AggregateOperation extends CommandOperationV2 {\n  constructor(parent, pipeline, options) {\n    super(parent, options, {\n      fullResponse: true\n    });\n    this.target = parent.s.namespace && parent.s.namespace.collection ? parent.s.namespace.collection : DB_AGGREGATE_COLLECTION;\n    this.pipeline = pipeline; // determine if we have a write stage, override read preference if so\n\n    this.hasWriteStage = false;\n\n    if (typeof options.out === 'string') {\n      this.pipeline = this.pipeline.concat({\n        $out: options.out\n      });\n      this.hasWriteStage = true;\n    } else if (pipeline.length > 0) {\n      const finalStage = pipeline[pipeline.length - 1];\n\n      if (finalStage.$out || finalStage.$merge) {\n        this.hasWriteStage = true;\n      }\n    }\n\n    if (this.hasWriteStage) {\n      this.readPreference = ReadPreference.primary;\n    }\n\n    if (options.explain && (this.readConcern || this.writeConcern)) {\n      throw new MongoError('\"explain\" cannot be used on an aggregate call with readConcern/writeConcern');\n    }\n\n    if (options.cursor != null && typeof options.cursor !== 'object') {\n      throw new MongoError('cursor options must be an object');\n    }\n  }\n\n  get canRetryRead() {\n    return !this.hasWriteStage;\n  }\n\n  addToPipeline(stage) {\n    this.pipeline.push(stage);\n  }\n\n  execute(server, callback) {\n    const options = this.options;\n    const serverWireVersion = maxWireVersion(server);\n    const command = {\n      aggregate: this.target,\n      pipeline: this.pipeline\n    };\n\n    if (this.hasWriteStage && serverWireVersion < MIN_WIRE_VERSION_$OUT_READ_CONCERN_SUPPORT) {\n      this.readConcern = null;\n    }\n\n    if (serverWireVersion >= 5) {\n      if (this.hasWriteStage && this.writeConcern) {\n        Object.assign(command, {\n          writeConcern: this.writeConcern\n        });\n      }\n    }\n\n    if (options.bypassDocumentValidation === true) {\n      command.bypassDocumentValidation = options.bypassDocumentValidation;\n    }\n\n    if (typeof options.allowDiskUse === 'boolean') {\n      command.allowDiskUse = options.allowDiskUse;\n    }\n\n    if (options.hint) {\n      command.hint = options.hint;\n    }\n\n    if (options.explain) {\n      options.full = false;\n      command.explain = options.explain;\n    }\n\n    command.cursor = options.cursor || {};\n\n    if (options.batchSize && !this.hasWriteStage) {\n      command.cursor.batchSize = options.batchSize;\n    }\n\n    super.executeCommand(server, command, callback);\n  }\n\n}\n\ndefineAspects(AggregateOperation, [Aspect.READ_OPERATION, Aspect.RETRYABLE, Aspect.EXECUTE_WITH_SELECTION]);\nmodule.exports = AggregateOperation;","map":{"version":3,"names":["CommandOperationV2","require","MongoError","maxWireVersion","ReadPreference","Aspect","defineAspects","DB_AGGREGATE_COLLECTION","MIN_WIRE_VERSION_$OUT_READ_CONCERN_SUPPORT","AggregateOperation","constructor","parent","pipeline","options","fullResponse","target","s","namespace","collection","hasWriteStage","out","concat","$out","length","finalStage","$merge","readPreference","primary","explain","readConcern","writeConcern","cursor","canRetryRead","addToPipeline","stage","push","execute","server","callback","serverWireVersion","command","aggregate","Object","assign","bypassDocumentValidation","allowDiskUse","hint","full","batchSize","executeCommand","READ_OPERATION","RETRYABLE","EXECUTE_WITH_SELECTION","module","exports"],"sources":["C:/Users/Administrator/Desktop/webAPI work/web/dog-website/node_modules/koa-mongo/node_modules/mongodb/lib/operations/aggregate.js"],"sourcesContent":["'use strict';\n\nconst CommandOperationV2 = require('./command_v2');\nconst MongoError = require('../core').MongoError;\nconst maxWireVersion = require('../core/utils').maxWireVersion;\nconst ReadPreference = require('../core').ReadPreference;\nconst Aspect = require('./operation').Aspect;\nconst defineAspects = require('./operation').defineAspects;\n\nconst DB_AGGREGATE_COLLECTION = 1;\nconst MIN_WIRE_VERSION_$OUT_READ_CONCERN_SUPPORT = 8;\n\nclass AggregateOperation extends CommandOperationV2 {\n  constructor(parent, pipeline, options) {\n    super(parent, options, { fullResponse: true });\n\n    this.target =\n      parent.s.namespace && parent.s.namespace.collection\n        ? parent.s.namespace.collection\n        : DB_AGGREGATE_COLLECTION;\n\n    this.pipeline = pipeline;\n\n    // determine if we have a write stage, override read preference if so\n    this.hasWriteStage = false;\n    if (typeof options.out === 'string') {\n      this.pipeline = this.pipeline.concat({ $out: options.out });\n      this.hasWriteStage = true;\n    } else if (pipeline.length > 0) {\n      const finalStage = pipeline[pipeline.length - 1];\n      if (finalStage.$out || finalStage.$merge) {\n        this.hasWriteStage = true;\n      }\n    }\n\n    if (this.hasWriteStage) {\n      this.readPreference = ReadPreference.primary;\n    }\n\n    if (options.explain && (this.readConcern || this.writeConcern)) {\n      throw new MongoError(\n        '\"explain\" cannot be used on an aggregate call with readConcern/writeConcern'\n      );\n    }\n\n    if (options.cursor != null && typeof options.cursor !== 'object') {\n      throw new MongoError('cursor options must be an object');\n    }\n  }\n\n  get canRetryRead() {\n    return !this.hasWriteStage;\n  }\n\n  addToPipeline(stage) {\n    this.pipeline.push(stage);\n  }\n\n  execute(server, callback) {\n    const options = this.options;\n    const serverWireVersion = maxWireVersion(server);\n    const command = { aggregate: this.target, pipeline: this.pipeline };\n\n    if (this.hasWriteStage && serverWireVersion < MIN_WIRE_VERSION_$OUT_READ_CONCERN_SUPPORT) {\n      this.readConcern = null;\n    }\n\n    if (serverWireVersion >= 5) {\n      if (this.hasWriteStage && this.writeConcern) {\n        Object.assign(command, { writeConcern: this.writeConcern });\n      }\n    }\n\n    if (options.bypassDocumentValidation === true) {\n      command.bypassDocumentValidation = options.bypassDocumentValidation;\n    }\n\n    if (typeof options.allowDiskUse === 'boolean') {\n      command.allowDiskUse = options.allowDiskUse;\n    }\n\n    if (options.hint) {\n      command.hint = options.hint;\n    }\n\n    if (options.explain) {\n      options.full = false;\n      command.explain = options.explain;\n    }\n\n    command.cursor = options.cursor || {};\n    if (options.batchSize && !this.hasWriteStage) {\n      command.cursor.batchSize = options.batchSize;\n    }\n\n    super.executeCommand(server, command, callback);\n  }\n}\n\ndefineAspects(AggregateOperation, [\n  Aspect.READ_OPERATION,\n  Aspect.RETRYABLE,\n  Aspect.EXECUTE_WITH_SELECTION\n]);\n\nmodule.exports = AggregateOperation;\n"],"mappings":"AAAA;;AAEA,MAAMA,kBAAkB,GAAGC,OAAO,CAAC,cAAD,CAAlC;;AACA,MAAMC,UAAU,GAAGD,OAAO,CAAC,SAAD,CAAP,CAAmBC,UAAtC;;AACA,MAAMC,cAAc,GAAGF,OAAO,CAAC,eAAD,CAAP,CAAyBE,cAAhD;;AACA,MAAMC,cAAc,GAAGH,OAAO,CAAC,SAAD,CAAP,CAAmBG,cAA1C;;AACA,MAAMC,MAAM,GAAGJ,OAAO,CAAC,aAAD,CAAP,CAAuBI,MAAtC;;AACA,MAAMC,aAAa,GAAGL,OAAO,CAAC,aAAD,CAAP,CAAuBK,aAA7C;;AAEA,MAAMC,uBAAuB,GAAG,CAAhC;AACA,MAAMC,0CAA0C,GAAG,CAAnD;;AAEA,MAAMC,kBAAN,SAAiCT,kBAAjC,CAAoD;EAClDU,WAAW,CAACC,MAAD,EAASC,QAAT,EAAmBC,OAAnB,EAA4B;IACrC,MAAMF,MAAN,EAAcE,OAAd,EAAuB;MAAEC,YAAY,EAAE;IAAhB,CAAvB;IAEA,KAAKC,MAAL,GACEJ,MAAM,CAACK,CAAP,CAASC,SAAT,IAAsBN,MAAM,CAACK,CAAP,CAASC,SAAT,CAAmBC,UAAzC,GACIP,MAAM,CAACK,CAAP,CAASC,SAAT,CAAmBC,UADvB,GAEIX,uBAHN;IAKA,KAAKK,QAAL,GAAgBA,QAAhB,CARqC,CAUrC;;IACA,KAAKO,aAAL,GAAqB,KAArB;;IACA,IAAI,OAAON,OAAO,CAACO,GAAf,KAAuB,QAA3B,EAAqC;MACnC,KAAKR,QAAL,GAAgB,KAAKA,QAAL,CAAcS,MAAd,CAAqB;QAAEC,IAAI,EAAET,OAAO,CAACO;MAAhB,CAArB,CAAhB;MACA,KAAKD,aAAL,GAAqB,IAArB;IACD,CAHD,MAGO,IAAIP,QAAQ,CAACW,MAAT,GAAkB,CAAtB,EAAyB;MAC9B,MAAMC,UAAU,GAAGZ,QAAQ,CAACA,QAAQ,CAACW,MAAT,GAAkB,CAAnB,CAA3B;;MACA,IAAIC,UAAU,CAACF,IAAX,IAAmBE,UAAU,CAACC,MAAlC,EAA0C;QACxC,KAAKN,aAAL,GAAqB,IAArB;MACD;IACF;;IAED,IAAI,KAAKA,aAAT,EAAwB;MACtB,KAAKO,cAAL,GAAsBtB,cAAc,CAACuB,OAArC;IACD;;IAED,IAAId,OAAO,CAACe,OAAR,KAAoB,KAAKC,WAAL,IAAoB,KAAKC,YAA7C,CAAJ,EAAgE;MAC9D,MAAM,IAAI5B,UAAJ,CACJ,6EADI,CAAN;IAGD;;IAED,IAAIW,OAAO,CAACkB,MAAR,IAAkB,IAAlB,IAA0B,OAAOlB,OAAO,CAACkB,MAAf,KAA0B,QAAxD,EAAkE;MAChE,MAAM,IAAI7B,UAAJ,CAAe,kCAAf,CAAN;IACD;EACF;;EAEe,IAAZ8B,YAAY,GAAG;IACjB,OAAO,CAAC,KAAKb,aAAb;EACD;;EAEDc,aAAa,CAACC,KAAD,EAAQ;IACnB,KAAKtB,QAAL,CAAcuB,IAAd,CAAmBD,KAAnB;EACD;;EAEDE,OAAO,CAACC,MAAD,EAASC,QAAT,EAAmB;IACxB,MAAMzB,OAAO,GAAG,KAAKA,OAArB;IACA,MAAM0B,iBAAiB,GAAGpC,cAAc,CAACkC,MAAD,CAAxC;IACA,MAAMG,OAAO,GAAG;MAAEC,SAAS,EAAE,KAAK1B,MAAlB;MAA0BH,QAAQ,EAAE,KAAKA;IAAzC,CAAhB;;IAEA,IAAI,KAAKO,aAAL,IAAsBoB,iBAAiB,GAAG/B,0CAA9C,EAA0F;MACxF,KAAKqB,WAAL,GAAmB,IAAnB;IACD;;IAED,IAAIU,iBAAiB,IAAI,CAAzB,EAA4B;MAC1B,IAAI,KAAKpB,aAAL,IAAsB,KAAKW,YAA/B,EAA6C;QAC3CY,MAAM,CAACC,MAAP,CAAcH,OAAd,EAAuB;UAAEV,YAAY,EAAE,KAAKA;QAArB,CAAvB;MACD;IACF;;IAED,IAAIjB,OAAO,CAAC+B,wBAAR,KAAqC,IAAzC,EAA+C;MAC7CJ,OAAO,CAACI,wBAAR,GAAmC/B,OAAO,CAAC+B,wBAA3C;IACD;;IAED,IAAI,OAAO/B,OAAO,CAACgC,YAAf,KAAgC,SAApC,EAA+C;MAC7CL,OAAO,CAACK,YAAR,GAAuBhC,OAAO,CAACgC,YAA/B;IACD;;IAED,IAAIhC,OAAO,CAACiC,IAAZ,EAAkB;MAChBN,OAAO,CAACM,IAAR,GAAejC,OAAO,CAACiC,IAAvB;IACD;;IAED,IAAIjC,OAAO,CAACe,OAAZ,EAAqB;MACnBf,OAAO,CAACkC,IAAR,GAAe,KAAf;MACAP,OAAO,CAACZ,OAAR,GAAkBf,OAAO,CAACe,OAA1B;IACD;;IAEDY,OAAO,CAACT,MAAR,GAAiBlB,OAAO,CAACkB,MAAR,IAAkB,EAAnC;;IACA,IAAIlB,OAAO,CAACmC,SAAR,IAAqB,CAAC,KAAK7B,aAA/B,EAA8C;MAC5CqB,OAAO,CAACT,MAAR,CAAeiB,SAAf,GAA2BnC,OAAO,CAACmC,SAAnC;IACD;;IAED,MAAMC,cAAN,CAAqBZ,MAArB,EAA6BG,OAA7B,EAAsCF,QAAtC;EACD;;AApFiD;;AAuFpDhC,aAAa,CAACG,kBAAD,EAAqB,CAChCJ,MAAM,CAAC6C,cADyB,EAEhC7C,MAAM,CAAC8C,SAFyB,EAGhC9C,MAAM,CAAC+C,sBAHyB,CAArB,CAAb;AAMAC,MAAM,CAACC,OAAP,GAAiB7C,kBAAjB"},"metadata":{},"sourceType":"script"}