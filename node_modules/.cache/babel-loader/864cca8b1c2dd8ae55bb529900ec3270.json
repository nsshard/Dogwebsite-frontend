{"ast":null,"code":"'use strict';\n/**\n * Module dependencies.\n */\n\nconst raw = require('raw-body');\n\nconst inflate = require('inflation');\n\nconst qs = require('qs');\n\nconst utils = require('./utils');\n/**\n * Return a Promise which parses x-www-form-urlencoded requests.\n *\n * Pass a node request or an object with `.req`,\n * such as a koa Context.\n *\n * @param {Request} req\n * @param {Options} [opts]\n * @return {Function}\n * @api public\n */\n\n\nmodule.exports = async function (req, opts) {\n  req = req.req || req;\n  opts = utils.clone(opts);\n  const queryString = opts.queryString || {}; // keep compatibility with qs@4\n\n  if (queryString.allowDots === undefined) queryString.allowDots = true; // defaults\n\n  const len = req.headers['content-length'];\n  const encoding = req.headers['content-encoding'] || 'identity';\n  if (len && encoding === 'identity') opts.length = ~~len;\n  opts.encoding = opts.encoding || 'utf8';\n  opts.limit = opts.limit || '56kb';\n  opts.qs = opts.qs || qs;\n  const str = await raw(inflate(req), opts);\n\n  try {\n    const parsed = opts.qs.parse(str, queryString);\n    return opts.returnRawBody ? {\n      parsed,\n      raw: str\n    } : parsed;\n  } catch (err) {\n    err.status = 400;\n    err.body = str;\n    throw err;\n  }\n};","map":{"version":3,"names":["raw","require","inflate","qs","utils","module","exports","req","opts","clone","queryString","allowDots","undefined","len","headers","encoding","length","limit","str","parsed","parse","returnRawBody","err","status","body"],"sources":["C:/Users/Administrator/Desktop/webAPI work/web/dog-website/node_modules/co-body/lib/form.js"],"sourcesContent":["'use strict';\n\n/**\n * Module dependencies.\n */\n\nconst raw = require('raw-body');\nconst inflate = require('inflation');\nconst qs = require('qs');\nconst utils = require('./utils');\n\n/**\n * Return a Promise which parses x-www-form-urlencoded requests.\n *\n * Pass a node request or an object with `.req`,\n * such as a koa Context.\n *\n * @param {Request} req\n * @param {Options} [opts]\n * @return {Function}\n * @api public\n */\n\nmodule.exports = async function(req, opts) {\n  req = req.req || req;\n  opts = utils.clone(opts);\n  const queryString = opts.queryString || {};\n\n  // keep compatibility with qs@4\n  if (queryString.allowDots === undefined) queryString.allowDots = true;\n\n  // defaults\n  const len = req.headers['content-length'];\n  const encoding = req.headers['content-encoding'] || 'identity';\n  if (len && encoding === 'identity') opts.length = ~~len;\n  opts.encoding = opts.encoding || 'utf8';\n  opts.limit = opts.limit || '56kb';\n  opts.qs = opts.qs || qs;\n\n  const str = await raw(inflate(req), opts);\n  try {\n    const parsed = opts.qs.parse(str, queryString);\n    return opts.returnRawBody ? { parsed, raw: str } : parsed;\n  } catch (err) {\n    err.status = 400;\n    err.body = str;\n    throw err;\n  }\n};\n"],"mappings":"AAAA;AAEA;AACA;AACA;;AAEA,MAAMA,GAAG,GAAGC,OAAO,CAAC,UAAD,CAAnB;;AACA,MAAMC,OAAO,GAAGD,OAAO,CAAC,WAAD,CAAvB;;AACA,MAAME,EAAE,GAAGF,OAAO,CAAC,IAAD,CAAlB;;AACA,MAAMG,KAAK,GAAGH,OAAO,CAAC,SAAD,CAArB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAI,MAAM,CAACC,OAAP,GAAiB,gBAAeC,GAAf,EAAoBC,IAApB,EAA0B;EACzCD,GAAG,GAAGA,GAAG,CAACA,GAAJ,IAAWA,GAAjB;EACAC,IAAI,GAAGJ,KAAK,CAACK,KAAN,CAAYD,IAAZ,CAAP;EACA,MAAME,WAAW,GAAGF,IAAI,CAACE,WAAL,IAAoB,EAAxC,CAHyC,CAKzC;;EACA,IAAIA,WAAW,CAACC,SAAZ,KAA0BC,SAA9B,EAAyCF,WAAW,CAACC,SAAZ,GAAwB,IAAxB,CANA,CAQzC;;EACA,MAAME,GAAG,GAAGN,GAAG,CAACO,OAAJ,CAAY,gBAAZ,CAAZ;EACA,MAAMC,QAAQ,GAAGR,GAAG,CAACO,OAAJ,CAAY,kBAAZ,KAAmC,UAApD;EACA,IAAID,GAAG,IAAIE,QAAQ,KAAK,UAAxB,EAAoCP,IAAI,CAACQ,MAAL,GAAc,CAAC,CAACH,GAAhB;EACpCL,IAAI,CAACO,QAAL,GAAgBP,IAAI,CAACO,QAAL,IAAiB,MAAjC;EACAP,IAAI,CAACS,KAAL,GAAaT,IAAI,CAACS,KAAL,IAAc,MAA3B;EACAT,IAAI,CAACL,EAAL,GAAUK,IAAI,CAACL,EAAL,IAAWA,EAArB;EAEA,MAAMe,GAAG,GAAG,MAAMlB,GAAG,CAACE,OAAO,CAACK,GAAD,CAAR,EAAeC,IAAf,CAArB;;EACA,IAAI;IACF,MAAMW,MAAM,GAAGX,IAAI,CAACL,EAAL,CAAQiB,KAAR,CAAcF,GAAd,EAAmBR,WAAnB,CAAf;IACA,OAAOF,IAAI,CAACa,aAAL,GAAqB;MAAEF,MAAF;MAAUnB,GAAG,EAAEkB;IAAf,CAArB,GAA4CC,MAAnD;EACD,CAHD,CAGE,OAAOG,GAAP,EAAY;IACZA,GAAG,CAACC,MAAJ,GAAa,GAAb;IACAD,GAAG,CAACE,IAAJ,GAAWN,GAAX;IACA,MAAMI,GAAN;EACD;AACF,CAzBD"},"metadata":{},"sourceType":"script"}