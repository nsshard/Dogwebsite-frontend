{"ast":null,"code":"// muri\n\n/**\n * MongoDB URI parser as described here:\n * http://www.mongodb.org/display/DOCS/Connections\n */\n\n/**\n * Module dependencies\n */\nvar qs = require('querystring');\n/**\n * Defaults\n */\n\n\nvar DEFAULT_PORT = 27017;\nvar DEFAULT_DB = 'test';\nvar ADMIN_DB = 'admin';\n/**\n * Muri\n */\n\nmodule.exports = exports = function muri(str) {\n  if (!/^mongodb:\\/\\//.test(str)) {\n    throw new Error('Invalid mongodb uri \"' + str + '\". Must begin with \"mongodb://\"');\n  }\n\n  var ret = {\n    hosts: [],\n    db: DEFAULT_DB,\n    options: {}\n  };\n  var match = /^mongodb:\\/\\/([^?]+)(\\??.*)$/.exec(str);\n\n  if (!match || '/' == match[1]) {\n    throw new Error('Invalid mongodb uri \"' + str + '\". Missing hostname');\n  }\n\n  var uris = match[1];\n  var path = match[2];\n  var db;\n  uris.split(',').forEach(function (uri) {\n    var o = parse(uri);\n\n    if (o.host) {\n      ret.hosts.push({\n        host: o.host,\n        port: parseInt(o.port, 10)\n      });\n\n      if (!db && o.db) {\n        db = o.db;\n      }\n    } else if (o.ipc) {\n      ret.hosts.push({\n        ipc: o.ipc\n      });\n    }\n\n    if (o.auth) {\n      ret.auth = {\n        user: o.auth.user ? o.auth.user : void 0,\n        pass: o.auth.pass ? o.auth.pass : void 0\n      };\n    }\n  });\n\n  if (!ret.hosts.length) {\n    throw new Error('Invalid mongodb uri \"' + str + '\". Missing hostname');\n  }\n\n  var parts = path.split('?');\n\n  if (!db) {\n    if (parts[0]) {\n      db = parts[0].replace(/^\\//, '');\n    } else {\n      // deal with ipc formats\n      db = /\\/([^\\.]+)$/.exec(match[1]);\n\n      if (db && db[1]) {\n        db = db[1];\n      }\n    }\n  }\n\n  if (db) {\n    ret.db = db;\n  } else if (ret.auth) {\n    ret.db = ADMIN_DB;\n  }\n\n  if (parts[1]) {\n    ret.options = options(parts[1]);\n  }\n\n  return ret;\n};\n/**\n * Parse str into key/val pairs casting values appropriately.\n */\n\n\nfunction options(str) {\n  var sep = /;/.test(str) ? ';' : '&';\n  var ret = qs.parse(str, sep);\n  Object.keys(ret).forEach(function (key) {\n    var val = ret[key];\n\n    if ('readPreferenceTags' == key) {\n      val = readPref(val);\n\n      if (val) {\n        ret[key] = Array.isArray(val) ? val : [val];\n      }\n    } else {\n      ret[key] = format(val);\n    }\n  });\n  return ret;\n}\n\nfunction format(val) {\n  var num;\n\n  if ('true' == val) {\n    return true;\n  } else if ('false' == val) {\n    return false;\n  } else {\n    num = parseInt(+val, 10);\n\n    if (!isNaN(num)) {\n      return num;\n    }\n  }\n\n  return val;\n}\n\nfunction readPref(val) {\n  var ret;\n\n  if (Array.isArray(val)) {\n    ret = val.map(readPref).filter(Boolean);\n    return ret.length ? ret : undefined;\n  }\n\n  var pair = val.split(',');\n  var hasKeys;\n  ret = {};\n  pair.forEach(function (kv) {\n    kv = (kv || '').trim();\n    if (!kv) return;\n    hasKeys = true;\n    var split = kv.split(':');\n    ret[split[0]] = format(split[1]);\n  });\n  return hasKeys && ret;\n}\n\nvar ipcRgx = /\\.sock/;\n\nfunction parse(uriString) {\n  // do not use require('url').parse b/c it can't handle # in username or pwd\n  // mongo uris are strange\n  var uri = uriString;\n  var ret = {};\n  var parts;\n  var auth;\n  var ipcs; // skip protocol\n\n  uri = uri.replace(/^mongodb:\\/\\//, ''); // auth\n\n  if (/@/.test(uri)) {\n    parts = uri.split(/@/);\n    auth = parts[0];\n    uri = parts[1];\n    parts = auth.split(':');\n    ret.auth = {};\n    ret.auth.user = decodeURIComponent(parts[0]);\n    ret.auth.pass = parts[1] ? decodeURIComponent(parts[1]) : void 0;\n  } // unix domain sockets\n\n\n  if (ipcRgx.test(uri)) {\n    ipcs = uri.split(ipcRgx);\n    ret.ipc = ipcs[0] + '.sock'; // included a database?\n\n    if (ipcs[1]) {\n      // strip leading / from database name\n      ipcs[1] = ipcs[1].replace(/^\\//, '');\n\n      if (ipcs[1]) {\n        ret.db = ipcs[1];\n      }\n    }\n\n    return ret;\n  } // database name\n\n\n  parts = uri.split('/');\n  if (parts[1]) ret.db = parts[1]; // ipv6, [ip]:host\n\n  if (/^\\[[^\\]]+\\]:\\d+/.test(parts[0])) {\n    ret.host = parts[0].substring(1, parts[0].indexOf(']:'));\n    ret.port = parts[0].substring(parts[0].indexOf(']:') + ']:'.length);\n  } else {\n    // host:port\n    parts = parts[0].split(':');\n    ret.host = parts[0];\n    ret.port = parts[1] || DEFAULT_PORT;\n  }\n\n  return ret;\n}\n/**\n * Version\n */\n\n\nmodule.exports.version = require('../package.json').version;","map":{"version":3,"names":["qs","require","DEFAULT_PORT","DEFAULT_DB","ADMIN_DB","module","exports","muri","str","test","Error","ret","hosts","db","options","match","exec","uris","path","split","forEach","uri","o","parse","host","push","port","parseInt","ipc","auth","user","pass","length","parts","replace","sep","Object","keys","key","val","readPref","Array","isArray","format","num","isNaN","map","filter","Boolean","undefined","pair","hasKeys","kv","trim","ipcRgx","uriString","ipcs","decodeURIComponent","substring","indexOf","version"],"sources":["C:/Users/Administrator/Desktop/webAPI work/web/dog-website/node_modules/muri/lib/index.js"],"sourcesContent":["// muri\n\n/**\n * MongoDB URI parser as described here:\n * http://www.mongodb.org/display/DOCS/Connections\n */\n\n/**\n * Module dependencies\n */\n\nvar qs = require('querystring');\n\n/**\n * Defaults\n */\n\nvar DEFAULT_PORT = 27017;\nvar DEFAULT_DB = 'test';\nvar ADMIN_DB = 'admin';\n\n/**\n * Muri\n */\n\nmodule.exports = exports = function muri (str) {\n  if (!/^mongodb:\\/\\//.test(str)) {\n    throw new Error('Invalid mongodb uri \"' + str + '\". Must begin with \"mongodb://\"');\n  }\n\n  var ret = {\n      hosts: []\n    , db: DEFAULT_DB\n    , options: {}\n  }\n\n  var match = /^mongodb:\\/\\/([^?]+)(\\??.*)$/.exec(str);\n  if (!match || '/' == match[1]) {\n    throw new Error('Invalid mongodb uri \"' + str + '\". Missing hostname');\n  }\n\n  var uris = match[1];\n  var path = match[2];\n  var db;\n\n  uris.split(',').forEach(function (uri) {\n    var o = parse(uri);\n\n    if (o.host) {\n      ret.hosts.push({\n          host: o.host\n        , port: parseInt(o.port, 10)\n      })\n\n      if (!db && o.db) {\n        db = o.db;\n      }\n    } else if (o.ipc) {\n      ret.hosts.push({ ipc: o.ipc });\n    }\n\n    if (o.auth) {\n      ret.auth = {\n          user: o.auth.user ? (o.auth.user) : void 0\n        , pass: o.auth.pass ? (o.auth.pass) : void 0\n      }\n    }\n  })\n\n  if (!ret.hosts.length) {\n    throw new Error('Invalid mongodb uri \"' + str + '\". Missing hostname');\n  }\n\n  var parts = path.split('?');\n\n  if (!db) {\n    if (parts[0]) {\n      db = parts[0].replace(/^\\//, '');\n    } else {\n      // deal with ipc formats\n      db = /\\/([^\\.]+)$/.exec(match[1]);\n      if (db && db[1]) {\n        db = db[1];\n      }\n    }\n  }\n\n  if (db) {\n    ret.db = db;\n  } else if (ret.auth) {\n    ret.db = ADMIN_DB;\n  }\n\n  if (parts[1]) {\n    ret.options = options(parts[1]);\n  }\n\n  return ret;\n}\n\n/**\n * Parse str into key/val pairs casting values appropriately.\n */\n\nfunction options (str) {\n  var sep = /;/.test(str)\n    ? ';'\n    : '&';\n\n  var ret = qs.parse(str, sep);\n\n  Object.keys(ret).forEach(function (key) {\n    var val = ret[key];\n    if ('readPreferenceTags' == key) {\n      val = readPref(val);\n      if (val) {\n        ret[key] = Array.isArray(val)\n          ? val\n          : [val];\n      }\n    } else {\n      ret[key] = format(val);\n    }\n  });\n\n  return ret;\n}\n\nfunction format (val) {\n  var num;\n\n  if ('true' == val) {\n    return true;\n  } else if ('false' == val) {\n    return false;\n  } else {\n    num = parseInt(+val, 10);\n    if (!isNaN(num)) {\n      return num;\n    }\n  }\n\n  return val;\n}\n\nfunction readPref (val) {\n  var ret;\n\n  if (Array.isArray(val)) {\n    ret = val.map(readPref).filter(Boolean);\n    return ret.length\n      ? ret\n      : undefined\n  }\n\n  var pair = val.split(',');\n  var hasKeys;\n  ret = {};\n\n  pair.forEach(function (kv) {\n    kv = (kv || '').trim();\n    if (!kv) return;\n    hasKeys = true;\n    var split = kv.split(':');\n    ret[split[0]] = format(split[1]);\n  });\n\n  return hasKeys && ret;\n}\n\nvar ipcRgx = /\\.sock/;\n\nfunction parse (uriString) {\n  // do not use require('url').parse b/c it can't handle # in username or pwd\n  // mongo uris are strange\n\n  var uri = uriString;\n  var ret = {};\n  var parts;\n  var auth;\n  var ipcs;\n\n  // skip protocol\n  uri = uri.replace(/^mongodb:\\/\\//, '');\n\n  // auth\n  if (/@/.test(uri)) {\n    parts = uri.split(/@/);\n    auth = parts[0];\n    uri = parts[1];\n\n    parts = auth.split(':');\n    ret.auth = {};\n    ret.auth.user = decodeURIComponent(parts[0]);\n    ret.auth.pass = parts[1] ? decodeURIComponent(parts[1]) : void 0;\n  }\n\n  // unix domain sockets\n  if (ipcRgx.test(uri)) {\n    ipcs = uri.split(ipcRgx);\n    ret.ipc = ipcs[0] + '.sock';\n\n    // included a database?\n    if (ipcs[1]) {\n      // strip leading / from database name\n      ipcs[1] = ipcs[1].replace(/^\\//, '');\n\n      if (ipcs[1]) {\n        ret.db = ipcs[1];\n      }\n    }\n\n    return ret;\n  }\n\n  // database name\n  parts = uri.split('/');\n  if (parts[1]) ret.db = parts[1];\n\n  // ipv6, [ip]:host\n  if (/^\\[[^\\]]+\\]:\\d+/.test(parts[0])) {\n    ret.host = parts[0].substring(1, parts[0].indexOf(']:'));\n    ret.port = parts[0].substring(parts[0].indexOf(']:') + ']:'.length);\n  } else {\n    // host:port\n    parts = parts[0].split(':');\n    ret.host = parts[0];\n    ret.port = parts[1] || DEFAULT_PORT;\n  }\n\n  return ret;\n}\n\n/**\n * Version\n */\n\nmodule.exports.version = require('../package.json').version;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}