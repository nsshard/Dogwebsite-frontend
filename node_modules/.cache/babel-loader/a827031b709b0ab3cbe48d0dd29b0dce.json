{"ast":null,"code":"var pSlice = Array.prototype.slice;\n\nvar objectKeys = require('./lib/keys.js');\n\nvar isArguments = require('./lib/is_arguments.js');\n\nvar deepEqual = module.exports = function (actual, expected, opts) {\n  if (!opts) opts = {}; // 7.1. All identical values are equivalent, as determined by ===.\n\n  if (actual === expected) {\n    return true;\n  } else if (actual instanceof Date && expected instanceof Date) {\n    return actual.getTime() === expected.getTime(); // 7.3. Other pairs that do not both pass typeof value == 'object',\n    // equivalence is determined by ==.\n  } else if (!actual || !expected || typeof actual != 'object' && typeof expected != 'object') {\n    return opts.strict ? actual === expected : actual == expected; // 7.4. For all other Object pairs, including Array objects, equivalence is\n    // determined by having the same number of owned properties (as verified\n    // with Object.prototype.hasOwnProperty.call), the same set of keys\n    // (although not necessarily the same order), equivalent values for every\n    // corresponding key, and an identical 'prototype' property. Note: this\n    // accounts for both named and indexed properties on Arrays.\n  } else {\n    return objEquiv(actual, expected, opts);\n  }\n};\n\nfunction isUndefinedOrNull(value) {\n  return value === null || value === undefined;\n}\n\nfunction isBuffer(x) {\n  if (!x || typeof x !== 'object' || typeof x.length !== 'number') return false;\n\n  if (typeof x.copy !== 'function' || typeof x.slice !== 'function') {\n    return false;\n  }\n\n  if (x.length > 0 && typeof x[0] !== 'number') return false;\n  return true;\n}\n\nfunction objEquiv(a, b, opts) {\n  var i, key;\n  if (isUndefinedOrNull(a) || isUndefinedOrNull(b)) return false; // an identical 'prototype' property.\n\n  if (a.prototype !== b.prototype) return false; //~~~I've managed to break Object.keys through screwy arguments passing.\n  //   Converting to array solves the problem.\n\n  if (isArguments(a)) {\n    if (!isArguments(b)) {\n      return false;\n    }\n\n    a = pSlice.call(a);\n    b = pSlice.call(b);\n    return deepEqual(a, b, opts);\n  }\n\n  if (isBuffer(a)) {\n    if (!isBuffer(b)) {\n      return false;\n    }\n\n    if (a.length !== b.length) return false;\n\n    for (i = 0; i < a.length; i++) {\n      if (a[i] !== b[i]) return false;\n    }\n\n    return true;\n  }\n\n  try {\n    var ka = objectKeys(a),\n        kb = objectKeys(b);\n  } catch (e) {\n    //happens when one is a string literal and the other isn't\n    return false;\n  } // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n\n\n  if (ka.length != kb.length) return false; //the same set of keys (although not necessarily the same order),\n\n  ka.sort();\n  kb.sort(); //~~~cheap key test\n\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] != kb[i]) return false;\n  } //equivalent values for every corresponding key, and\n  //~~~possibly expensive deep test\n\n\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!deepEqual(a[key], b[key], opts)) return false;\n  }\n\n  return typeof a === typeof b;\n}","map":{"version":3,"names":["pSlice","Array","prototype","slice","objectKeys","require","isArguments","deepEqual","module","exports","actual","expected","opts","Date","getTime","strict","objEquiv","isUndefinedOrNull","value","undefined","isBuffer","x","length","copy","a","b","i","key","call","ka","kb","e","sort"],"sources":["C:/Users/Administrator/Desktop/webAPI work/web/dog-website/node_modules/deep-equal/index.js"],"sourcesContent":["var pSlice = Array.prototype.slice;\nvar objectKeys = require('./lib/keys.js');\nvar isArguments = require('./lib/is_arguments.js');\n\nvar deepEqual = module.exports = function (actual, expected, opts) {\n  if (!opts) opts = {};\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (actual === expected) {\n    return true;\n\n  } else if (actual instanceof Date && expected instanceof Date) {\n    return actual.getTime() === expected.getTime();\n\n  // 7.3. Other pairs that do not both pass typeof value == 'object',\n  // equivalence is determined by ==.\n  } else if (!actual || !expected || typeof actual != 'object' && typeof expected != 'object') {\n    return opts.strict ? actual === expected : actual == expected;\n\n  // 7.4. For all other Object pairs, including Array objects, equivalence is\n  // determined by having the same number of owned properties (as verified\n  // with Object.prototype.hasOwnProperty.call), the same set of keys\n  // (although not necessarily the same order), equivalent values for every\n  // corresponding key, and an identical 'prototype' property. Note: this\n  // accounts for both named and indexed properties on Arrays.\n  } else {\n    return objEquiv(actual, expected, opts);\n  }\n}\n\nfunction isUndefinedOrNull(value) {\n  return value === null || value === undefined;\n}\n\nfunction isBuffer (x) {\n  if (!x || typeof x !== 'object' || typeof x.length !== 'number') return false;\n  if (typeof x.copy !== 'function' || typeof x.slice !== 'function') {\n    return false;\n  }\n  if (x.length > 0 && typeof x[0] !== 'number') return false;\n  return true;\n}\n\nfunction objEquiv(a, b, opts) {\n  var i, key;\n  if (isUndefinedOrNull(a) || isUndefinedOrNull(b))\n    return false;\n  // an identical 'prototype' property.\n  if (a.prototype !== b.prototype) return false;\n  //~~~I've managed to break Object.keys through screwy arguments passing.\n  //   Converting to array solves the problem.\n  if (isArguments(a)) {\n    if (!isArguments(b)) {\n      return false;\n    }\n    a = pSlice.call(a);\n    b = pSlice.call(b);\n    return deepEqual(a, b, opts);\n  }\n  if (isBuffer(a)) {\n    if (!isBuffer(b)) {\n      return false;\n    }\n    if (a.length !== b.length) return false;\n    for (i = 0; i < a.length; i++) {\n      if (a[i] !== b[i]) return false;\n    }\n    return true;\n  }\n  try {\n    var ka = objectKeys(a),\n        kb = objectKeys(b);\n  } catch (e) {//happens when one is a string literal and the other isn't\n    return false;\n  }\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (ka.length != kb.length)\n    return false;\n  //the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  //~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] != kb[i])\n      return false;\n  }\n  //equivalent values for every corresponding key, and\n  //~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!deepEqual(a[key], b[key], opts)) return false;\n  }\n  return typeof a === typeof b;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}