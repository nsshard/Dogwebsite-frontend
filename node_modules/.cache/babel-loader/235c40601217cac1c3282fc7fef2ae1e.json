{"ast":null,"code":"'use strict';\n\nconst Aspect = require('./operation').Aspect;\n\nconst defineAspects = require('./operation').defineAspects;\n\nconst CommandOperation = require('./command');\n\nconst applyWriteConcern = require('../utils').applyWriteConcern;\n\nconst loadCollection = require('../dynamic_loaders').loadCollection;\n\nconst MongoError = require('../core').MongoError;\n\nconst ReadPreference = require('../core').ReadPreference;\n\nconst ILLEGAL_COMMAND_FIELDS = new Set(['w', 'wtimeout', 'j', 'fsync', 'autoIndexId', 'strict', 'serializeFunctions', 'pkFactory', 'raw', 'readPreference', 'session', 'readConcern', 'writeConcern']);\n\nclass CreateCollectionOperation extends CommandOperation {\n  constructor(db, name, options) {\n    super(db, options);\n    this.name = name;\n  }\n\n  _buildCommand() {\n    const name = this.name;\n    const options = this.options;\n    const cmd = {\n      create: name\n    };\n\n    for (let n in options) {\n      if (options[n] != null && typeof options[n] !== 'function' && !ILLEGAL_COMMAND_FIELDS.has(n)) {\n        cmd[n] = options[n];\n      }\n    }\n\n    return cmd;\n  }\n\n  execute(callback) {\n    const db = this.db;\n    const name = this.name;\n    const options = this.options;\n    const Collection = loadCollection();\n    let listCollectionOptions = Object.assign({\n      nameOnly: true,\n      strict: false\n    }, options);\n    listCollectionOptions = applyWriteConcern(listCollectionOptions, {\n      db\n    }, listCollectionOptions);\n\n    function done(err) {\n      if (err) {\n        return callback(err);\n      }\n\n      try {\n        callback(null, new Collection(db, db.s.topology, db.databaseName, name, db.s.pkFactory, options));\n      } catch (err) {\n        callback(err);\n      }\n    }\n\n    const strictMode = listCollectionOptions.strict;\n\n    if (strictMode) {\n      db.listCollections({\n        name\n      }, listCollectionOptions).setReadPreference(ReadPreference.PRIMARY).toArray((err, collections) => {\n        if (err) {\n          return callback(err);\n        }\n\n        if (collections.length > 0) {\n          return callback(new MongoError(`Collection ${name} already exists. Currently in strict mode.`));\n        }\n\n        super.execute(done);\n      });\n      return;\n    } // otherwise just execute the command\n\n\n    super.execute(done);\n  }\n\n}\n\ndefineAspects(CreateCollectionOperation, Aspect.WRITE_OPERATION);\nmodule.exports = CreateCollectionOperation;","map":{"version":3,"names":["Aspect","require","defineAspects","CommandOperation","applyWriteConcern","loadCollection","MongoError","ReadPreference","ILLEGAL_COMMAND_FIELDS","Set","CreateCollectionOperation","constructor","db","name","options","_buildCommand","cmd","create","n","has","execute","callback","Collection","listCollectionOptions","Object","assign","nameOnly","strict","done","err","s","topology","databaseName","pkFactory","strictMode","listCollections","setReadPreference","PRIMARY","toArray","collections","length","WRITE_OPERATION","module","exports"],"sources":["C:/Users/Administrator/Desktop/webAPI work/web/dog-website/node_modules/koa-mongo/node_modules/mongodb/lib/operations/create_collection.js"],"sourcesContent":["'use strict';\n\nconst Aspect = require('./operation').Aspect;\nconst defineAspects = require('./operation').defineAspects;\nconst CommandOperation = require('./command');\nconst applyWriteConcern = require('../utils').applyWriteConcern;\nconst loadCollection = require('../dynamic_loaders').loadCollection;\nconst MongoError = require('../core').MongoError;\nconst ReadPreference = require('../core').ReadPreference;\n\nconst ILLEGAL_COMMAND_FIELDS = new Set([\n  'w',\n  'wtimeout',\n  'j',\n  'fsync',\n  'autoIndexId',\n  'strict',\n  'serializeFunctions',\n  'pkFactory',\n  'raw',\n  'readPreference',\n  'session',\n  'readConcern',\n  'writeConcern'\n]);\n\nclass CreateCollectionOperation extends CommandOperation {\n  constructor(db, name, options) {\n    super(db, options);\n    this.name = name;\n  }\n\n  _buildCommand() {\n    const name = this.name;\n    const options = this.options;\n\n    const cmd = { create: name };\n    for (let n in options) {\n      if (\n        options[n] != null &&\n        typeof options[n] !== 'function' &&\n        !ILLEGAL_COMMAND_FIELDS.has(n)\n      ) {\n        cmd[n] = options[n];\n      }\n    }\n\n    return cmd;\n  }\n\n  execute(callback) {\n    const db = this.db;\n    const name = this.name;\n    const options = this.options;\n    const Collection = loadCollection();\n\n    let listCollectionOptions = Object.assign({ nameOnly: true, strict: false }, options);\n    listCollectionOptions = applyWriteConcern(listCollectionOptions, { db }, listCollectionOptions);\n\n    function done(err) {\n      if (err) {\n        return callback(err);\n      }\n\n      try {\n        callback(\n          null,\n          new Collection(db, db.s.topology, db.databaseName, name, db.s.pkFactory, options)\n        );\n      } catch (err) {\n        callback(err);\n      }\n    }\n\n    const strictMode = listCollectionOptions.strict;\n    if (strictMode) {\n      db.listCollections({ name }, listCollectionOptions)\n        .setReadPreference(ReadPreference.PRIMARY)\n        .toArray((err, collections) => {\n          if (err) {\n            return callback(err);\n          }\n\n          if (collections.length > 0) {\n            return callback(\n              new MongoError(`Collection ${name} already exists. Currently in strict mode.`)\n            );\n          }\n\n          super.execute(done);\n        });\n\n      return;\n    }\n\n    // otherwise just execute the command\n    super.execute(done);\n  }\n}\n\ndefineAspects(CreateCollectionOperation, Aspect.WRITE_OPERATION);\nmodule.exports = CreateCollectionOperation;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}