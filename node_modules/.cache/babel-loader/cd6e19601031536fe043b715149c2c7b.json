{"ast":null,"code":"/*!\n * Connect - session - Store\n * Copyright(c) 2010 Sencha Inc.\n * Copyright(c) 2011 TJ Holowaychuk\n * MIT Licensed\n */\n'use strict';\n/**\n * Module dependencies.\n * @private\n */\n\nvar Cookie = require('./cookie');\n\nvar EventEmitter = require('events').EventEmitter;\n\nvar Session = require('./session');\n\nvar util = require('util');\n/**\n * Module exports.\n * @public\n */\n\n\nmodule.exports = Store;\n/**\n * Abstract base class for session stores.\n * @public\n */\n\nfunction Store() {\n  EventEmitter.call(this);\n}\n/**\n * Inherit from EventEmitter.\n */\n\n\nutil.inherits(Store, EventEmitter);\n/**\n * Re-generate the given requests's session.\n *\n * @param {IncomingRequest} req\n * @return {Function} fn\n * @api public\n */\n\nStore.prototype.regenerate = function (req, fn) {\n  var self = this;\n  this.destroy(req.sessionID, function (err) {\n    self.generate(req);\n    fn(err);\n  });\n};\n/**\n * Load a `Session` instance via the given `sid`\n * and invoke the callback `fn(err, sess)`.\n *\n * @param {String} sid\n * @param {Function} fn\n * @api public\n */\n\n\nStore.prototype.load = function (sid, fn) {\n  var self = this;\n  this.get(sid, function (err, sess) {\n    if (err) return fn(err);\n    if (!sess) return fn();\n    var req = {\n      sessionID: sid,\n      sessionStore: self\n    };\n    fn(null, self.createSession(req, sess));\n  });\n};\n/**\n * Create session from JSON `sess` data.\n *\n * @param {IncomingRequest} req\n * @param {Object} sess\n * @return {Session}\n * @api private\n */\n\n\nStore.prototype.createSession = function (req, sess) {\n  var expires = sess.cookie.expires;\n  var originalMaxAge = sess.cookie.originalMaxAge;\n  sess.cookie = new Cookie(sess.cookie);\n\n  if (typeof expires === 'string') {\n    // convert expires to a Date object\n    sess.cookie.expires = new Date(expires);\n  } // keep originalMaxAge intact\n\n\n  sess.cookie.originalMaxAge = originalMaxAge;\n  req.session = new Session(req, sess);\n  return req.session;\n};","map":{"version":3,"names":["Cookie","require","EventEmitter","Session","util","module","exports","Store","call","inherits","prototype","regenerate","req","fn","self","destroy","sessionID","err","generate","load","sid","get","sess","sessionStore","createSession","expires","cookie","originalMaxAge","Date","session"],"sources":["C:/Users/Administrator/Desktop/webAPI work/web/dog-website/node_modules/express-session/session/store.js"],"sourcesContent":["/*!\n * Connect - session - Store\n * Copyright(c) 2010 Sencha Inc.\n * Copyright(c) 2011 TJ Holowaychuk\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar Cookie = require('./cookie')\nvar EventEmitter = require('events').EventEmitter\nvar Session = require('./session')\nvar util = require('util')\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = Store\n\n/**\n * Abstract base class for session stores.\n * @public\n */\n\nfunction Store () {\n  EventEmitter.call(this)\n}\n\n/**\n * Inherit from EventEmitter.\n */\n\nutil.inherits(Store, EventEmitter)\n\n/**\n * Re-generate the given requests's session.\n *\n * @param {IncomingRequest} req\n * @return {Function} fn\n * @api public\n */\n\nStore.prototype.regenerate = function(req, fn){\n  var self = this;\n  this.destroy(req.sessionID, function(err){\n    self.generate(req);\n    fn(err);\n  });\n};\n\n/**\n * Load a `Session` instance via the given `sid`\n * and invoke the callback `fn(err, sess)`.\n *\n * @param {String} sid\n * @param {Function} fn\n * @api public\n */\n\nStore.prototype.load = function(sid, fn){\n  var self = this;\n  this.get(sid, function(err, sess){\n    if (err) return fn(err);\n    if (!sess) return fn();\n    var req = { sessionID: sid, sessionStore: self };\n    fn(null, self.createSession(req, sess))\n  });\n};\n\n/**\n * Create session from JSON `sess` data.\n *\n * @param {IncomingRequest} req\n * @param {Object} sess\n * @return {Session}\n * @api private\n */\n\nStore.prototype.createSession = function(req, sess){\n  var expires = sess.cookie.expires\n  var originalMaxAge = sess.cookie.originalMaxAge\n\n  sess.cookie = new Cookie(sess.cookie);\n\n  if (typeof expires === 'string') {\n    // convert expires to a Date object\n    sess.cookie.expires = new Date(expires)\n  }\n\n  // keep originalMaxAge intact\n  sess.cookie.originalMaxAge = originalMaxAge\n\n  req.session = new Session(req, sess);\n  return req.session;\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;;AAEA,IAAIA,MAAM,GAAGC,OAAO,CAAC,UAAD,CAApB;;AACA,IAAIC,YAAY,GAAGD,OAAO,CAAC,QAAD,CAAP,CAAkBC,YAArC;;AACA,IAAIC,OAAO,GAAGF,OAAO,CAAC,WAAD,CAArB;;AACA,IAAIG,IAAI,GAAGH,OAAO,CAAC,MAAD,CAAlB;AAEA;AACA;AACA;AACA;;;AAEAI,MAAM,CAACC,OAAP,GAAiBC,KAAjB;AAEA;AACA;AACA;AACA;;AAEA,SAASA,KAAT,GAAkB;EAChBL,YAAY,CAACM,IAAb,CAAkB,IAAlB;AACD;AAED;AACA;AACA;;;AAEAJ,IAAI,CAACK,QAAL,CAAcF,KAAd,EAAqBL,YAArB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAK,KAAK,CAACG,SAAN,CAAgBC,UAAhB,GAA6B,UAASC,GAAT,EAAcC,EAAd,EAAiB;EAC5C,IAAIC,IAAI,GAAG,IAAX;EACA,KAAKC,OAAL,CAAaH,GAAG,CAACI,SAAjB,EAA4B,UAASC,GAAT,EAAa;IACvCH,IAAI,CAACI,QAAL,CAAcN,GAAd;IACAC,EAAE,CAACI,GAAD,CAAF;EACD,CAHD;AAID,CAND;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAV,KAAK,CAACG,SAAN,CAAgBS,IAAhB,GAAuB,UAASC,GAAT,EAAcP,EAAd,EAAiB;EACtC,IAAIC,IAAI,GAAG,IAAX;EACA,KAAKO,GAAL,CAASD,GAAT,EAAc,UAASH,GAAT,EAAcK,IAAd,EAAmB;IAC/B,IAAIL,GAAJ,EAAS,OAAOJ,EAAE,CAACI,GAAD,CAAT;IACT,IAAI,CAACK,IAAL,EAAW,OAAOT,EAAE,EAAT;IACX,IAAID,GAAG,GAAG;MAAEI,SAAS,EAAEI,GAAb;MAAkBG,YAAY,EAAET;IAAhC,CAAV;IACAD,EAAE,CAAC,IAAD,EAAOC,IAAI,CAACU,aAAL,CAAmBZ,GAAnB,EAAwBU,IAAxB,CAAP,CAAF;EACD,CALD;AAMD,CARD;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAf,KAAK,CAACG,SAAN,CAAgBc,aAAhB,GAAgC,UAASZ,GAAT,EAAcU,IAAd,EAAmB;EACjD,IAAIG,OAAO,GAAGH,IAAI,CAACI,MAAL,CAAYD,OAA1B;EACA,IAAIE,cAAc,GAAGL,IAAI,CAACI,MAAL,CAAYC,cAAjC;EAEAL,IAAI,CAACI,MAAL,GAAc,IAAI1B,MAAJ,CAAWsB,IAAI,CAACI,MAAhB,CAAd;;EAEA,IAAI,OAAOD,OAAP,KAAmB,QAAvB,EAAiC;IAC/B;IACAH,IAAI,CAACI,MAAL,CAAYD,OAAZ,GAAsB,IAAIG,IAAJ,CAASH,OAAT,CAAtB;EACD,CATgD,CAWjD;;;EACAH,IAAI,CAACI,MAAL,CAAYC,cAAZ,GAA6BA,cAA7B;EAEAf,GAAG,CAACiB,OAAJ,GAAc,IAAI1B,OAAJ,CAAYS,GAAZ,EAAiBU,IAAjB,CAAd;EACA,OAAOV,GAAG,CAACiB,OAAX;AACD,CAhBD"},"metadata":{},"sourceType":"script"}