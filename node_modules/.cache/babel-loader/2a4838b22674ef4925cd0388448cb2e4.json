{"ast":null,"code":"/*!\n * Connect - session - Session\n * Copyright(c) 2010 Sencha Inc.\n * Copyright(c) 2011 TJ Holowaychuk\n * MIT Licensed\n */\n'use strict';\n/**\n * Expose Session.\n */\n\nmodule.exports = Session;\n/**\n * Create a new `Session` with the given request and `data`.\n *\n * @param {IncomingRequest} req\n * @param {Object} data\n * @api private\n */\n\nfunction Session(req, data) {\n  Object.defineProperty(this, 'req', {\n    value: req\n  });\n  Object.defineProperty(this, 'id', {\n    value: req.sessionID\n  });\n\n  if (typeof data === 'object' && data !== null) {\n    // merge data into this, ignoring prototype properties\n    for (var prop in data) {\n      if (!(prop in this)) {\n        this[prop] = data[prop];\n      }\n    }\n  }\n}\n/**\n * Update reset `.cookie.maxAge` to prevent\n * the cookie from expiring when the\n * session is still active.\n *\n * @return {Session} for chaining\n * @api public\n */\n\n\ndefineMethod(Session.prototype, 'touch', function touch() {\n  return this.resetMaxAge();\n});\n/**\n * Reset `.maxAge` to `.originalMaxAge`.\n *\n * @return {Session} for chaining\n * @api public\n */\n\ndefineMethod(Session.prototype, 'resetMaxAge', function resetMaxAge() {\n  this.cookie.maxAge = this.cookie.originalMaxAge;\n  return this;\n});\n/**\n * Save the session data with optional callback `fn(err)`.\n *\n * @param {Function} fn\n * @return {Session} for chaining\n * @api public\n */\n\ndefineMethod(Session.prototype, 'save', function save(fn) {\n  this.req.sessionStore.set(this.id, this, fn || function () {});\n  return this;\n});\n/**\n * Re-loads the session data _without_ altering\n * the maxAge properties. Invokes the callback `fn(err)`,\n * after which time if no exception has occurred the\n * `req.session` property will be a new `Session` object,\n * although representing the same session.\n *\n * @param {Function} fn\n * @return {Session} for chaining\n * @api public\n */\n\ndefineMethod(Session.prototype, 'reload', function reload(fn) {\n  var req = this.req;\n  var store = this.req.sessionStore;\n  store.get(this.id, function (err, sess) {\n    if (err) return fn(err);\n    if (!sess) return fn(new Error('failed to load session'));\n    store.createSession(req, sess);\n    fn();\n  });\n  return this;\n});\n/**\n * Destroy `this` session.\n *\n * @param {Function} fn\n * @return {Session} for chaining\n * @api public\n */\n\ndefineMethod(Session.prototype, 'destroy', function destroy(fn) {\n  delete this.req.session;\n  this.req.sessionStore.destroy(this.id, fn);\n  return this;\n});\n/**\n * Regenerate this request's session.\n *\n * @param {Function} fn\n * @return {Session} for chaining\n * @api public\n */\n\ndefineMethod(Session.prototype, 'regenerate', function regenerate(fn) {\n  this.req.sessionStore.regenerate(this.req, fn);\n  return this;\n});\n/**\n * Helper function for creating a method on a prototype.\n *\n * @param {Object} obj\n * @param {String} name\n * @param {Function} fn\n * @private\n */\n\nfunction defineMethod(obj, name, fn) {\n  Object.defineProperty(obj, name, {\n    configurable: true,\n    enumerable: false,\n    value: fn,\n    writable: true\n  });\n}\n\n;","map":{"version":3,"names":["module","exports","Session","req","data","Object","defineProperty","value","sessionID","prop","defineMethod","prototype","touch","resetMaxAge","cookie","maxAge","originalMaxAge","save","fn","sessionStore","set","id","reload","store","get","err","sess","Error","createSession","destroy","session","regenerate","obj","name","configurable","enumerable","writable"],"sources":["C:/Users/Administrator/Desktop/webAPI work/web/dog-website/node_modules/express-session/session/session.js"],"sourcesContent":["/*!\n * Connect - session - Session\n * Copyright(c) 2010 Sencha Inc.\n * Copyright(c) 2011 TJ Holowaychuk\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Expose Session.\n */\n\nmodule.exports = Session;\n\n/**\n * Create a new `Session` with the given request and `data`.\n *\n * @param {IncomingRequest} req\n * @param {Object} data\n * @api private\n */\n\nfunction Session(req, data) {\n  Object.defineProperty(this, 'req', { value: req });\n  Object.defineProperty(this, 'id', { value: req.sessionID });\n\n  if (typeof data === 'object' && data !== null) {\n    // merge data into this, ignoring prototype properties\n    for (var prop in data) {\n      if (!(prop in this)) {\n        this[prop] = data[prop]\n      }\n    }\n  }\n}\n\n/**\n * Update reset `.cookie.maxAge` to prevent\n * the cookie from expiring when the\n * session is still active.\n *\n * @return {Session} for chaining\n * @api public\n */\n\ndefineMethod(Session.prototype, 'touch', function touch() {\n  return this.resetMaxAge();\n});\n\n/**\n * Reset `.maxAge` to `.originalMaxAge`.\n *\n * @return {Session} for chaining\n * @api public\n */\n\ndefineMethod(Session.prototype, 'resetMaxAge', function resetMaxAge() {\n  this.cookie.maxAge = this.cookie.originalMaxAge;\n  return this;\n});\n\n/**\n * Save the session data with optional callback `fn(err)`.\n *\n * @param {Function} fn\n * @return {Session} for chaining\n * @api public\n */\n\ndefineMethod(Session.prototype, 'save', function save(fn) {\n  this.req.sessionStore.set(this.id, this, fn || function(){});\n  return this;\n});\n\n/**\n * Re-loads the session data _without_ altering\n * the maxAge properties. Invokes the callback `fn(err)`,\n * after which time if no exception has occurred the\n * `req.session` property will be a new `Session` object,\n * although representing the same session.\n *\n * @param {Function} fn\n * @return {Session} for chaining\n * @api public\n */\n\ndefineMethod(Session.prototype, 'reload', function reload(fn) {\n  var req = this.req\n  var store = this.req.sessionStore\n\n  store.get(this.id, function(err, sess){\n    if (err) return fn(err);\n    if (!sess) return fn(new Error('failed to load session'));\n    store.createSession(req, sess);\n    fn();\n  });\n  return this;\n});\n\n/**\n * Destroy `this` session.\n *\n * @param {Function} fn\n * @return {Session} for chaining\n * @api public\n */\n\ndefineMethod(Session.prototype, 'destroy', function destroy(fn) {\n  delete this.req.session;\n  this.req.sessionStore.destroy(this.id, fn);\n  return this;\n});\n\n/**\n * Regenerate this request's session.\n *\n * @param {Function} fn\n * @return {Session} for chaining\n * @api public\n */\n\ndefineMethod(Session.prototype, 'regenerate', function regenerate(fn) {\n  this.req.sessionStore.regenerate(this.req, fn);\n  return this;\n});\n\n/**\n * Helper function for creating a method on a prototype.\n *\n * @param {Object} obj\n * @param {String} name\n * @param {Function} fn\n * @private\n */\nfunction defineMethod(obj, name, fn) {\n  Object.defineProperty(obj, name, {\n    configurable: true,\n    enumerable: false,\n    value: fn,\n    writable: true\n  });\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}