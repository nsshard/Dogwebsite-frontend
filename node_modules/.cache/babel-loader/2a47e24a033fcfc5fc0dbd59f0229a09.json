{"ast":null,"code":"const {\n  response\n} = require(\"express\");\n\nconst Router = require(\"koa-router\");\n\nconst {\n  createaccount,\n  getaccount,\n  getaccounts,\n  deleteaccount,\n  updateaccount,\n  UserNameAlreadyExists\n} = require('../dal/accountAPI');\n\nconst router = new Router({\n  prefix: '/accounts'\n});\nrouter.get('/', async ctx => {\n  ctx.body = await getaccounts();\n});\nrouter.post('/', async ctx => {\n  let account = ctx.request.body;\n  account = await createaccount(account);\n  ctx.response.status = 200;\n  ctx.body = account;\n});\nrouter.get('/:id', async ctx => {\n  const id = ctx.params.id;\n  ctx.body = await getaccount(id);\n});\nrouter.get('/:id/USERNAME', async ctx => {\n  const USERNAME = ctx.params.USERNAME;\n  ctx.body = await UserNameAlreadyExists(USERNAME);\n});\nrouter.delete('/:id', async ctx => {\n  const id = ctx.params.id;\n  await deleteaccount(id);\n});\nrouter.put('/:id', async ctx => {\n  const id = ctx.params.id;\n  let account = ctx.request.body;\n  account = await updateaccount(account);\n  ctx.response.status = 200;\n  ctx.body = account;\n});\nmodule.exports = router;","map":{"version":3,"names":["response","require","Router","createaccount","getaccount","getaccounts","deleteaccount","updateaccount","UserNameAlreadyExists","router","prefix","get","ctx","body","post","account","request","status","id","params","USERNAME","delete","put","module","exports"],"sources":["C:/Users/Administrator/Desktop/webAPI work/web/dog-website/src/backend/routes/accountroutes.js"],"sourcesContent":["const { response } = require(\"express\");\nconst Router = require(\"koa-router\");\n\nconst { createaccount,\n  getaccount,\n  getaccounts,\n  deleteaccount,\n  updateaccount, UserNameAlreadyExists\n} = require('../dal/accountAPI');\n\nconst router = new Router({\n  prefix:'/accounts'\n})\n\nrouter.get('/', async ctx=> {\n\n  ctx.body= await getaccounts() ;\n})\n\nrouter.post('/', async ctx=>{\n\n  let account = ctx.request.body;\n  account = await createaccount(account);\n  ctx.response.status = 200;\nctx.body = account;\n})\n\nrouter.get('/:id', async ctx=>{\n  const id = ctx.params.id;\n  ctx.body = await getaccount(id);\n})\n\nrouter.get('/:id/USERNAME', async ctx=>{\n  const USERNAME = ctx.params.USERNAME;\n  ctx.body = await UserNameAlreadyExists(USERNAME);\n})\n\nrouter.delete('/:id', async ctx=>{\n  const id = ctx.params.id;\n  await deleteaccount(id);\n})\n\nrouter.put('/:id', async ctx=>{\n  const id = ctx.params.id;\n  let account = ctx.request.body;\n  account = await updateaccount(account);\n  ctx.response.status = 200;\n  ctx.body = account;\n})\n\nmodule.exports = router;"],"mappings":"AAAA,MAAM;EAAEA;AAAF,IAAeC,OAAO,CAAC,SAAD,CAA5B;;AACA,MAAMC,MAAM,GAAGD,OAAO,CAAC,YAAD,CAAtB;;AAEA,MAAM;EAAEE,aAAF;EACJC,UADI;EAEJC,WAFI;EAGJC,aAHI;EAIJC,aAJI;EAIWC;AAJX,IAKFP,OAAO,CAAC,mBAAD,CALX;;AAOA,MAAMQ,MAAM,GAAG,IAAIP,MAAJ,CAAW;EACxBQ,MAAM,EAAC;AADiB,CAAX,CAAf;AAIAD,MAAM,CAACE,GAAP,CAAW,GAAX,EAAgB,MAAMC,GAAN,IAAY;EAE1BA,GAAG,CAACC,IAAJ,GAAU,MAAMR,WAAW,EAA3B;AACD,CAHD;AAKAI,MAAM,CAACK,IAAP,CAAY,GAAZ,EAAiB,MAAMF,GAAN,IAAW;EAE1B,IAAIG,OAAO,GAAGH,GAAG,CAACI,OAAJ,CAAYH,IAA1B;EACAE,OAAO,GAAG,MAAMZ,aAAa,CAACY,OAAD,CAA7B;EACAH,GAAG,CAACZ,QAAJ,CAAaiB,MAAb,GAAsB,GAAtB;EACFL,GAAG,CAACC,IAAJ,GAAWE,OAAX;AACC,CAND;AAQAN,MAAM,CAACE,GAAP,CAAW,MAAX,EAAmB,MAAMC,GAAN,IAAW;EAC5B,MAAMM,EAAE,GAAGN,GAAG,CAACO,MAAJ,CAAWD,EAAtB;EACAN,GAAG,CAACC,IAAJ,GAAW,MAAMT,UAAU,CAACc,EAAD,CAA3B;AACD,CAHD;AAKAT,MAAM,CAACE,GAAP,CAAW,eAAX,EAA4B,MAAMC,GAAN,IAAW;EACrC,MAAMQ,QAAQ,GAAGR,GAAG,CAACO,MAAJ,CAAWC,QAA5B;EACAR,GAAG,CAACC,IAAJ,GAAW,MAAML,qBAAqB,CAACY,QAAD,CAAtC;AACD,CAHD;AAKAX,MAAM,CAACY,MAAP,CAAc,MAAd,EAAsB,MAAMT,GAAN,IAAW;EAC/B,MAAMM,EAAE,GAAGN,GAAG,CAACO,MAAJ,CAAWD,EAAtB;EACA,MAAMZ,aAAa,CAACY,EAAD,CAAnB;AACD,CAHD;AAKAT,MAAM,CAACa,GAAP,CAAW,MAAX,EAAmB,MAAMV,GAAN,IAAW;EAC5B,MAAMM,EAAE,GAAGN,GAAG,CAACO,MAAJ,CAAWD,EAAtB;EACA,IAAIH,OAAO,GAAGH,GAAG,CAACI,OAAJ,CAAYH,IAA1B;EACAE,OAAO,GAAG,MAAMR,aAAa,CAACQ,OAAD,CAA7B;EACAH,GAAG,CAACZ,QAAJ,CAAaiB,MAAb,GAAsB,GAAtB;EACAL,GAAG,CAACC,IAAJ,GAAWE,OAAX;AACD,CAND;AAQAQ,MAAM,CAACC,OAAP,GAAiBf,MAAjB"},"metadata":{},"sourceType":"module"}