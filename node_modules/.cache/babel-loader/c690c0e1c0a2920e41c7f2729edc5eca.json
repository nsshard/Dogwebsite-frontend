{"ast":null,"code":"'use strict';\n\nconst MongoError = require('../error').MongoError;\n\nconst collectionNamespace = require('./shared').collectionNamespace;\n\nconst command = require('./command');\n\nfunction writeCommand(server, type, opsField, ns, ops, options, callback) {\n  if (ops.length === 0) throw new MongoError(`${type} must contain at least one document`);\n\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n\n  options = options || {};\n  const ordered = typeof options.ordered === 'boolean' ? options.ordered : true;\n  const writeConcern = options.writeConcern;\n  const writeCommand = {};\n  writeCommand[type] = collectionNamespace(ns);\n  writeCommand[opsField] = ops;\n  writeCommand.ordered = ordered;\n\n  if (writeConcern && Object.keys(writeConcern).length > 0) {\n    writeCommand.writeConcern = writeConcern;\n  }\n\n  if (options.collation) {\n    for (let i = 0; i < writeCommand[opsField].length; i++) {\n      if (!writeCommand[opsField][i].collation) {\n        writeCommand[opsField][i].collation = options.collation;\n      }\n    }\n  }\n\n  if (options.bypassDocumentValidation === true) {\n    writeCommand.bypassDocumentValidation = options.bypassDocumentValidation;\n  }\n\n  const commandOptions = Object.assign({\n    checkKeys: type === 'insert',\n    numberToReturn: 1\n  }, options);\n  command(server, ns, writeCommand, commandOptions, callback);\n}\n\nmodule.exports = writeCommand;","map":{"version":3,"names":["MongoError","require","collectionNamespace","command","writeCommand","server","type","opsField","ns","ops","options","callback","length","ordered","writeConcern","Object","keys","collation","i","bypassDocumentValidation","commandOptions","assign","checkKeys","numberToReturn","module","exports"],"sources":["C:/Users/Administrator/Desktop/webAPI work/web/dog-website/node_modules/koa-mongo/node_modules/mongodb/lib/core/wireprotocol/write_command.js"],"sourcesContent":["'use strict';\n\nconst MongoError = require('../error').MongoError;\nconst collectionNamespace = require('./shared').collectionNamespace;\nconst command = require('./command');\n\nfunction writeCommand(server, type, opsField, ns, ops, options, callback) {\n  if (ops.length === 0) throw new MongoError(`${type} must contain at least one document`);\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n\n  options = options || {};\n  const ordered = typeof options.ordered === 'boolean' ? options.ordered : true;\n  const writeConcern = options.writeConcern;\n\n  const writeCommand = {};\n  writeCommand[type] = collectionNamespace(ns);\n  writeCommand[opsField] = ops;\n  writeCommand.ordered = ordered;\n\n  if (writeConcern && Object.keys(writeConcern).length > 0) {\n    writeCommand.writeConcern = writeConcern;\n  }\n\n  if (options.collation) {\n    for (let i = 0; i < writeCommand[opsField].length; i++) {\n      if (!writeCommand[opsField][i].collation) {\n        writeCommand[opsField][i].collation = options.collation;\n      }\n    }\n  }\n\n  if (options.bypassDocumentValidation === true) {\n    writeCommand.bypassDocumentValidation = options.bypassDocumentValidation;\n  }\n\n  const commandOptions = Object.assign(\n    {\n      checkKeys: type === 'insert',\n      numberToReturn: 1\n    },\n    options\n  );\n\n  command(server, ns, writeCommand, commandOptions, callback);\n}\n\nmodule.exports = writeCommand;\n"],"mappings":"AAAA;;AAEA,MAAMA,UAAU,GAAGC,OAAO,CAAC,UAAD,CAAP,CAAoBD,UAAvC;;AACA,MAAME,mBAAmB,GAAGD,OAAO,CAAC,UAAD,CAAP,CAAoBC,mBAAhD;;AACA,MAAMC,OAAO,GAAGF,OAAO,CAAC,WAAD,CAAvB;;AAEA,SAASG,YAAT,CAAsBC,MAAtB,EAA8BC,IAA9B,EAAoCC,QAApC,EAA8CC,EAA9C,EAAkDC,GAAlD,EAAuDC,OAAvD,EAAgEC,QAAhE,EAA0E;EACxE,IAAIF,GAAG,CAACG,MAAJ,KAAe,CAAnB,EAAsB,MAAM,IAAIZ,UAAJ,CAAgB,GAAEM,IAAK,qCAAvB,CAAN;;EACtB,IAAI,OAAOI,OAAP,KAAmB,UAAvB,EAAmC;IACjCC,QAAQ,GAAGD,OAAX;IACAA,OAAO,GAAG,EAAV;EACD;;EAEDA,OAAO,GAAGA,OAAO,IAAI,EAArB;EACA,MAAMG,OAAO,GAAG,OAAOH,OAAO,CAACG,OAAf,KAA2B,SAA3B,GAAuCH,OAAO,CAACG,OAA/C,GAAyD,IAAzE;EACA,MAAMC,YAAY,GAAGJ,OAAO,CAACI,YAA7B;EAEA,MAAMV,YAAY,GAAG,EAArB;EACAA,YAAY,CAACE,IAAD,CAAZ,GAAqBJ,mBAAmB,CAACM,EAAD,CAAxC;EACAJ,YAAY,CAACG,QAAD,CAAZ,GAAyBE,GAAzB;EACAL,YAAY,CAACS,OAAb,GAAuBA,OAAvB;;EAEA,IAAIC,YAAY,IAAIC,MAAM,CAACC,IAAP,CAAYF,YAAZ,EAA0BF,MAA1B,GAAmC,CAAvD,EAA0D;IACxDR,YAAY,CAACU,YAAb,GAA4BA,YAA5B;EACD;;EAED,IAAIJ,OAAO,CAACO,SAAZ,EAAuB;IACrB,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGd,YAAY,CAACG,QAAD,CAAZ,CAAuBK,MAA3C,EAAmDM,CAAC,EAApD,EAAwD;MACtD,IAAI,CAACd,YAAY,CAACG,QAAD,CAAZ,CAAuBW,CAAvB,EAA0BD,SAA/B,EAA0C;QACxCb,YAAY,CAACG,QAAD,CAAZ,CAAuBW,CAAvB,EAA0BD,SAA1B,GAAsCP,OAAO,CAACO,SAA9C;MACD;IACF;EACF;;EAED,IAAIP,OAAO,CAACS,wBAAR,KAAqC,IAAzC,EAA+C;IAC7Cf,YAAY,CAACe,wBAAb,GAAwCT,OAAO,CAACS,wBAAhD;EACD;;EAED,MAAMC,cAAc,GAAGL,MAAM,CAACM,MAAP,CACrB;IACEC,SAAS,EAAEhB,IAAI,KAAK,QADtB;IAEEiB,cAAc,EAAE;EAFlB,CADqB,EAKrBb,OALqB,CAAvB;EAQAP,OAAO,CAACE,MAAD,EAASG,EAAT,EAAaJ,YAAb,EAA2BgB,cAA3B,EAA2CT,QAA3C,CAAP;AACD;;AAEDa,MAAM,CAACC,OAAP,GAAiBrB,YAAjB"},"metadata":{},"sourceType":"script"}