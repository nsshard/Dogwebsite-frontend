{"ast":null,"code":"const {\n  save,\n  getAll,\n  getById,\n  update,\n  removebyId\n} = require('./accountREST');\n\nconst createaccount = async _ref => {\n  let {\n    USERNAME,\n    PASSWORD,\n    USERLEVEL,\n    EMAIL,\n    STAFFCODE\n  } = _ref;\n  const account = {\n    USERNAME,\n    PASSWORD,\n    USERLEVEL,\n    EMAIL,\n    STAFFCODE\n  };\n  return await save(account);\n};\n\nconst getaccounts = async () => {\n  return await getAll();\n};\n\nconst getaccount = async id => {\n  return await getById(id);\n};\n\nconst UserNameAlreadyExists = async USERNAME => {\n  return await getByName(USERNAME);\n};\n\n_c = UserNameAlreadyExists;\n\nconst deleteaccount = async id => {\n  return await removebyId(id);\n};\n\nconst updateaccount = async (id, _ref2) => {\n  let {\n    USERNAME,\n    PASSWORD,\n    USERLEVEL,\n    EMAIL,\n    STAFFCODE\n  } = _ref2;\n  return await update(id, {\n    USERNAME,\n    PASSWORD,\n    USERLEVEL,\n    EMAIL,\n    STAFFCODE\n  });\n};\n\nmodule.exports = {\n  createaccount,\n  getaccount,\n  getaccounts,\n  deleteaccount,\n  updateaccount,\n  UserNameAlreadyExists\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"UserNameAlreadyExists\");","map":{"version":3,"names":["save","getAll","getById","update","removebyId","require","createaccount","USERNAME","PASSWORD","USERLEVEL","EMAIL","STAFFCODE","account","getaccounts","getaccount","id","UserNameAlreadyExists","getByName","deleteaccount","updateaccount","module","exports"],"sources":["C:/Users/Administrator/Desktop/webAPI work/web/dog-website/src/backend/dal/accountAPI.js"],"sourcesContent":["const {save, getAll, getById, update, removebyId} = require('./accountREST');\r\n\r\nconst createaccount = async ({USERNAME, PASSWORD, USERLEVEL, EMAIL, STAFFCODE}) => {\r\n\r\nconst account = {\r\n    USERNAME, PASSWORD, USERLEVEL, EMAIL, STAFFCODE\r\n}\r\n\r\nreturn await save(account);\r\n}\r\n\r\nconst getaccounts = async ()=>{\r\n    return await getAll();\r\n}\r\n\r\nconst getaccount = async id =>{\r\n    return await getById(id);\r\n}\r\n\r\nconst UserNameAlreadyExists = async USERNAME =>{\r\n    return await getByName(USERNAME);\r\n}\r\n\r\nconst deleteaccount = async id =>{\r\n    return await removebyId(id);\r\n}\r\n\r\nconst updateaccount = async (id, {USERNAME, PASSWORD, USERLEVEL, EMAIL, STAFFCODE}) =>{\r\n    return await update(id, {USERNAME, PASSWORD, USERLEVEL, EMAIL, STAFFCODE});\r\n\r\n}\r\n\r\nmodule.exports = {\r\n    createaccount,\r\n    getaccount,\r\n    getaccounts,\r\n    deleteaccount,\r\n    updateaccount, UserNameAlreadyExists\r\n}"],"mappings":"AAAA,MAAM;EAACA,IAAD;EAAOC,MAAP;EAAeC,OAAf;EAAwBC,MAAxB;EAAgCC;AAAhC,IAA8CC,OAAO,CAAC,eAAD,CAA3D;;AAEA,MAAMC,aAAa,GAAG,cAA6D;EAAA,IAAtD;IAACC,QAAD;IAAWC,QAAX;IAAqBC,SAArB;IAAgCC,KAAhC;IAAuCC;EAAvC,CAAsD;EAEnF,MAAMC,OAAO,GAAG;IACZL,QADY;IACFC,QADE;IACQC,SADR;IACmBC,KADnB;IAC0BC;EAD1B,CAAhB;EAIA,OAAO,MAAMX,IAAI,CAACY,OAAD,CAAjB;AACC,CAPD;;AASA,MAAMC,WAAW,GAAG,YAAU;EAC1B,OAAO,MAAMZ,MAAM,EAAnB;AACH,CAFD;;AAIA,MAAMa,UAAU,GAAG,MAAMC,EAAN,IAAW;EAC1B,OAAO,MAAMb,OAAO,CAACa,EAAD,CAApB;AACH,CAFD;;AAIA,MAAMC,qBAAqB,GAAG,MAAMT,QAAN,IAAiB;EAC3C,OAAO,MAAMU,SAAS,CAACV,QAAD,CAAtB;AACH,CAFD;;KAAMS,qB;;AAIN,MAAME,aAAa,GAAG,MAAMH,EAAN,IAAW;EAC7B,OAAO,MAAMX,UAAU,CAACW,EAAD,CAAvB;AACH,CAFD;;AAIA,MAAMI,aAAa,GAAG,OAAOJ,EAAP,YAAgE;EAAA,IAArD;IAACR,QAAD;IAAWC,QAAX;IAAqBC,SAArB;IAAgCC,KAAhC;IAAuCC;EAAvC,CAAqD;EAClF,OAAO,MAAMR,MAAM,CAACY,EAAD,EAAK;IAACR,QAAD;IAAWC,QAAX;IAAqBC,SAArB;IAAgCC,KAAhC;IAAuCC;EAAvC,CAAL,CAAnB;AAEH,CAHD;;AAKAS,MAAM,CAACC,OAAP,GAAiB;EACbf,aADa;EAEbQ,UAFa;EAGbD,WAHa;EAIbK,aAJa;EAKbC,aALa;EAKEH;AALF,CAAjB"},"metadata":{},"sourceType":"module"}