{"ast":null,"code":"'use strict';\n\nconst Query = require('../connection/commands').Query;\n\nconst Msg = require('../connection/msg').Msg;\n\nconst MongoError = require('../error').MongoError;\n\nconst getReadPreference = require('./shared').getReadPreference;\n\nconst isSharded = require('./shared').isSharded;\n\nconst databaseNamespace = require('./shared').databaseNamespace;\n\nconst isTransactionCommand = require('../transactions').isTransactionCommand;\n\nconst applySession = require('../sessions').applySession;\n\nconst MongoNetworkError = require('../error').MongoNetworkError;\n\nconst maxWireVersion = require('../utils').maxWireVersion;\n\nfunction isClientEncryptionEnabled(server) {\n  const wireVersion = maxWireVersion(server);\n  return wireVersion && server.autoEncrypter;\n}\n\nfunction command(server, ns, cmd, options, callback) {\n  if (typeof options === 'function') callback = options, options = {};\n  options = options || {};\n\n  if (cmd == null) {\n    return callback(new MongoError(`command ${JSON.stringify(cmd)} does not return a cursor`));\n  }\n\n  if (!isClientEncryptionEnabled(server)) {\n    _command(server, ns, cmd, options, callback);\n\n    return;\n  }\n\n  const wireVersion = maxWireVersion(server);\n\n  if (typeof wireVersion !== 'number' || wireVersion < 8) {\n    callback(new MongoError('Auto-encryption requires a minimum MongoDB version of 4.2'));\n    return;\n  }\n\n  _cryptCommand(server, ns, cmd, options, callback);\n}\n\nfunction _command(server, ns, cmd, options, callback) {\n  const bson = server.s.bson;\n  const pool = server.s.pool;\n  const readPreference = getReadPreference(cmd, options);\n  const shouldUseOpMsg = supportsOpMsg(server);\n  const session = options.session;\n  let clusterTime = server.clusterTime;\n  let finalCmd = Object.assign({}, cmd);\n\n  if (hasSessionSupport(server) && session) {\n    if (session.clusterTime && session.clusterTime.clusterTime.greaterThan(clusterTime.clusterTime)) {\n      clusterTime = session.clusterTime;\n    }\n\n    const err = applySession(session, finalCmd, options);\n\n    if (err) {\n      return callback(err);\n    }\n  } // if we have a known cluster time, gossip it\n\n\n  if (clusterTime) {\n    finalCmd.$clusterTime = clusterTime;\n  }\n\n  if (isSharded(server) && !shouldUseOpMsg && readPreference && readPreference.mode !== 'primary') {\n    finalCmd = {\n      $query: finalCmd,\n      $readPreference: readPreference.toJSON()\n    };\n  }\n\n  const commandOptions = Object.assign({\n    command: true,\n    numberToSkip: 0,\n    numberToReturn: -1,\n    checkKeys: false\n  }, options); // This value is not overridable\n\n  commandOptions.slaveOk = readPreference.slaveOk();\n  const cmdNs = `${databaseNamespace(ns)}.$cmd`;\n  const message = shouldUseOpMsg ? new Msg(bson, cmdNs, finalCmd, commandOptions) : new Query(bson, cmdNs, finalCmd, commandOptions);\n  const inTransaction = session && (session.inTransaction() || isTransactionCommand(finalCmd));\n  const commandResponseHandler = inTransaction ? function (err) {\n    // We need to add a TransientTransactionError errorLabel, as stated in the transaction spec.\n    if (err && err instanceof MongoNetworkError && !err.hasErrorLabel('TransientTransactionError')) {\n      err.addErrorLabel('TransientTransactionError');\n    }\n\n    if (!cmd.commitTransaction && err && err instanceof MongoError && err.hasErrorLabel('TransientTransactionError')) {\n      session.transaction.unpinServer();\n    }\n\n    return callback.apply(null, arguments);\n  } : callback;\n\n  try {\n    pool.write(message, commandOptions, commandResponseHandler);\n  } catch (err) {\n    commandResponseHandler(err);\n  }\n}\n\nfunction hasSessionSupport(topology) {\n  if (topology == null) return false;\n\n  if (topology.description) {\n    return topology.description.maxWireVersion >= 6;\n  }\n\n  return topology.ismaster == null ? false : topology.ismaster.maxWireVersion >= 6;\n}\n\nfunction supportsOpMsg(topologyOrServer) {\n  const description = topologyOrServer.ismaster ? topologyOrServer.ismaster : topologyOrServer.description;\n\n  if (description == null) {\n    return false;\n  }\n\n  return description.maxWireVersion >= 6 && description.__nodejs_mock_server__ == null;\n}\n\nfunction _cryptCommand(server, ns, cmd, options, callback) {\n  const autoEncrypter = server.autoEncrypter;\n\n  function commandResponseHandler(err, response) {\n    if (err || response == null) {\n      callback(err, response);\n      return;\n    }\n\n    autoEncrypter.decrypt(response.result, options, (err, decrypted) => {\n      if (err) {\n        callback(err, null);\n        return;\n      }\n\n      response.result = decrypted;\n      response.message.documents = [decrypted];\n      callback(null, response);\n    });\n  }\n\n  autoEncrypter.encrypt(ns, cmd, options, (err, encrypted) => {\n    if (err) {\n      callback(err, null);\n      return;\n    }\n\n    _command(server, ns, encrypted, options, commandResponseHandler);\n  });\n}\n\nmodule.exports = command;","map":{"version":3,"names":["Query","require","Msg","MongoError","getReadPreference","isSharded","databaseNamespace","isTransactionCommand","applySession","MongoNetworkError","maxWireVersion","isClientEncryptionEnabled","server","wireVersion","autoEncrypter","command","ns","cmd","options","callback","JSON","stringify","_command","_cryptCommand","bson","s","pool","readPreference","shouldUseOpMsg","supportsOpMsg","session","clusterTime","finalCmd","Object","assign","hasSessionSupport","greaterThan","err","$clusterTime","mode","$query","$readPreference","toJSON","commandOptions","numberToSkip","numberToReturn","checkKeys","slaveOk","cmdNs","message","inTransaction","commandResponseHandler","hasErrorLabel","addErrorLabel","commitTransaction","transaction","unpinServer","apply","arguments","write","topology","description","ismaster","topologyOrServer","__nodejs_mock_server__","response","decrypt","result","decrypted","documents","encrypt","encrypted","module","exports"],"sources":["C:/Users/Administrator/Desktop/webAPI work/web/dog-website/node_modules/koa-mongo/node_modules/mongodb/lib/core/wireprotocol/command.js"],"sourcesContent":["'use strict';\n\nconst Query = require('../connection/commands').Query;\nconst Msg = require('../connection/msg').Msg;\nconst MongoError = require('../error').MongoError;\nconst getReadPreference = require('./shared').getReadPreference;\nconst isSharded = require('./shared').isSharded;\nconst databaseNamespace = require('./shared').databaseNamespace;\nconst isTransactionCommand = require('../transactions').isTransactionCommand;\nconst applySession = require('../sessions').applySession;\nconst MongoNetworkError = require('../error').MongoNetworkError;\nconst maxWireVersion = require('../utils').maxWireVersion;\n\nfunction isClientEncryptionEnabled(server) {\n  const wireVersion = maxWireVersion(server);\n  return wireVersion && server.autoEncrypter;\n}\n\nfunction command(server, ns, cmd, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  if (cmd == null) {\n    return callback(new MongoError(`command ${JSON.stringify(cmd)} does not return a cursor`));\n  }\n\n  if (!isClientEncryptionEnabled(server)) {\n    _command(server, ns, cmd, options, callback);\n    return;\n  }\n\n  const wireVersion = maxWireVersion(server);\n  if (typeof wireVersion !== 'number' || wireVersion < 8) {\n    callback(new MongoError('Auto-encryption requires a minimum MongoDB version of 4.2'));\n    return;\n  }\n\n  _cryptCommand(server, ns, cmd, options, callback);\n}\n\nfunction _command(server, ns, cmd, options, callback) {\n  const bson = server.s.bson;\n  const pool = server.s.pool;\n  const readPreference = getReadPreference(cmd, options);\n  const shouldUseOpMsg = supportsOpMsg(server);\n  const session = options.session;\n\n  let clusterTime = server.clusterTime;\n  let finalCmd = Object.assign({}, cmd);\n  if (hasSessionSupport(server) && session) {\n    if (\n      session.clusterTime &&\n      session.clusterTime.clusterTime.greaterThan(clusterTime.clusterTime)\n    ) {\n      clusterTime = session.clusterTime;\n    }\n\n    const err = applySession(session, finalCmd, options);\n    if (err) {\n      return callback(err);\n    }\n  }\n\n  // if we have a known cluster time, gossip it\n  if (clusterTime) {\n    finalCmd.$clusterTime = clusterTime;\n  }\n\n  if (isSharded(server) && !shouldUseOpMsg && readPreference && readPreference.mode !== 'primary') {\n    finalCmd = {\n      $query: finalCmd,\n      $readPreference: readPreference.toJSON()\n    };\n  }\n\n  const commandOptions = Object.assign(\n    {\n      command: true,\n      numberToSkip: 0,\n      numberToReturn: -1,\n      checkKeys: false\n    },\n    options\n  );\n\n  // This value is not overridable\n  commandOptions.slaveOk = readPreference.slaveOk();\n\n  const cmdNs = `${databaseNamespace(ns)}.$cmd`;\n  const message = shouldUseOpMsg\n    ? new Msg(bson, cmdNs, finalCmd, commandOptions)\n    : new Query(bson, cmdNs, finalCmd, commandOptions);\n\n  const inTransaction = session && (session.inTransaction() || isTransactionCommand(finalCmd));\n  const commandResponseHandler = inTransaction\n    ? function(err) {\n        // We need to add a TransientTransactionError errorLabel, as stated in the transaction spec.\n        if (\n          err &&\n          err instanceof MongoNetworkError &&\n          !err.hasErrorLabel('TransientTransactionError')\n        ) {\n          err.addErrorLabel('TransientTransactionError');\n        }\n\n        if (\n          !cmd.commitTransaction &&\n          err &&\n          err instanceof MongoError &&\n          err.hasErrorLabel('TransientTransactionError')\n        ) {\n          session.transaction.unpinServer();\n        }\n\n        return callback.apply(null, arguments);\n      }\n    : callback;\n\n  try {\n    pool.write(message, commandOptions, commandResponseHandler);\n  } catch (err) {\n    commandResponseHandler(err);\n  }\n}\n\nfunction hasSessionSupport(topology) {\n  if (topology == null) return false;\n  if (topology.description) {\n    return topology.description.maxWireVersion >= 6;\n  }\n\n  return topology.ismaster == null ? false : topology.ismaster.maxWireVersion >= 6;\n}\n\nfunction supportsOpMsg(topologyOrServer) {\n  const description = topologyOrServer.ismaster\n    ? topologyOrServer.ismaster\n    : topologyOrServer.description;\n\n  if (description == null) {\n    return false;\n  }\n\n  return description.maxWireVersion >= 6 && description.__nodejs_mock_server__ == null;\n}\n\nfunction _cryptCommand(server, ns, cmd, options, callback) {\n  const autoEncrypter = server.autoEncrypter;\n  function commandResponseHandler(err, response) {\n    if (err || response == null) {\n      callback(err, response);\n      return;\n    }\n\n    autoEncrypter.decrypt(response.result, options, (err, decrypted) => {\n      if (err) {\n        callback(err, null);\n        return;\n      }\n\n      response.result = decrypted;\n      response.message.documents = [decrypted];\n      callback(null, response);\n    });\n  }\n\n  autoEncrypter.encrypt(ns, cmd, options, (err, encrypted) => {\n    if (err) {\n      callback(err, null);\n      return;\n    }\n\n    _command(server, ns, encrypted, options, commandResponseHandler);\n  });\n}\n\nmodule.exports = command;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}