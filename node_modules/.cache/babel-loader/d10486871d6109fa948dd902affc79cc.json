{"ast":null,"code":"/**\n * Module dependencies.\n */\nconst fs = require('fs');\n\nconst util = require('util');\n\nconst debug = require('debug')('koa-send');\n\nconst resolvePath = require('resolve-path');\n\nconst createError = require('http-errors');\n\nconst assert = require('assert');\n\nconst stat = util.promisify(fs.stat);\nconst access = util.promisify(fs.access);\n\nasync function exists(path) {\n  try {\n    await access(path);\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nconst {\n  normalize,\n  basename,\n  extname,\n  resolve,\n  parse,\n  sep\n} = require('path');\n/**\n * Expose `send()`.\n */\n\n\nmodule.exports = send;\n/**\n * Send file at `path` with the\n * given `options` to the koa `ctx`.\n *\n * @param {Context} ctx\n * @param {String} path\n * @param {Object} [opts]\n * @return {Promise}\n * @api public\n */\n\nasync function send(ctx, path) {\n  let opts = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  assert(ctx, 'koa context required');\n  assert(path, 'pathname required'); // options\n\n  debug('send \"%s\" %j', path, opts);\n  const root = opts.root ? normalize(resolve(opts.root)) : '';\n  const trailingSlash = path[path.length - 1] === '/';\n  path = path.substr(parse(path).root.length);\n  const index = opts.index;\n  const maxage = opts.maxage || opts.maxAge || 0;\n  const immutable = opts.immutable || false;\n  const hidden = opts.hidden || false;\n  const format = opts.format !== false;\n  const extensions = Array.isArray(opts.extensions) ? opts.extensions : false;\n  const brotli = opts.brotli !== false;\n  const gzip = opts.gzip !== false;\n  const setHeaders = opts.setHeaders;\n\n  if (setHeaders && typeof setHeaders !== 'function') {\n    throw new TypeError('option setHeaders must be function');\n  } // normalize path\n\n\n  path = decode(path);\n  if (path === -1) return ctx.throw(400, 'failed to decode'); // index file support\n\n  if (index && trailingSlash) path += index;\n  path = resolvePath(root, path); // hidden file support, ignore\n\n  if (!hidden && isHidden(root, path)) return;\n  let encodingExt = ''; // serve brotli file when possible otherwise gzipped file when possible\n\n  if (ctx.acceptsEncodings('br', 'identity') === 'br' && brotli && (await exists(path + '.br'))) {\n    path = path + '.br';\n    ctx.set('Content-Encoding', 'br');\n    ctx.res.removeHeader('Content-Length');\n    encodingExt = '.br';\n  } else if (ctx.acceptsEncodings('gzip', 'identity') === 'gzip' && gzip && (await exists(path + '.gz'))) {\n    path = path + '.gz';\n    ctx.set('Content-Encoding', 'gzip');\n    ctx.res.removeHeader('Content-Length');\n    encodingExt = '.gz';\n  }\n\n  if (extensions && !/\\./.exec(basename(path))) {\n    const list = [].concat(extensions);\n\n    for (let i = 0; i < list.length; i++) {\n      let ext = list[i];\n\n      if (typeof ext !== 'string') {\n        throw new TypeError('option extensions must be array of strings or false');\n      }\n\n      if (!/^\\./.exec(ext)) ext = `.${ext}`;\n\n      if (await exists(`${path}${ext}`)) {\n        path = `${path}${ext}`;\n        break;\n      }\n    }\n  } // stat\n\n\n  let stats;\n\n  try {\n    stats = await stat(path); // Format the path to serve static file servers\n    // and not require a trailing slash for directories,\n    // so that you can do both `/directory` and `/directory/`\n\n    if (stats.isDirectory()) {\n      if (format && index) {\n        path += `/${index}`;\n        stats = await stat(path);\n      } else {\n        return;\n      }\n    }\n  } catch (err) {\n    const notfound = ['ENOENT', 'ENAMETOOLONG', 'ENOTDIR'];\n\n    if (notfound.includes(err.code)) {\n      throw createError(404, err);\n    }\n\n    err.status = 500;\n    throw err;\n  }\n\n  if (setHeaders) setHeaders(ctx.res, path, stats); // stream\n\n  ctx.set('Content-Length', stats.size);\n  if (!ctx.response.get('Last-Modified')) ctx.set('Last-Modified', stats.mtime.toUTCString());\n\n  if (!ctx.response.get('Cache-Control')) {\n    const directives = [`max-age=${maxage / 1000 | 0}`];\n\n    if (immutable) {\n      directives.push('immutable');\n    }\n\n    ctx.set('Cache-Control', directives.join(','));\n  }\n\n  if (!ctx.type) ctx.type = type(path, encodingExt);\n  ctx.body = fs.createReadStream(path);\n  return path;\n}\n/**\n * Check if it's hidden.\n */\n\n\nfunction isHidden(root, path) {\n  path = path.substr(root.length).split(sep);\n\n  for (let i = 0; i < path.length; i++) {\n    if (path[i][0] === '.') return true;\n  }\n\n  return false;\n}\n/**\n * File type.\n */\n\n\nfunction type(file, ext) {\n  return ext !== '' ? extname(basename(file, ext)) : extname(file);\n}\n/**\n * Decode `path`.\n */\n\n\nfunction decode(path) {\n  try {\n    return decodeURIComponent(path);\n  } catch (err) {\n    return -1;\n  }\n}","map":{"version":3,"names":["fs","require","util","debug","resolvePath","createError","assert","stat","promisify","access","exists","path","e","normalize","basename","extname","resolve","parse","sep","module","exports","send","ctx","opts","root","trailingSlash","length","substr","index","maxage","maxAge","immutable","hidden","format","extensions","Array","isArray","brotli","gzip","setHeaders","TypeError","decode","throw","isHidden","encodingExt","acceptsEncodings","set","res","removeHeader","exec","list","concat","i","ext","stats","isDirectory","err","notfound","includes","code","status","size","response","get","mtime","toUTCString","directives","push","join","type","body","createReadStream","split","file","decodeURIComponent"],"sources":["C:/Users/Administrator/Desktop/webAPI work/web/dog-website/node_modules/koa-send/index.js"],"sourcesContent":["/**\n * Module dependencies.\n */\n\nconst fs = require('fs')\nconst util = require('util')\nconst debug = require('debug')('koa-send')\nconst resolvePath = require('resolve-path')\nconst createError = require('http-errors')\nconst assert = require('assert')\n\nconst stat = util.promisify(fs.stat)\nconst access = util.promisify(fs.access)\n\nasync function exists (path) {\n  try {\n    await access(path)\n    return true\n  } catch (e) {\n    return false\n  }\n}\n\nconst {\n  normalize,\n  basename,\n  extname,\n  resolve,\n  parse,\n  sep\n} = require('path')\n\n/**\n * Expose `send()`.\n */\n\nmodule.exports = send\n\n/**\n * Send file at `path` with the\n * given `options` to the koa `ctx`.\n *\n * @param {Context} ctx\n * @param {String} path\n * @param {Object} [opts]\n * @return {Promise}\n * @api public\n */\n\nasync function send (ctx, path, opts = {}) {\n  assert(ctx, 'koa context required')\n  assert(path, 'pathname required')\n\n  // options\n  debug('send \"%s\" %j', path, opts)\n  const root = opts.root ? normalize(resolve(opts.root)) : ''\n  const trailingSlash = path[path.length - 1] === '/'\n  path = path.substr(parse(path).root.length)\n  const index = opts.index\n  const maxage = opts.maxage || opts.maxAge || 0\n  const immutable = opts.immutable || false\n  const hidden = opts.hidden || false\n  const format = opts.format !== false\n  const extensions = Array.isArray(opts.extensions) ? opts.extensions : false\n  const brotli = opts.brotli !== false\n  const gzip = opts.gzip !== false\n  const setHeaders = opts.setHeaders\n\n  if (setHeaders && typeof setHeaders !== 'function') {\n    throw new TypeError('option setHeaders must be function')\n  }\n\n  // normalize path\n  path = decode(path)\n\n  if (path === -1) return ctx.throw(400, 'failed to decode')\n\n  // index file support\n  if (index && trailingSlash) path += index\n\n  path = resolvePath(root, path)\n\n  // hidden file support, ignore\n  if (!hidden && isHidden(root, path)) return\n\n  let encodingExt = ''\n  // serve brotli file when possible otherwise gzipped file when possible\n  if (ctx.acceptsEncodings('br', 'identity') === 'br' && brotli && (await exists(path + '.br'))) {\n    path = path + '.br'\n    ctx.set('Content-Encoding', 'br')\n    ctx.res.removeHeader('Content-Length')\n    encodingExt = '.br'\n  } else if (ctx.acceptsEncodings('gzip', 'identity') === 'gzip' && gzip && (await exists(path + '.gz'))) {\n    path = path + '.gz'\n    ctx.set('Content-Encoding', 'gzip')\n    ctx.res.removeHeader('Content-Length')\n    encodingExt = '.gz'\n  }\n\n  if (extensions && !/\\./.exec(basename(path))) {\n    const list = [].concat(extensions)\n    for (let i = 0; i < list.length; i++) {\n      let ext = list[i]\n      if (typeof ext !== 'string') {\n        throw new TypeError('option extensions must be array of strings or false')\n      }\n      if (!/^\\./.exec(ext)) ext = `.${ext}`\n      if (await exists(`${path}${ext}`)) {\n        path = `${path}${ext}`\n        break\n      }\n    }\n  }\n\n  // stat\n  let stats\n  try {\n    stats = await stat(path)\n\n    // Format the path to serve static file servers\n    // and not require a trailing slash for directories,\n    // so that you can do both `/directory` and `/directory/`\n    if (stats.isDirectory()) {\n      if (format && index) {\n        path += `/${index}`\n        stats = await stat(path)\n      } else {\n        return\n      }\n    }\n  } catch (err) {\n    const notfound = ['ENOENT', 'ENAMETOOLONG', 'ENOTDIR']\n    if (notfound.includes(err.code)) {\n      throw createError(404, err)\n    }\n    err.status = 500\n    throw err\n  }\n\n  if (setHeaders) setHeaders(ctx.res, path, stats)\n\n  // stream\n  ctx.set('Content-Length', stats.size)\n  if (!ctx.response.get('Last-Modified')) ctx.set('Last-Modified', stats.mtime.toUTCString())\n  if (!ctx.response.get('Cache-Control')) {\n    const directives = [`max-age=${(maxage / 1000 | 0)}`]\n    if (immutable) {\n      directives.push('immutable')\n    }\n    ctx.set('Cache-Control', directives.join(','))\n  }\n  if (!ctx.type) ctx.type = type(path, encodingExt)\n  ctx.body = fs.createReadStream(path)\n\n  return path\n}\n\n/**\n * Check if it's hidden.\n */\n\nfunction isHidden (root, path) {\n  path = path.substr(root.length).split(sep)\n  for (let i = 0; i < path.length; i++) {\n    if (path[i][0] === '.') return true\n  }\n  return false\n}\n\n/**\n * File type.\n */\n\nfunction type (file, ext) {\n  return ext !== '' ? extname(basename(file, ext)) : extname(file)\n}\n\n/**\n * Decode `path`.\n */\n\nfunction decode (path) {\n  try {\n    return decodeURIComponent(path)\n  } catch (err) {\n    return -1\n  }\n}\n"],"mappings":"AAAA;AACA;AACA;AAEA,MAAMA,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAlB;;AACA,MAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB;;AACA,MAAME,KAAK,GAAGF,OAAO,CAAC,OAAD,CAAP,CAAiB,UAAjB,CAAd;;AACA,MAAMG,WAAW,GAAGH,OAAO,CAAC,cAAD,CAA3B;;AACA,MAAMI,WAAW,GAAGJ,OAAO,CAAC,aAAD,CAA3B;;AACA,MAAMK,MAAM,GAAGL,OAAO,CAAC,QAAD,CAAtB;;AAEA,MAAMM,IAAI,GAAGL,IAAI,CAACM,SAAL,CAAeR,EAAE,CAACO,IAAlB,CAAb;AACA,MAAME,MAAM,GAAGP,IAAI,CAACM,SAAL,CAAeR,EAAE,CAACS,MAAlB,CAAf;;AAEA,eAAeC,MAAf,CAAuBC,IAAvB,EAA6B;EAC3B,IAAI;IACF,MAAMF,MAAM,CAACE,IAAD,CAAZ;IACA,OAAO,IAAP;EACD,CAHD,CAGE,OAAOC,CAAP,EAAU;IACV,OAAO,KAAP;EACD;AACF;;AAED,MAAM;EACJC,SADI;EAEJC,QAFI;EAGJC,OAHI;EAIJC,OAJI;EAKJC,KALI;EAMJC;AANI,IAOFjB,OAAO,CAAC,MAAD,CAPX;AASA;AACA;AACA;;;AAEAkB,MAAM,CAACC,OAAP,GAAiBC,IAAjB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAeA,IAAf,CAAqBC,GAArB,EAA0BX,IAA1B,EAA2C;EAAA,IAAXY,IAAW,uEAAJ,EAAI;EACzCjB,MAAM,CAACgB,GAAD,EAAM,sBAAN,CAAN;EACAhB,MAAM,CAACK,IAAD,EAAO,mBAAP,CAAN,CAFyC,CAIzC;;EACAR,KAAK,CAAC,cAAD,EAAiBQ,IAAjB,EAAuBY,IAAvB,CAAL;EACA,MAAMC,IAAI,GAAGD,IAAI,CAACC,IAAL,GAAYX,SAAS,CAACG,OAAO,CAACO,IAAI,CAACC,IAAN,CAAR,CAArB,GAA4C,EAAzD;EACA,MAAMC,aAAa,GAAGd,IAAI,CAACA,IAAI,CAACe,MAAL,GAAc,CAAf,CAAJ,KAA0B,GAAhD;EACAf,IAAI,GAAGA,IAAI,CAACgB,MAAL,CAAYV,KAAK,CAACN,IAAD,CAAL,CAAYa,IAAZ,CAAiBE,MAA7B,CAAP;EACA,MAAME,KAAK,GAAGL,IAAI,CAACK,KAAnB;EACA,MAAMC,MAAM,GAAGN,IAAI,CAACM,MAAL,IAAeN,IAAI,CAACO,MAApB,IAA8B,CAA7C;EACA,MAAMC,SAAS,GAAGR,IAAI,CAACQ,SAAL,IAAkB,KAApC;EACA,MAAMC,MAAM,GAAGT,IAAI,CAACS,MAAL,IAAe,KAA9B;EACA,MAAMC,MAAM,GAAGV,IAAI,CAACU,MAAL,KAAgB,KAA/B;EACA,MAAMC,UAAU,GAAGC,KAAK,CAACC,OAAN,CAAcb,IAAI,CAACW,UAAnB,IAAiCX,IAAI,CAACW,UAAtC,GAAmD,KAAtE;EACA,MAAMG,MAAM,GAAGd,IAAI,CAACc,MAAL,KAAgB,KAA/B;EACA,MAAMC,IAAI,GAAGf,IAAI,CAACe,IAAL,KAAc,KAA3B;EACA,MAAMC,UAAU,GAAGhB,IAAI,CAACgB,UAAxB;;EAEA,IAAIA,UAAU,IAAI,OAAOA,UAAP,KAAsB,UAAxC,EAAoD;IAClD,MAAM,IAAIC,SAAJ,CAAc,oCAAd,CAAN;EACD,CArBwC,CAuBzC;;;EACA7B,IAAI,GAAG8B,MAAM,CAAC9B,IAAD,CAAb;EAEA,IAAIA,IAAI,KAAK,CAAC,CAAd,EAAiB,OAAOW,GAAG,CAACoB,KAAJ,CAAU,GAAV,EAAe,kBAAf,CAAP,CA1BwB,CA4BzC;;EACA,IAAId,KAAK,IAAIH,aAAb,EAA4Bd,IAAI,IAAIiB,KAAR;EAE5BjB,IAAI,GAAGP,WAAW,CAACoB,IAAD,EAAOb,IAAP,CAAlB,CA/ByC,CAiCzC;;EACA,IAAI,CAACqB,MAAD,IAAWW,QAAQ,CAACnB,IAAD,EAAOb,IAAP,CAAvB,EAAqC;EAErC,IAAIiC,WAAW,GAAG,EAAlB,CApCyC,CAqCzC;;EACA,IAAItB,GAAG,CAACuB,gBAAJ,CAAqB,IAArB,EAA2B,UAA3B,MAA2C,IAA3C,IAAmDR,MAAnD,KAA8D,MAAM3B,MAAM,CAACC,IAAI,GAAG,KAAR,CAA1E,CAAJ,EAA+F;IAC7FA,IAAI,GAAGA,IAAI,GAAG,KAAd;IACAW,GAAG,CAACwB,GAAJ,CAAQ,kBAAR,EAA4B,IAA5B;IACAxB,GAAG,CAACyB,GAAJ,CAAQC,YAAR,CAAqB,gBAArB;IACAJ,WAAW,GAAG,KAAd;EACD,CALD,MAKO,IAAItB,GAAG,CAACuB,gBAAJ,CAAqB,MAArB,EAA6B,UAA7B,MAA6C,MAA7C,IAAuDP,IAAvD,KAAgE,MAAM5B,MAAM,CAACC,IAAI,GAAG,KAAR,CAA5E,CAAJ,EAAiG;IACtGA,IAAI,GAAGA,IAAI,GAAG,KAAd;IACAW,GAAG,CAACwB,GAAJ,CAAQ,kBAAR,EAA4B,MAA5B;IACAxB,GAAG,CAACyB,GAAJ,CAAQC,YAAR,CAAqB,gBAArB;IACAJ,WAAW,GAAG,KAAd;EACD;;EAED,IAAIV,UAAU,IAAI,CAAC,KAAKe,IAAL,CAAUnC,QAAQ,CAACH,IAAD,CAAlB,CAAnB,EAA8C;IAC5C,MAAMuC,IAAI,GAAG,GAAGC,MAAH,CAAUjB,UAAV,CAAb;;IACA,KAAK,IAAIkB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,IAAI,CAACxB,MAAzB,EAAiC0B,CAAC,EAAlC,EAAsC;MACpC,IAAIC,GAAG,GAAGH,IAAI,CAACE,CAAD,CAAd;;MACA,IAAI,OAAOC,GAAP,KAAe,QAAnB,EAA6B;QAC3B,MAAM,IAAIb,SAAJ,CAAc,qDAAd,CAAN;MACD;;MACD,IAAI,CAAC,MAAMS,IAAN,CAAWI,GAAX,CAAL,EAAsBA,GAAG,GAAI,IAAGA,GAAI,EAAd;;MACtB,IAAI,MAAM3C,MAAM,CAAE,GAAEC,IAAK,GAAE0C,GAAI,EAAf,CAAhB,EAAmC;QACjC1C,IAAI,GAAI,GAAEA,IAAK,GAAE0C,GAAI,EAArB;QACA;MACD;IACF;EACF,CA/DwC,CAiEzC;;;EACA,IAAIC,KAAJ;;EACA,IAAI;IACFA,KAAK,GAAG,MAAM/C,IAAI,CAACI,IAAD,CAAlB,CADE,CAGF;IACA;IACA;;IACA,IAAI2C,KAAK,CAACC,WAAN,EAAJ,EAAyB;MACvB,IAAItB,MAAM,IAAIL,KAAd,EAAqB;QACnBjB,IAAI,IAAK,IAAGiB,KAAM,EAAlB;QACA0B,KAAK,GAAG,MAAM/C,IAAI,CAACI,IAAD,CAAlB;MACD,CAHD,MAGO;QACL;MACD;IACF;EACF,CAdD,CAcE,OAAO6C,GAAP,EAAY;IACZ,MAAMC,QAAQ,GAAG,CAAC,QAAD,EAAW,cAAX,EAA2B,SAA3B,CAAjB;;IACA,IAAIA,QAAQ,CAACC,QAAT,CAAkBF,GAAG,CAACG,IAAtB,CAAJ,EAAiC;MAC/B,MAAMtD,WAAW,CAAC,GAAD,EAAMmD,GAAN,CAAjB;IACD;;IACDA,GAAG,CAACI,MAAJ,GAAa,GAAb;IACA,MAAMJ,GAAN;EACD;;EAED,IAAIjB,UAAJ,EAAgBA,UAAU,CAACjB,GAAG,CAACyB,GAAL,EAAUpC,IAAV,EAAgB2C,KAAhB,CAAV,CA1FyB,CA4FzC;;EACAhC,GAAG,CAACwB,GAAJ,CAAQ,gBAAR,EAA0BQ,KAAK,CAACO,IAAhC;EACA,IAAI,CAACvC,GAAG,CAACwC,QAAJ,CAAaC,GAAb,CAAiB,eAAjB,CAAL,EAAwCzC,GAAG,CAACwB,GAAJ,CAAQ,eAAR,EAAyBQ,KAAK,CAACU,KAAN,CAAYC,WAAZ,EAAzB;;EACxC,IAAI,CAAC3C,GAAG,CAACwC,QAAJ,CAAaC,GAAb,CAAiB,eAAjB,CAAL,EAAwC;IACtC,MAAMG,UAAU,GAAG,CAAE,WAAWrC,MAAM,GAAG,IAAT,GAAgB,CAAG,EAAhC,CAAnB;;IACA,IAAIE,SAAJ,EAAe;MACbmC,UAAU,CAACC,IAAX,CAAgB,WAAhB;IACD;;IACD7C,GAAG,CAACwB,GAAJ,CAAQ,eAAR,EAAyBoB,UAAU,CAACE,IAAX,CAAgB,GAAhB,CAAzB;EACD;;EACD,IAAI,CAAC9C,GAAG,CAAC+C,IAAT,EAAe/C,GAAG,CAAC+C,IAAJ,GAAWA,IAAI,CAAC1D,IAAD,EAAOiC,WAAP,CAAf;EACftB,GAAG,CAACgD,IAAJ,GAAWtE,EAAE,CAACuE,gBAAH,CAAoB5D,IAApB,CAAX;EAEA,OAAOA,IAAP;AACD;AAED;AACA;AACA;;;AAEA,SAASgC,QAAT,CAAmBnB,IAAnB,EAAyBb,IAAzB,EAA+B;EAC7BA,IAAI,GAAGA,IAAI,CAACgB,MAAL,CAAYH,IAAI,CAACE,MAAjB,EAAyB8C,KAAzB,CAA+BtD,GAA/B,CAAP;;EACA,KAAK,IAAIkC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGzC,IAAI,CAACe,MAAzB,EAAiC0B,CAAC,EAAlC,EAAsC;IACpC,IAAIzC,IAAI,CAACyC,CAAD,CAAJ,CAAQ,CAAR,MAAe,GAAnB,EAAwB,OAAO,IAAP;EACzB;;EACD,OAAO,KAAP;AACD;AAED;AACA;AACA;;;AAEA,SAASiB,IAAT,CAAeI,IAAf,EAAqBpB,GAArB,EAA0B;EACxB,OAAOA,GAAG,KAAK,EAAR,GAAatC,OAAO,CAACD,QAAQ,CAAC2D,IAAD,EAAOpB,GAAP,CAAT,CAApB,GAA4CtC,OAAO,CAAC0D,IAAD,CAA1D;AACD;AAED;AACA;AACA;;;AAEA,SAAShC,MAAT,CAAiB9B,IAAjB,EAAuB;EACrB,IAAI;IACF,OAAO+D,kBAAkB,CAAC/D,IAAD,CAAzB;EACD,CAFD,CAEE,OAAO6C,GAAP,EAAY;IACZ,OAAO,CAAC,CAAR;EACD;AACF"},"metadata":{},"sourceType":"script"}