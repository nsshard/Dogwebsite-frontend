{"ast":null,"code":"'use strict';\n\nconst crypto = require('crypto');\n\nconst scmpCompare = require('./lib/scmpCompare');\n/**\n * Does a constant-time Buffer comparison by not short-circuiting\n * on first sign of non-equivalency.\n *\n * @param {Buffer} a The first Buffer to be compared against the second\n * @param {Buffer} b The second Buffer to be compared against the first\n * @return {Boolean}\n */\n\n\nmodule.exports = function scmp(a, b) {\n  // check that both inputs are buffers\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new Error('Both scmp args must be Buffers');\n  } // return early here if buffer lengths are not equal since timingSafeEqual\n  // will throw if buffer lengths are not equal\n\n\n  if (a.length !== b.length) {\n    return false;\n  } // use crypto.timingSafeEqual if available (since Node.js v6.6.0),\n  // otherwise use our own scmp-internal function.\n\n\n  if (crypto.timingSafeEqual) {\n    return crypto.timingSafeEqual(a, b);\n  }\n\n  return scmpCompare(a, b);\n};","map":{"version":3,"names":["crypto","require","scmpCompare","module","exports","scmp","a","b","Buffer","isBuffer","Error","length","timingSafeEqual"],"sources":["C:/Users/Administrator/Desktop/webAPI work/web/dog-website/node_modules/scmp/index.js"],"sourcesContent":["'use strict'\n\nconst crypto = require('crypto')\nconst scmpCompare = require('./lib/scmpCompare')\n\n/**\n * Does a constant-time Buffer comparison by not short-circuiting\n * on first sign of non-equivalency.\n *\n * @param {Buffer} a The first Buffer to be compared against the second\n * @param {Buffer} b The second Buffer to be compared against the first\n * @return {Boolean}\n */\nmodule.exports = function scmp (a, b) {\n  // check that both inputs are buffers\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new Error('Both scmp args must be Buffers')\n  }\n\n  // return early here if buffer lengths are not equal since timingSafeEqual\n  // will throw if buffer lengths are not equal\n  if (a.length !== b.length) {\n    return false\n  }\n\n  // use crypto.timingSafeEqual if available (since Node.js v6.6.0),\n  // otherwise use our own scmp-internal function.\n  if (crypto.timingSafeEqual) {\n    return crypto.timingSafeEqual(a, b)\n  }\n\n  return scmpCompare(a, b)\n}\n"],"mappings":"AAAA;;AAEA,MAAMA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;AACA,MAAMC,WAAW,GAAGD,OAAO,CAAC,mBAAD,CAA3B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAE,MAAM,CAACC,OAAP,GAAiB,SAASC,IAAT,CAAeC,CAAf,EAAkBC,CAAlB,EAAqB;EACpC;EACA,IAAI,CAACC,MAAM,CAACC,QAAP,CAAgBH,CAAhB,CAAD,IAAuB,CAACE,MAAM,CAACC,QAAP,CAAgBF,CAAhB,CAA5B,EAAgD;IAC9C,MAAM,IAAIG,KAAJ,CAAU,gCAAV,CAAN;EACD,CAJmC,CAMpC;EACA;;;EACA,IAAIJ,CAAC,CAACK,MAAF,KAAaJ,CAAC,CAACI,MAAnB,EAA2B;IACzB,OAAO,KAAP;EACD,CAVmC,CAYpC;EACA;;;EACA,IAAIX,MAAM,CAACY,eAAX,EAA4B;IAC1B,OAAOZ,MAAM,CAACY,eAAP,CAAuBN,CAAvB,EAA0BC,CAA1B,CAAP;EACD;;EAED,OAAOL,WAAW,CAACI,CAAD,EAAIC,CAAJ,CAAlB;AACD,CAnBD"},"metadata":{},"sourceType":"script"}