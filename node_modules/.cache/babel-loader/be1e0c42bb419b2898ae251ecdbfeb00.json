{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\webAPI work\\\\web\\\\dog-website\\\\src\\\\register.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState, useEffect } from \"react\";\nimport axios from './axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst REGISTER_URL = '/register';\n\nconst Register = () => {\n  _s();\n\n  const userRef = useRef();\n  const errRef = useRef();\n  const [name, setname] = useState('');\n  const [pwd, setbreed] = useState('');\n  const [staffcode, setStaff] = useState('');\n  const [errMsg, setErrMsg] = useState('');\n  const [success, setSuccess] = useState(false);\n  useEffect(() => {\n    userRef.current.focus();\n  }, []);\n  useEffect(() => {\n    setErrMsg('');\n  }, [user, pwd, staffcode]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    alert('You have input in ' + [user] + ' as username');\n    alert('You have input in ' + [pwd] + ' as password');\n    alert('You have input in ' + [staffcode] + ' as staffcode');\n    alert('Your registration request is now sent to server for processing');\n\n    try {\n      const response = await axios.post(REGISTER_URL, JSON.stringify({\n        user,\n        pwd,\n        staffcode\n      }), {\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        withCredentials: true\n      });\n      setSuccess(true);\n      setUser('');\n      setPwd('');\n      setStaff('');\n    } catch (err) {\n      var _err$response;\n\n      if (!(err !== null && err !== void 0 && err.response)) {\n        setErrMsg('No Server Response');\n      } else if (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status) === 409) {\n        setErrMsg('Username Taken');\n      } else {\n        setErrMsg('Registration Failed');\n      }\n\n      errRef.current.focus();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: success ? /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Thank you for making an account! You may now login at the login!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        ref: errRef,\n        className: errMsg ? \"errmsg\" : \"offscreen\",\n        \"aria-live\": \"assertive\",\n        children: errMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \"Username:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"username\",\n          ref: userRef,\n          autoComplete: \"off\",\n          onChange: e => setUser(e.target.value),\n          value: user,\n          required: true,\n          \"aria-describedby\": \"uidnote\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          onChange: e => setPwd(e.target.value),\n          value: pwd,\n          required: true,\n          \"aria-describedby\": \"pwdnote\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \"Staff code:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"staffcode\",\n          autoComplete: \"off\",\n          onChange: e => setStaff(e.target.value),\n          value: staffcode,\n          required: true,\n          \"aria-describedby\": \"uidnote\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"line\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n};\n\n_s(Register, \"yGIDJS6JR6hIo+kyzz2UbHUTb7I=\");\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["useRef","useState","useEffect","axios","REGISTER_URL","Register","userRef","errRef","name","setname","pwd","setbreed","staffcode","setStaff","errMsg","setErrMsg","success","setSuccess","current","focus","user","handleSubmit","e","preventDefault","alert","response","post","JSON","stringify","headers","withCredentials","setUser","setPwd","err","status","target","value"],"sources":["C:/Users/Administrator/Desktop/webAPI work/web/dog-website/src/register.js"],"sourcesContent":["import { useRef, useState, useEffect } from \"react\";\n\nimport axios from './axios';\nconst REGISTER_URL = '/register';\n\n\nconst Register = () => {\n    const userRef = useRef();\n    const errRef = useRef();\n\n    const [name, setname] = useState('');\n    const [pwd, setbreed] = useState('');\n    const [staffcode, setStaff] = useState('');\n    const [errMsg, setErrMsg] = useState('');\n    const [success, setSuccess] = useState(false);\n\n    useEffect(() => {\n        userRef.current.focus();\n    }, [])\n\n    \n\n    useEffect(() => {\n        setErrMsg('');\n    }, [user, pwd, staffcode])\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        alert('You have input in '+[user]+' as username');\n        alert('You have input in '+[pwd]+' as password');\n        alert('You have input in '+[staffcode]+' as staffcode');\n        alert('Your registration request is now sent to server for processing');\n      \n        try {\n            const response = await axios.post(REGISTER_URL,\n                JSON.stringify({ user, pwd, staffcode}),\n                {\n                    headers: { 'Content-Type': 'application/json' },\n                    withCredentials: true\n                }\n            );\n            setSuccess(true);\n         \n            setUser('');\n            setPwd('');\n            setStaff('');\n          \n        } catch (err) {\n            if (!err?.response) {\n                setErrMsg('No Server Response');\n            } else if (err.response?.status === 409) {\n                setErrMsg('Username Taken');\n            } else {\n                setErrMsg('Registration Failed')\n            }\n            errRef.current.focus();\n        }\n    }\n\n    return (\n        <>\n            {success ? (\n                <section>\n                  <br></br>\n                    <h1>Thank you for making an account! You may now login at the login!</h1>\n                 \n                </section>\n            ) : (\n                <section>\n                    <p ref={errRef} className={errMsg ? \"errmsg\" : \"offscreen\"} aria-live=\"assertive\">{errMsg}</p>\n                    <h1>Register</h1>\n                    <form onSubmit={handleSubmit}>\n                        <label htmlFor=\"username\">\n                            Username:\n                         \n                        </label>\n                        <input\n                            type=\"text\"\n                            id=\"username\"\n                            ref={userRef}\n                            autoComplete=\"off\"\n                            onChange={(e) => setUser(e.target.value)}\n                            value={user}\n                            required\n                            aria-describedby=\"uidnote\"\n                        />\n                    \n\n                        <label htmlFor=\"password\">\n                            Password:\n                           \n                        </label>\n                        <input\n                            type=\"password\"\n                            id=\"password\"\n                            onChange={(e) => setPwd(e.target.value)}\n                            value={pwd}\n                            required\n                    \n                            aria-describedby=\"pwdnote\"\n                        />\n                  \n                  <label htmlFor=\"username\">\n                            Staff code:\n                         \n                        </label>\n                        <input\n                            type=\"text\"\n                            id=\"staffcode\"\n                            autoComplete=\"off\"\n                            onChange={(e) => setStaff(e.target.value)}\n                            value={staffcode}\n                            required\n                            aria-describedby=\"uidnote\"\n                        />\n\n\n                       \n                       \n                       \n\n                        <button>Sign Up</button>\n                    </form>\n                    <p>\n                      \n                        <span className=\"line\">\n                    \n                        </span>\n                    </p>\n                </section>\n            )}\n        </>\n    )\n}\n\nexport default Register"],"mappings":"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"},"metadata":{},"sourceType":"module"}