{"ast":null,"code":"'use strict';\n\nconst Aspect = require('./operation').Aspect;\n\nconst OperationBase = require('./operation').OperationBase;\n\nconst applyWriteConcern = require('../utils').applyWriteConcern;\n\nconst debugOptions = require('../utils').debugOptions;\n\nconst handleCallback = require('../utils').handleCallback;\n\nconst MongoError = require('../core').MongoError;\n\nconst ReadPreference = require('../core').ReadPreference;\n\nconst MongoDBNamespace = require('../utils').MongoDBNamespace;\n\nconst debugFields = ['authSource', 'w', 'wtimeout', 'j', 'native_parser', 'forceServerObjectId', 'serializeFunctions', 'raw', 'promoteLongs', 'promoteValues', 'promoteBuffers', 'bufferMaxEntries', 'numberOfRetries', 'retryMiliSeconds', 'readPreference', 'pkFactory', 'parentDb', 'promiseLibrary', 'noListener'];\n\nclass CommandOperation extends OperationBase {\n  constructor(db, options, collection, command) {\n    super(options);\n\n    if (!this.hasAspect(Aspect.WRITE_OPERATION)) {\n      if (collection != null) {\n        this.options.readPreference = ReadPreference.resolve(collection, options);\n      } else {\n        this.options.readPreference = ReadPreference.resolve(db, options);\n      }\n    } else {\n      if (collection != null) {\n        applyWriteConcern(this.options, {\n          db,\n          coll: collection\n        }, this.options);\n      } else {\n        applyWriteConcern(this.options, {\n          db\n        }, this.options);\n      }\n\n      this.options.readPreference = ReadPreference.primary;\n    }\n\n    this.db = db;\n\n    if (command != null) {\n      this.command = command;\n    }\n\n    if (collection != null) {\n      this.collection = collection;\n    }\n  }\n\n  _buildCommand() {\n    if (this.command != null) {\n      return this.command;\n    }\n  }\n\n  execute(callback) {\n    const db = this.db;\n    const options = Object.assign({}, this.options); // Did the user destroy the topology\n\n    if (db.serverConfig && db.serverConfig.isDestroyed()) {\n      return callback(new MongoError('topology was destroyed'));\n    }\n\n    let command;\n\n    try {\n      command = this._buildCommand();\n    } catch (e) {\n      return callback(e);\n    } // Get the db name we are executing against\n\n\n    const dbName = options.dbName || options.authdb || db.databaseName; // Convert the readPreference if its not a write\n\n    if (this.hasAspect(Aspect.WRITE_OPERATION)) {\n      if (options.writeConcern && (!options.session || !options.session.inTransaction())) {\n        command.writeConcern = options.writeConcern;\n      }\n    } // Debug information\n\n\n    if (db.s.logger.isDebug()) {\n      db.s.logger.debug(`executing command ${JSON.stringify(command)} against ${dbName}.$cmd with options [${JSON.stringify(debugOptions(debugFields, options))}]`);\n    }\n\n    const namespace = this.namespace != null ? this.namespace : new MongoDBNamespace(dbName, '$cmd'); // Execute command\n\n    db.s.topology.command(namespace, command, options, (err, result) => {\n      if (err) return handleCallback(callback, err);\n      if (options.full) return handleCallback(callback, null, result);\n      handleCallback(callback, null, result.result);\n    });\n  }\n\n}\n\nmodule.exports = CommandOperation;","map":{"version":3,"names":["Aspect","require","OperationBase","applyWriteConcern","debugOptions","handleCallback","MongoError","ReadPreference","MongoDBNamespace","debugFields","CommandOperation","constructor","db","options","collection","command","hasAspect","WRITE_OPERATION","readPreference","resolve","coll","primary","_buildCommand","execute","callback","Object","assign","serverConfig","isDestroyed","e","dbName","authdb","databaseName","writeConcern","session","inTransaction","s","logger","isDebug","debug","JSON","stringify","namespace","topology","err","result","full","module","exports"],"sources":["C:/Users/Administrator/Desktop/webAPI work/web/dog-website/node_modules/koa-mongo/node_modules/mongodb/lib/operations/command.js"],"sourcesContent":["'use strict';\n\nconst Aspect = require('./operation').Aspect;\nconst OperationBase = require('./operation').OperationBase;\nconst applyWriteConcern = require('../utils').applyWriteConcern;\nconst debugOptions = require('../utils').debugOptions;\nconst handleCallback = require('../utils').handleCallback;\nconst MongoError = require('../core').MongoError;\nconst ReadPreference = require('../core').ReadPreference;\nconst MongoDBNamespace = require('../utils').MongoDBNamespace;\n\nconst debugFields = [\n  'authSource',\n  'w',\n  'wtimeout',\n  'j',\n  'native_parser',\n  'forceServerObjectId',\n  'serializeFunctions',\n  'raw',\n  'promoteLongs',\n  'promoteValues',\n  'promoteBuffers',\n  'bufferMaxEntries',\n  'numberOfRetries',\n  'retryMiliSeconds',\n  'readPreference',\n  'pkFactory',\n  'parentDb',\n  'promiseLibrary',\n  'noListener'\n];\n\nclass CommandOperation extends OperationBase {\n  constructor(db, options, collection, command) {\n    super(options);\n\n    if (!this.hasAspect(Aspect.WRITE_OPERATION)) {\n      if (collection != null) {\n        this.options.readPreference = ReadPreference.resolve(collection, options);\n      } else {\n        this.options.readPreference = ReadPreference.resolve(db, options);\n      }\n    } else {\n      if (collection != null) {\n        applyWriteConcern(this.options, { db, coll: collection }, this.options);\n      } else {\n        applyWriteConcern(this.options, { db }, this.options);\n      }\n      this.options.readPreference = ReadPreference.primary;\n    }\n\n    this.db = db;\n\n    if (command != null) {\n      this.command = command;\n    }\n\n    if (collection != null) {\n      this.collection = collection;\n    }\n  }\n\n  _buildCommand() {\n    if (this.command != null) {\n      return this.command;\n    }\n  }\n\n  execute(callback) {\n    const db = this.db;\n    const options = Object.assign({}, this.options);\n\n    // Did the user destroy the topology\n    if (db.serverConfig && db.serverConfig.isDestroyed()) {\n      return callback(new MongoError('topology was destroyed'));\n    }\n\n    let command;\n    try {\n      command = this._buildCommand();\n    } catch (e) {\n      return callback(e);\n    }\n\n    // Get the db name we are executing against\n    const dbName = options.dbName || options.authdb || db.databaseName;\n\n    // Convert the readPreference if its not a write\n    if (this.hasAspect(Aspect.WRITE_OPERATION)) {\n      if (options.writeConcern && (!options.session || !options.session.inTransaction())) {\n        command.writeConcern = options.writeConcern;\n      }\n    }\n\n    // Debug information\n    if (db.s.logger.isDebug()) {\n      db.s.logger.debug(\n        `executing command ${JSON.stringify(\n          command\n        )} against ${dbName}.$cmd with options [${JSON.stringify(\n          debugOptions(debugFields, options)\n        )}]`\n      );\n    }\n\n    const namespace =\n      this.namespace != null ? this.namespace : new MongoDBNamespace(dbName, '$cmd');\n\n    // Execute command\n    db.s.topology.command(namespace, command, options, (err, result) => {\n      if (err) return handleCallback(callback, err);\n      if (options.full) return handleCallback(callback, null, result);\n      handleCallback(callback, null, result.result);\n    });\n  }\n}\n\nmodule.exports = CommandOperation;\n"],"mappings":"AAAA;;AAEA,MAAMA,MAAM,GAAGC,OAAO,CAAC,aAAD,CAAP,CAAuBD,MAAtC;;AACA,MAAME,aAAa,GAAGD,OAAO,CAAC,aAAD,CAAP,CAAuBC,aAA7C;;AACA,MAAMC,iBAAiB,GAAGF,OAAO,CAAC,UAAD,CAAP,CAAoBE,iBAA9C;;AACA,MAAMC,YAAY,GAAGH,OAAO,CAAC,UAAD,CAAP,CAAoBG,YAAzC;;AACA,MAAMC,cAAc,GAAGJ,OAAO,CAAC,UAAD,CAAP,CAAoBI,cAA3C;;AACA,MAAMC,UAAU,GAAGL,OAAO,CAAC,SAAD,CAAP,CAAmBK,UAAtC;;AACA,MAAMC,cAAc,GAAGN,OAAO,CAAC,SAAD,CAAP,CAAmBM,cAA1C;;AACA,MAAMC,gBAAgB,GAAGP,OAAO,CAAC,UAAD,CAAP,CAAoBO,gBAA7C;;AAEA,MAAMC,WAAW,GAAG,CAClB,YADkB,EAElB,GAFkB,EAGlB,UAHkB,EAIlB,GAJkB,EAKlB,eALkB,EAMlB,qBANkB,EAOlB,oBAPkB,EAQlB,KARkB,EASlB,cATkB,EAUlB,eAVkB,EAWlB,gBAXkB,EAYlB,kBAZkB,EAalB,iBAbkB,EAclB,kBAdkB,EAelB,gBAfkB,EAgBlB,WAhBkB,EAiBlB,UAjBkB,EAkBlB,gBAlBkB,EAmBlB,YAnBkB,CAApB;;AAsBA,MAAMC,gBAAN,SAA+BR,aAA/B,CAA6C;EAC3CS,WAAW,CAACC,EAAD,EAAKC,OAAL,EAAcC,UAAd,EAA0BC,OAA1B,EAAmC;IAC5C,MAAMF,OAAN;;IAEA,IAAI,CAAC,KAAKG,SAAL,CAAehB,MAAM,CAACiB,eAAtB,CAAL,EAA6C;MAC3C,IAAIH,UAAU,IAAI,IAAlB,EAAwB;QACtB,KAAKD,OAAL,CAAaK,cAAb,GAA8BX,cAAc,CAACY,OAAf,CAAuBL,UAAvB,EAAmCD,OAAnC,CAA9B;MACD,CAFD,MAEO;QACL,KAAKA,OAAL,CAAaK,cAAb,GAA8BX,cAAc,CAACY,OAAf,CAAuBP,EAAvB,EAA2BC,OAA3B,CAA9B;MACD;IACF,CAND,MAMO;MACL,IAAIC,UAAU,IAAI,IAAlB,EAAwB;QACtBX,iBAAiB,CAAC,KAAKU,OAAN,EAAe;UAAED,EAAF;UAAMQ,IAAI,EAAEN;QAAZ,CAAf,EAAyC,KAAKD,OAA9C,CAAjB;MACD,CAFD,MAEO;QACLV,iBAAiB,CAAC,KAAKU,OAAN,EAAe;UAAED;QAAF,CAAf,EAAuB,KAAKC,OAA5B,CAAjB;MACD;;MACD,KAAKA,OAAL,CAAaK,cAAb,GAA8BX,cAAc,CAACc,OAA7C;IACD;;IAED,KAAKT,EAAL,GAAUA,EAAV;;IAEA,IAAIG,OAAO,IAAI,IAAf,EAAqB;MACnB,KAAKA,OAAL,GAAeA,OAAf;IACD;;IAED,IAAID,UAAU,IAAI,IAAlB,EAAwB;MACtB,KAAKA,UAAL,GAAkBA,UAAlB;IACD;EACF;;EAEDQ,aAAa,GAAG;IACd,IAAI,KAAKP,OAAL,IAAgB,IAApB,EAA0B;MACxB,OAAO,KAAKA,OAAZ;IACD;EACF;;EAEDQ,OAAO,CAACC,QAAD,EAAW;IAChB,MAAMZ,EAAE,GAAG,KAAKA,EAAhB;IACA,MAAMC,OAAO,GAAGY,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAKb,OAAvB,CAAhB,CAFgB,CAIhB;;IACA,IAAID,EAAE,CAACe,YAAH,IAAmBf,EAAE,CAACe,YAAH,CAAgBC,WAAhB,EAAvB,EAAsD;MACpD,OAAOJ,QAAQ,CAAC,IAAIlB,UAAJ,CAAe,wBAAf,CAAD,CAAf;IACD;;IAED,IAAIS,OAAJ;;IACA,IAAI;MACFA,OAAO,GAAG,KAAKO,aAAL,EAAV;IACD,CAFD,CAEE,OAAOO,CAAP,EAAU;MACV,OAAOL,QAAQ,CAACK,CAAD,CAAf;IACD,CAde,CAgBhB;;;IACA,MAAMC,MAAM,GAAGjB,OAAO,CAACiB,MAAR,IAAkBjB,OAAO,CAACkB,MAA1B,IAAoCnB,EAAE,CAACoB,YAAtD,CAjBgB,CAmBhB;;IACA,IAAI,KAAKhB,SAAL,CAAehB,MAAM,CAACiB,eAAtB,CAAJ,EAA4C;MAC1C,IAAIJ,OAAO,CAACoB,YAAR,KAAyB,CAACpB,OAAO,CAACqB,OAAT,IAAoB,CAACrB,OAAO,CAACqB,OAAR,CAAgBC,aAAhB,EAA9C,CAAJ,EAAoF;QAClFpB,OAAO,CAACkB,YAAR,GAAuBpB,OAAO,CAACoB,YAA/B;MACD;IACF,CAxBe,CA0BhB;;;IACA,IAAIrB,EAAE,CAACwB,CAAH,CAAKC,MAAL,CAAYC,OAAZ,EAAJ,EAA2B;MACzB1B,EAAE,CAACwB,CAAH,CAAKC,MAAL,CAAYE,KAAZ,CACG,qBAAoBC,IAAI,CAACC,SAAL,CACnB1B,OADmB,CAEnB,YAAWe,MAAO,uBAAsBU,IAAI,CAACC,SAAL,CACxCrC,YAAY,CAACK,WAAD,EAAcI,OAAd,CAD4B,CAExC,GALJ;IAOD;;IAED,MAAM6B,SAAS,GACb,KAAKA,SAAL,IAAkB,IAAlB,GAAyB,KAAKA,SAA9B,GAA0C,IAAIlC,gBAAJ,CAAqBsB,MAArB,EAA6B,MAA7B,CAD5C,CArCgB,CAwChB;;IACAlB,EAAE,CAACwB,CAAH,CAAKO,QAAL,CAAc5B,OAAd,CAAsB2B,SAAtB,EAAiC3B,OAAjC,EAA0CF,OAA1C,EAAmD,CAAC+B,GAAD,EAAMC,MAAN,KAAiB;MAClE,IAAID,GAAJ,EAAS,OAAOvC,cAAc,CAACmB,QAAD,EAAWoB,GAAX,CAArB;MACT,IAAI/B,OAAO,CAACiC,IAAZ,EAAkB,OAAOzC,cAAc,CAACmB,QAAD,EAAW,IAAX,EAAiBqB,MAAjB,CAArB;MAClBxC,cAAc,CAACmB,QAAD,EAAW,IAAX,EAAiBqB,MAAM,CAACA,MAAxB,CAAd;IACD,CAJD;EAKD;;AAlF0C;;AAqF7CE,MAAM,CAACC,OAAP,GAAiBtC,gBAAjB"},"metadata":{},"sourceType":"script"}