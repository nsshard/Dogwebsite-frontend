{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\webAPI work\\\\web\\\\dog-website\\\\src\\\\login.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { Component } from \"react\";\nimport { useState } from \"react\"; // get the SHA256 module and a salt\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar salt = '2irjv34vawirj2jwjvwjreka';\n\nvar SHA256 = require(\"crypto-js/sha256\");\n\nvar typedname = \"\";\nvar typedpassword = \"\"; //get input from the login form\n\nfunction accountistrue() {}\n\nfunction Createvalues() {\n  _s();\n\n  const [formValue, setFormValue] = useState({\n    USERNAME: \"\",\n    PASSWORD: \"\"\n  });\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormValue(prevState => {\n      return {\n        prevState,\n        [name]: value\n      };\n    });\n  };\n\n  const {\n    USERNAME,\n    PASSWORD\n  } = formValue;\n\n  function outputname() {\n    alert(typedname);\n  } //Check if account exists in database based on username\n  //var accountchecker = new XMLHttpRequest();\n  //accountchecker.onload = accountistrue;\n  //accountchecker.open(\"get\", \"http://localhost:3000/accounts\", true);\n  //accountchecker.send();\n\n\n  class login extends Component {\n    render() {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loginstuff\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loginform\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"blacktext1\",\n                children: \"Username\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 5\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form1\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"USERNAME\",\n                  name: \"USERNAME\",\n                  onChange: updateValues,\n                  value: USERNAME\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 2\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 2\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 2\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"blacktext2\",\n                children: \"Password \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 1\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 2\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form2\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"PASSWORD\",\n                  name: \"PASSWORD\",\n                  onChange: updateValues,\n                  value: PASSWORD\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 4\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 1\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 4\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"send\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"submit\",\n                  value: \"Submit\",\n                  onClick: outputname\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 1\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 1\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 1\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 1\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 1\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 1\n      }, this);\n    }\n\n  }\n}\n\n_s(Createvalues, \"acGn1+waqWeTp53tFzbGPFEWgJo=\");\n\n_c = Createvalues;\n;\nexport default login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Createvalues\");","map":{"version":3,"names":["React","Component","useState","salt","SHA256","require","typedname","typedpassword","accountistrue","Createvalues","formValue","setFormValue","USERNAME","PASSWORD","handleChange","event","name","value","target","prevState","outputname","alert","login","render","updateValues"],"sources":["C:/Users/Administrator/Desktop/webAPI work/web/dog-website/src/login.js"],"sourcesContent":["\nimport './App.css';\nimport React, { Component } from \"react\";\nimport { useState } from \"react\";\n\n\n\n\n// get the SHA256 module and a salt\nvar salt = '2irjv34vawirj2jwjvwjreka';\nvar SHA256 = require(\"crypto-js/sha256\");\nvar typedname = \"\"; \nvar typedpassword = \"\"; \n\n\n//get input from the login form\n\n\nfunction accountistrue()\n{\n}\n\n\n\n\nfunction Createvalues() {\n\nconst [formValue, setFormValue] = useState({\n    USERNAME: \"\",\n    PASSWORD: \"\",\n    \n  });\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormValue((prevState) => {\n      return {\n        prevState,\n        [name]: value,\n      };\n    });\n  };\n\n  const {USERNAME,PASSWORD} = formValue;\n \n  \n\n\nfunction outputname()\n{\nalert(typedname);\n}\n\n\n //Check if account exists in database based on username\n\n//var accountchecker = new XMLHttpRequest();\n//accountchecker.onload = accountistrue;\n//accountchecker.open(\"get\", \"http://localhost:3000/accounts\", true);\n//accountchecker.send();\n\nclass login extends Component {\n  render() {\n    return (\n<div>\n\n\n\n<div className=\"loginstuff\">\n<div className=\"loginform\">\n<form>\n  \n    <div className=\"blacktext1\">Username\n\t</div>\n\t<div className=\"form1\">\n\t<input type=\"USERNAME\" name=\"USERNAME\" onChange={updateValues} value={USERNAME}/>\n  </div>\n\t<br></br>\n<div className=\"blacktext2\">Password </div>\n\n\t<br></br>\n\n<div className=\"form2\">\n   <input type=\"PASSWORD\" name=\"PASSWORD\" onChange={updateValues}  value={PASSWORD}/>\n   </div>\n   <br></br>\n<div className=\"send\">\n<input type=\"submit\" value=\"Submit\" onClick={outputname}/>\n</div>\n\n  \n\n</form>\n</div>\n</div>\n</div>\n\n\n );\n \n  }\n}\n\n};\n\nexport default login;\n"],"mappings":";;;AACA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,OAAzB,C,CAKA;;;AACA,IAAIC,IAAI,GAAG,0BAAX;;AACA,IAAIC,MAAM,GAAGC,OAAO,CAAC,kBAAD,CAApB;;AACA,IAAIC,SAAS,GAAG,EAAhB;AACA,IAAIC,aAAa,GAAG,EAApB,C,CAGA;;AAGA,SAASC,aAAT,GACA,CACC;;AAKD,SAASC,YAAT,GAAwB;EAAA;;EAExB,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC;IACvCU,QAAQ,EAAE,EAD6B;IAEvCC,QAAQ,EAAE;EAF6B,CAAD,CAA1C;;EAME,MAAMC,YAAY,GAAIC,KAAD,IAAW;IAC9B,MAAM;MAAEC,IAAF;MAAQC;IAAR,IAAkBF,KAAK,CAACG,MAA9B;IACAP,YAAY,CAAEQ,SAAD,IAAe;MAC1B,OAAO;QACLA,SADK;QAEL,CAACH,IAAD,GAAQC;MAFH,CAAP;IAID,CALW,CAAZ;EAMD,CARD;;EAUA,MAAM;IAACL,QAAD;IAAUC;EAAV,IAAsBH,SAA5B;;EAKF,SAASU,UAAT,GACA;IACAC,KAAK,CAACf,SAAD,CAAL;EACC,CA1BuB,CA6BvB;EAED;EACA;EACA;EACA;;;EAEA,MAAMgB,KAAN,SAAoBrB,SAApB,CAA8B;IAC5BsB,MAAM,GAAG;MACP,oBACJ;QAAA,uBAIA;UAAK,SAAS,EAAC,YAAf;UAAA,uBACA;YAAK,SAAS,EAAC,WAAf;YAAA,uBACA;cAAA,wBAEI;gBAAK,SAAS,EAAC,YAAf;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAFJ,eAIC;gBAAK,SAAS,EAAC,OAAf;gBAAA,uBACA;kBAAO,IAAI,EAAC,UAAZ;kBAAuB,IAAI,EAAC,UAA5B;kBAAuC,QAAQ,EAAEC,YAAjD;kBAA+D,KAAK,EAAEZ;gBAAtE;kBAAA;kBAAA;kBAAA;gBAAA;cADA;gBAAA;gBAAA;gBAAA;cAAA,QAJD,eAOC;gBAAA;gBAAA;gBAAA;cAAA,QAPD,eAQA;gBAAK,SAAS,EAAC,YAAf;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QARA,eAUC;gBAAA;gBAAA;gBAAA;cAAA,QAVD,eAYA;gBAAK,SAAS,EAAC,OAAf;gBAAA,uBACG;kBAAO,IAAI,EAAC,UAAZ;kBAAuB,IAAI,EAAC,UAA5B;kBAAuC,QAAQ,EAAEY,YAAjD;kBAAgE,KAAK,EAAEX;gBAAvE;kBAAA;kBAAA;kBAAA;gBAAA;cADH;gBAAA;gBAAA;gBAAA;cAAA,QAZA,eAeG;gBAAA;gBAAA;gBAAA;cAAA,QAfH,eAgBA;gBAAK,SAAS,EAAC,MAAf;gBAAA,uBACA;kBAAO,IAAI,EAAC,QAAZ;kBAAqB,KAAK,EAAC,QAA3B;kBAAoC,OAAO,EAAEO;gBAA7C;kBAAA;kBAAA;kBAAA;gBAAA;cADA;gBAAA;gBAAA;gBAAA;cAAA,QAhBA;YAAA;cAAA;cAAA;cAAA;YAAA;UADA;YAAA;YAAA;YAAA;UAAA;QADA;UAAA;UAAA;UAAA;QAAA;MAJA;QAAA;QAAA;QAAA;MAAA,QADI;IAqCD;;EAvC2B;AA0C7B;;GA9EQX,Y;;KAAAA,Y;AA8ER;AAED,eAAea,KAAf"},"metadata":{},"sourceType":"module"}