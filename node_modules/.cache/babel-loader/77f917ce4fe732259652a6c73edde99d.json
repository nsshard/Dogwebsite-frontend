{"ast":null,"code":"/*!\n * http-errors\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n'use strict';\n/**\n * Module dependencies.\n * @private\n */\n\nvar deprecate = require('depd')('http-errors');\n\nvar setPrototypeOf = require('setprototypeof');\n\nvar statuses = require('statuses');\n\nvar inherits = require('inherits');\n/**\n * Module exports.\n * @public\n */\n\n\nmodule.exports = createError;\nmodule.exports.HttpError = createHttpErrorConstructor(); // Populate exports for all constructors\n\npopulateConstructorExports(module.exports, statuses.codes, module.exports.HttpError);\n/**\n * Get the code class of a status code.\n * @private\n */\n\nfunction codeClass(status) {\n  return Number(String(status).charAt(0) + '00');\n}\n/**\n * Create a new HTTP Error.\n *\n * @returns {Error}\n * @public\n */\n\n\nfunction createError() {\n  // so much arity going on ~_~\n  var err;\n  var msg;\n  var status = 500;\n  var props = {};\n\n  for (var i = 0; i < arguments.length; i++) {\n    var arg = arguments[i];\n\n    if (arg instanceof Error) {\n      err = arg;\n      status = err.status || err.statusCode || status;\n      continue;\n    }\n\n    switch (typeof arg) {\n      case 'string':\n        msg = arg;\n        break;\n\n      case 'number':\n        status = arg;\n\n        if (i !== 0) {\n          deprecate('non-first-argument status code; replace with createError(' + arg + ', ...)');\n        }\n\n        break;\n\n      case 'object':\n        props = arg;\n        break;\n    }\n  }\n\n  if (typeof status === 'number' && (status < 400 || status >= 600)) {\n    deprecate('non-error status code; use only 4xx or 5xx status codes');\n  }\n\n  if (typeof status !== 'number' || !statuses[status] && (status < 400 || status >= 600)) {\n    status = 500;\n  } // constructor\n\n\n  var HttpError = createError[status] || createError[codeClass(status)];\n\n  if (!err) {\n    // create error\n    err = HttpError ? new HttpError(msg) : new Error(msg || statuses[status]);\n    Error.captureStackTrace(err, createError);\n  }\n\n  if (!HttpError || !(err instanceof HttpError) || err.status !== status) {\n    // add properties to generic error\n    err.expose = status < 500;\n    err.status = err.statusCode = status;\n  }\n\n  for (var key in props) {\n    if (key !== 'status' && key !== 'statusCode') {\n      err[key] = props[key];\n    }\n  }\n\n  return err;\n}\n/**\n * Create HTTP error abstract base class.\n * @private\n */\n\n\nfunction createHttpErrorConstructor() {\n  function HttpError() {\n    throw new TypeError('cannot construct abstract class');\n  }\n\n  inherits(HttpError, Error);\n  return HttpError;\n}\n/**\n * Create a constructor for a client error.\n * @private\n */\n\n\nfunction createClientErrorConstructor(HttpError, name, code) {\n  var className = name.match(/Error$/) ? name : name + 'Error';\n\n  function ClientError(message) {\n    // create the error object\n    var msg = message != null ? message : statuses[code];\n    var err = new Error(msg); // capture a stack trace to the construction point\n\n    Error.captureStackTrace(err, ClientError); // adjust the [[Prototype]]\n\n    setPrototypeOf(err, ClientError.prototype); // redefine the error message\n\n    Object.defineProperty(err, 'message', {\n      enumerable: true,\n      configurable: true,\n      value: msg,\n      writable: true\n    }); // redefine the error name\n\n    Object.defineProperty(err, 'name', {\n      enumerable: false,\n      configurable: true,\n      value: className,\n      writable: true\n    });\n    return err;\n  }\n\n  inherits(ClientError, HttpError);\n  ClientError.prototype.status = code;\n  ClientError.prototype.statusCode = code;\n  ClientError.prototype.expose = true;\n  return ClientError;\n}\n/**\n * Create a constructor for a server error.\n * @private\n */\n\n\nfunction createServerErrorConstructor(HttpError, name, code) {\n  var className = name.match(/Error$/) ? name : name + 'Error';\n\n  function ServerError(message) {\n    // create the error object\n    var msg = message != null ? message : statuses[code];\n    var err = new Error(msg); // capture a stack trace to the construction point\n\n    Error.captureStackTrace(err, ServerError); // adjust the [[Prototype]]\n\n    setPrototypeOf(err, ServerError.prototype); // redefine the error message\n\n    Object.defineProperty(err, 'message', {\n      enumerable: true,\n      configurable: true,\n      value: msg,\n      writable: true\n    }); // redefine the error name\n\n    Object.defineProperty(err, 'name', {\n      enumerable: false,\n      configurable: true,\n      value: className,\n      writable: true\n    });\n    return err;\n  }\n\n  inherits(ServerError, HttpError);\n  ServerError.prototype.status = code;\n  ServerError.prototype.statusCode = code;\n  ServerError.prototype.expose = false;\n  return ServerError;\n}\n/**\n * Populate the exports object with constructors for every error class.\n * @private\n */\n\n\nfunction populateConstructorExports(exports, codes, HttpError) {\n  codes.forEach(function forEachCode(code) {\n    var CodeError;\n    var name = toIdentifier(statuses[code]);\n\n    switch (codeClass(code)) {\n      case 400:\n        CodeError = createClientErrorConstructor(HttpError, name, code);\n        break;\n\n      case 500:\n        CodeError = createServerErrorConstructor(HttpError, name, code);\n        break;\n    }\n\n    if (CodeError) {\n      // export the constructor\n      exports[code] = CodeError;\n      exports[name] = CodeError;\n    }\n  }); // backwards-compatibility\n\n  exports[\"I'mateapot\"] = deprecate.function(exports.ImATeapot, '\"I\\'mateapot\"; use \"ImATeapot\" instead');\n}\n/**\n * Convert a string of words to a JavaScript identifier.\n * @private\n */\n\n\nfunction toIdentifier(str) {\n  return str.split(' ').map(function (token) {\n    return token.slice(0, 1).toUpperCase() + token.slice(1);\n  }).join('').replace(/[^ _0-9a-z]/gi, '');\n}","map":{"version":3,"names":["deprecate","require","setPrototypeOf","statuses","inherits","module","exports","createError","HttpError","createHttpErrorConstructor","populateConstructorExports","codes","codeClass","status","Number","String","charAt","err","msg","props","i","arguments","length","arg","Error","statusCode","captureStackTrace","expose","key","TypeError","createClientErrorConstructor","name","code","className","match","ClientError","message","prototype","Object","defineProperty","enumerable","configurable","value","writable","createServerErrorConstructor","ServerError","forEach","forEachCode","CodeError","toIdentifier","function","ImATeapot","str","split","map","token","slice","toUpperCase","join","replace"],"sources":["C:/Users/Administrator/Desktop/webAPI work/web/dog-website/node_modules/resolve-path/node_modules/http-errors/index.js"],"sourcesContent":["/*!\n * http-errors\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar deprecate = require('depd')('http-errors')\nvar setPrototypeOf = require('setprototypeof')\nvar statuses = require('statuses')\nvar inherits = require('inherits')\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = createError\nmodule.exports.HttpError = createHttpErrorConstructor()\n\n// Populate exports for all constructors\npopulateConstructorExports(module.exports, statuses.codes, module.exports.HttpError)\n\n/**\n * Get the code class of a status code.\n * @private\n */\n\nfunction codeClass (status) {\n  return Number(String(status).charAt(0) + '00')\n}\n\n/**\n * Create a new HTTP Error.\n *\n * @returns {Error}\n * @public\n */\n\nfunction createError () {\n  // so much arity going on ~_~\n  var err\n  var msg\n  var status = 500\n  var props = {}\n  for (var i = 0; i < arguments.length; i++) {\n    var arg = arguments[i]\n    if (arg instanceof Error) {\n      err = arg\n      status = err.status || err.statusCode || status\n      continue\n    }\n    switch (typeof arg) {\n      case 'string':\n        msg = arg\n        break\n      case 'number':\n        status = arg\n        if (i !== 0) {\n          deprecate('non-first-argument status code; replace with createError(' + arg + ', ...)')\n        }\n        break\n      case 'object':\n        props = arg\n        break\n    }\n  }\n\n  if (typeof status === 'number' && (status < 400 || status >= 600)) {\n    deprecate('non-error status code; use only 4xx or 5xx status codes')\n  }\n\n  if (typeof status !== 'number' ||\n    (!statuses[status] && (status < 400 || status >= 600))) {\n    status = 500\n  }\n\n  // constructor\n  var HttpError = createError[status] || createError[codeClass(status)]\n\n  if (!err) {\n    // create error\n    err = HttpError\n      ? new HttpError(msg)\n      : new Error(msg || statuses[status])\n    Error.captureStackTrace(err, createError)\n  }\n\n  if (!HttpError || !(err instanceof HttpError) || err.status !== status) {\n    // add properties to generic error\n    err.expose = status < 500\n    err.status = err.statusCode = status\n  }\n\n  for (var key in props) {\n    if (key !== 'status' && key !== 'statusCode') {\n      err[key] = props[key]\n    }\n  }\n\n  return err\n}\n\n/**\n * Create HTTP error abstract base class.\n * @private\n */\n\nfunction createHttpErrorConstructor () {\n  function HttpError () {\n    throw new TypeError('cannot construct abstract class')\n  }\n\n  inherits(HttpError, Error)\n\n  return HttpError\n}\n\n/**\n * Create a constructor for a client error.\n * @private\n */\n\nfunction createClientErrorConstructor (HttpError, name, code) {\n  var className = name.match(/Error$/) ? name : name + 'Error'\n\n  function ClientError (message) {\n    // create the error object\n    var msg = message != null ? message : statuses[code]\n    var err = new Error(msg)\n\n    // capture a stack trace to the construction point\n    Error.captureStackTrace(err, ClientError)\n\n    // adjust the [[Prototype]]\n    setPrototypeOf(err, ClientError.prototype)\n\n    // redefine the error message\n    Object.defineProperty(err, 'message', {\n      enumerable: true,\n      configurable: true,\n      value: msg,\n      writable: true\n    })\n\n    // redefine the error name\n    Object.defineProperty(err, 'name', {\n      enumerable: false,\n      configurable: true,\n      value: className,\n      writable: true\n    })\n\n    return err\n  }\n\n  inherits(ClientError, HttpError)\n\n  ClientError.prototype.status = code\n  ClientError.prototype.statusCode = code\n  ClientError.prototype.expose = true\n\n  return ClientError\n}\n\n/**\n * Create a constructor for a server error.\n * @private\n */\n\nfunction createServerErrorConstructor (HttpError, name, code) {\n  var className = name.match(/Error$/) ? name : name + 'Error'\n\n  function ServerError (message) {\n    // create the error object\n    var msg = message != null ? message : statuses[code]\n    var err = new Error(msg)\n\n    // capture a stack trace to the construction point\n    Error.captureStackTrace(err, ServerError)\n\n    // adjust the [[Prototype]]\n    setPrototypeOf(err, ServerError.prototype)\n\n    // redefine the error message\n    Object.defineProperty(err, 'message', {\n      enumerable: true,\n      configurable: true,\n      value: msg,\n      writable: true\n    })\n\n    // redefine the error name\n    Object.defineProperty(err, 'name', {\n      enumerable: false,\n      configurable: true,\n      value: className,\n      writable: true\n    })\n\n    return err\n  }\n\n  inherits(ServerError, HttpError)\n\n  ServerError.prototype.status = code\n  ServerError.prototype.statusCode = code\n  ServerError.prototype.expose = false\n\n  return ServerError\n}\n\n/**\n * Populate the exports object with constructors for every error class.\n * @private\n */\n\nfunction populateConstructorExports (exports, codes, HttpError) {\n  codes.forEach(function forEachCode (code) {\n    var CodeError\n    var name = toIdentifier(statuses[code])\n\n    switch (codeClass(code)) {\n      case 400:\n        CodeError = createClientErrorConstructor(HttpError, name, code)\n        break\n      case 500:\n        CodeError = createServerErrorConstructor(HttpError, name, code)\n        break\n    }\n\n    if (CodeError) {\n      // export the constructor\n      exports[code] = CodeError\n      exports[name] = CodeError\n    }\n  })\n\n  // backwards-compatibility\n  exports[\"I'mateapot\"] = deprecate.function(exports.ImATeapot,\n    '\"I\\'mateapot\"; use \"ImATeapot\" instead')\n}\n\n/**\n * Convert a string of words to a JavaScript identifier.\n * @private\n */\n\nfunction toIdentifier (str) {\n  return str.split(' ').map(function (token) {\n    return token.slice(0, 1).toUpperCase() + token.slice(1)\n  }).join('').replace(/[^ _0-9a-z]/gi, '')\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}