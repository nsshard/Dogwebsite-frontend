{"ast":null,"code":"'use strict';\n/**\n * Module dependencies.\n */\n\nconst util = require('util');\n\nconst createError = require('http-errors');\n\nconst httpAssert = require('http-assert');\n\nconst delegate = require('delegates');\n\nconst statuses = require('statuses');\n\nconst Cookies = require('cookies');\n\nconst COOKIES = Symbol('context#cookies');\n/**\n * Context prototype.\n */\n\nconst proto = module.exports = {\n  /**\n   * util.inspect() implementation, which\n   * just returns the JSON output.\n   *\n   * @return {Object}\n   * @api public\n   */\n  inspect() {\n    if (this === proto) return this;\n    return this.toJSON();\n  },\n\n  /**\n   * Return JSON representation.\n   *\n   * Here we explicitly invoke .toJSON() on each\n   * object, as iteration will otherwise fail due\n   * to the getters and cause utilities such as\n   * clone() to fail.\n   *\n   * @return {Object}\n   * @api public\n   */\n  toJSON() {\n    return {\n      request: this.request.toJSON(),\n      response: this.response.toJSON(),\n      app: this.app.toJSON(),\n      originalUrl: this.originalUrl,\n      req: '<original node req>',\n      res: '<original node res>',\n      socket: '<original node socket>'\n    };\n  },\n\n  /**\n   * Similar to .throw(), adds assertion.\n   *\n   *    this.assert(this.user, 401, 'Please login!');\n   *\n   * See: https://github.com/jshttp/http-assert\n   *\n   * @param {Mixed} test\n   * @param {Number} status\n   * @param {String} message\n   * @api public\n   */\n  assert: httpAssert,\n\n  /**\n   * Throw an error with `status` (default 500) and\n   * `msg`. Note that these are user-level\n   * errors, and the message may be exposed to the client.\n   *\n   *    this.throw(403)\n   *    this.throw(400, 'name required')\n   *    this.throw('something exploded')\n   *    this.throw(new Error('invalid'))\n   *    this.throw(400, new Error('invalid'))\n   *\n   * See: https://github.com/jshttp/http-errors\n   *\n   * Note: `status` should only be passed as the first parameter.\n   *\n   * @param {String|Number|Error} err, msg or status\n   * @param {String|Number|Error} [err, msg or status]\n   * @param {Object} [props]\n   * @api public\n   */\n  throw() {\n    throw createError(...arguments);\n  },\n\n  /**\n   * Default error handling.\n   *\n   * @param {Error} err\n   * @api private\n   */\n  onerror(err) {\n    // don't do anything if there is no error.\n    // this allows you to pass `this.onerror`\n    // to node-style callbacks.\n    if (null == err) return; // When dealing with cross-globals a normal `instanceof` check doesn't work properly.\n    // See https://github.com/koajs/koa/issues/1466\n    // We can probably remove it once jest fixes https://github.com/facebook/jest/issues/2549.\n\n    const isNativeError = Object.prototype.toString.call(err) === '[object Error]' || err instanceof Error;\n    if (!isNativeError) err = new Error(util.format('non-error thrown: %j', err));\n    let headerSent = false;\n\n    if (this.headerSent || !this.writable) {\n      headerSent = err.headerSent = true;\n    } // delegate\n\n\n    this.app.emit('error', err, this); // nothing we can do here other\n    // than delegate to the app-level\n    // handler and log.\n\n    if (headerSent) {\n      return;\n    }\n\n    const {\n      res\n    } = this; // first unset all headers\n\n    /* istanbul ignore else */\n\n    if (typeof res.getHeaderNames === 'function') {\n      res.getHeaderNames().forEach(name => res.removeHeader(name));\n    } else {\n      res._headers = {}; // Node < 7.7\n    } // then set those specified\n\n\n    this.set(err.headers); // force text/plain\n\n    this.type = 'text';\n    let statusCode = err.status || err.statusCode; // ENOENT support\n\n    if ('ENOENT' === err.code) statusCode = 404; // default to 500\n\n    if ('number' !== typeof statusCode || !statuses[statusCode]) statusCode = 500; // respond\n\n    const code = statuses[statusCode];\n    const msg = err.expose ? err.message : code;\n    this.status = err.status = statusCode;\n    this.length = Buffer.byteLength(msg);\n    res.end(msg);\n  },\n\n  get cookies() {\n    if (!this[COOKIES]) {\n      this[COOKIES] = new Cookies(this.req, this.res, {\n        keys: this.app.keys,\n        secure: this.request.secure\n      });\n    }\n\n    return this[COOKIES];\n  },\n\n  set cookies(_cookies) {\n    this[COOKIES] = _cookies;\n  }\n\n};\n/**\n * Custom inspection implementation for newer Node.js versions.\n *\n * @return {Object}\n * @api public\n */\n\n/* istanbul ignore else */\n\nif (util.inspect.custom) {\n  module.exports[util.inspect.custom] = module.exports.inspect;\n}\n/**\n * Response delegation.\n */\n\n\ndelegate(proto, 'response').method('attachment').method('redirect').method('remove').method('vary').method('has').method('set').method('append').method('flushHeaders').access('status').access('message').access('body').access('length').access('type').access('lastModified').access('etag').getter('headerSent').getter('writable');\n/**\n * Request delegation.\n */\n\ndelegate(proto, 'request').method('acceptsLanguages').method('acceptsEncodings').method('acceptsCharsets').method('accepts').method('get').method('is').access('querystring').access('idempotent').access('socket').access('search').access('method').access('query').access('path').access('url').access('accept').getter('origin').getter('href').getter('subdomains').getter('protocol').getter('host').getter('hostname').getter('URL').getter('header').getter('headers').getter('secure').getter('stale').getter('fresh').getter('ips').getter('ip');","map":{"version":3,"names":["util","require","createError","httpAssert","delegate","statuses","Cookies","COOKIES","Symbol","proto","module","exports","inspect","toJSON","request","response","app","originalUrl","req","res","socket","assert","throw","onerror","err","isNativeError","Object","prototype","toString","call","Error","format","headerSent","writable","emit","getHeaderNames","forEach","name","removeHeader","_headers","set","headers","type","statusCode","status","code","msg","expose","message","length","Buffer","byteLength","end","cookies","keys","secure","_cookies","custom","method","access","getter"],"sources":["C:/Users/Administrator/Desktop/webAPI work/web/dog-website/node_modules/koa/lib/context.js"],"sourcesContent":["\n'use strict';\n\n/**\n * Module dependencies.\n */\n\nconst util = require('util');\nconst createError = require('http-errors');\nconst httpAssert = require('http-assert');\nconst delegate = require('delegates');\nconst statuses = require('statuses');\nconst Cookies = require('cookies');\n\nconst COOKIES = Symbol('context#cookies');\n\n/**\n * Context prototype.\n */\n\nconst proto = module.exports = {\n\n  /**\n   * util.inspect() implementation, which\n   * just returns the JSON output.\n   *\n   * @return {Object}\n   * @api public\n   */\n\n  inspect() {\n    if (this === proto) return this;\n    return this.toJSON();\n  },\n\n  /**\n   * Return JSON representation.\n   *\n   * Here we explicitly invoke .toJSON() on each\n   * object, as iteration will otherwise fail due\n   * to the getters and cause utilities such as\n   * clone() to fail.\n   *\n   * @return {Object}\n   * @api public\n   */\n\n  toJSON() {\n    return {\n      request: this.request.toJSON(),\n      response: this.response.toJSON(),\n      app: this.app.toJSON(),\n      originalUrl: this.originalUrl,\n      req: '<original node req>',\n      res: '<original node res>',\n      socket: '<original node socket>'\n    };\n  },\n\n  /**\n   * Similar to .throw(), adds assertion.\n   *\n   *    this.assert(this.user, 401, 'Please login!');\n   *\n   * See: https://github.com/jshttp/http-assert\n   *\n   * @param {Mixed} test\n   * @param {Number} status\n   * @param {String} message\n   * @api public\n   */\n\n  assert: httpAssert,\n\n  /**\n   * Throw an error with `status` (default 500) and\n   * `msg`. Note that these are user-level\n   * errors, and the message may be exposed to the client.\n   *\n   *    this.throw(403)\n   *    this.throw(400, 'name required')\n   *    this.throw('something exploded')\n   *    this.throw(new Error('invalid'))\n   *    this.throw(400, new Error('invalid'))\n   *\n   * See: https://github.com/jshttp/http-errors\n   *\n   * Note: `status` should only be passed as the first parameter.\n   *\n   * @param {String|Number|Error} err, msg or status\n   * @param {String|Number|Error} [err, msg or status]\n   * @param {Object} [props]\n   * @api public\n   */\n\n  throw(...args) {\n    throw createError(...args);\n  },\n\n  /**\n   * Default error handling.\n   *\n   * @param {Error} err\n   * @api private\n   */\n\n  onerror(err) {\n    // don't do anything if there is no error.\n    // this allows you to pass `this.onerror`\n    // to node-style callbacks.\n    if (null == err) return;\n\n    // When dealing with cross-globals a normal `instanceof` check doesn't work properly.\n    // See https://github.com/koajs/koa/issues/1466\n    // We can probably remove it once jest fixes https://github.com/facebook/jest/issues/2549.\n    const isNativeError =\n      Object.prototype.toString.call(err) === '[object Error]' ||\n      err instanceof Error;\n    if (!isNativeError) err = new Error(util.format('non-error thrown: %j', err));\n\n    let headerSent = false;\n    if (this.headerSent || !this.writable) {\n      headerSent = err.headerSent = true;\n    }\n\n    // delegate\n    this.app.emit('error', err, this);\n\n    // nothing we can do here other\n    // than delegate to the app-level\n    // handler and log.\n    if (headerSent) {\n      return;\n    }\n\n    const { res } = this;\n\n    // first unset all headers\n    /* istanbul ignore else */\n    if (typeof res.getHeaderNames === 'function') {\n      res.getHeaderNames().forEach(name => res.removeHeader(name));\n    } else {\n      res._headers = {}; // Node < 7.7\n    }\n\n    // then set those specified\n    this.set(err.headers);\n\n    // force text/plain\n    this.type = 'text';\n\n    let statusCode = err.status || err.statusCode;\n\n    // ENOENT support\n    if ('ENOENT' === err.code) statusCode = 404;\n\n    // default to 500\n    if ('number' !== typeof statusCode || !statuses[statusCode]) statusCode = 500;\n\n    // respond\n    const code = statuses[statusCode];\n    const msg = err.expose ? err.message : code;\n    this.status = err.status = statusCode;\n    this.length = Buffer.byteLength(msg);\n    res.end(msg);\n  },\n\n  get cookies() {\n    if (!this[COOKIES]) {\n      this[COOKIES] = new Cookies(this.req, this.res, {\n        keys: this.app.keys,\n        secure: this.request.secure\n      });\n    }\n    return this[COOKIES];\n  },\n\n  set cookies(_cookies) {\n    this[COOKIES] = _cookies;\n  }\n};\n\n/**\n * Custom inspection implementation for newer Node.js versions.\n *\n * @return {Object}\n * @api public\n */\n\n/* istanbul ignore else */\nif (util.inspect.custom) {\n  module.exports[util.inspect.custom] = module.exports.inspect;\n}\n\n/**\n * Response delegation.\n */\n\ndelegate(proto, 'response')\n  .method('attachment')\n  .method('redirect')\n  .method('remove')\n  .method('vary')\n  .method('has')\n  .method('set')\n  .method('append')\n  .method('flushHeaders')\n  .access('status')\n  .access('message')\n  .access('body')\n  .access('length')\n  .access('type')\n  .access('lastModified')\n  .access('etag')\n  .getter('headerSent')\n  .getter('writable');\n\n/**\n * Request delegation.\n */\n\ndelegate(proto, 'request')\n  .method('acceptsLanguages')\n  .method('acceptsEncodings')\n  .method('acceptsCharsets')\n  .method('accepts')\n  .method('get')\n  .method('is')\n  .access('querystring')\n  .access('idempotent')\n  .access('socket')\n  .access('search')\n  .access('method')\n  .access('query')\n  .access('path')\n  .access('url')\n  .access('accept')\n  .getter('origin')\n  .getter('href')\n  .getter('subdomains')\n  .getter('protocol')\n  .getter('host')\n  .getter('hostname')\n  .getter('URL')\n  .getter('header')\n  .getter('headers')\n  .getter('secure')\n  .getter('stale')\n  .getter('fresh')\n  .getter('ips')\n  .getter('ip');\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}